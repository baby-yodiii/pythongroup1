2025-04-29 12:12:41,883 - INFO - App v1 - <module> - Application starting up.
2025-04-29 12:12:41,884 - INFO - App v1 - initialize_database - Initializing database...
2025-04-29 12:12:41,911 - INFO - App v1 - initialize_database - Default admin user not found. Creating...
2025-04-29 12:12:42,094 - INFO - App v1 - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-29 12:12:42,097 - INFO - App v1 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 12:12:43,109 - INFO - App v1 - __init__ - Initializing GUI application.
2025-04-29 12:12:43,132 - INFO - App v1 - show_login_frame - Displaying Login Frame.
2025-04-29 12:12:43,134 - INFO - App v1 - switch_frame - Switching frame to: LoginFrame
2025-04-29 12:12:53,223 - INFO - App v1 - verify_login - Attempting login for user: admin
2025-04-29 12:12:53,402 - WARNING - App v1 - verify_login - Login failed for user: admin - Incorrect password.
2025-04-29 12:13:20,899 - INFO - App v1 - verify_login - Attempting login for user: admin
2025-04-29 12:13:21,079 - INFO - App v1 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 12:13:21,079 - INFO - App v1 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 12:13:21,079 - INFO - App v1 - switch_frame - Switching frame to: AdminFrame
2025-04-29 12:13:21,082 - INFO - App v1 - __init__ - Initializing AdminFrame.
2025-04-29 12:13:21,084 - INFO - App v1 - show_user_management_view - Admin switching to User Management view.
2025-04-29 12:13:21,134 - INFO - App v1 - load_user_list - Loading user list in UserManagementViewAdmin.
2025-04-29 12:13:31,080 - INFO - App v1 - on_user_select - User selected: ID 1, Username: admin
2025-04-29 12:13:47,710 - WARNING - App v1 - edit_user - Edit user functionality (ID: 1) is not yet implemented.
2025-04-29 12:14:09,331 - INFO - App v1 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 12:14:09,347 - WARNING - App v1 - __init__ - StaffManagementViewAdmin UI is not implemented.
2025-04-29 12:14:13,377 - INFO - App v1 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 12:14:13,395 - INFO - App v1 - load_patient_list - Loading patient list in PatientManagementView.
2025-04-29 12:14:13,395 - INFO - App v1 - load_patient_list - No patients found in database.
2025-04-29 12:14:15,900 - INFO - App v1 - show_user_management_view - Admin switching to User Management view.
2025-04-29 12:14:15,938 - INFO - App v1 - load_user_list - Loading user list in UserManagementViewAdmin.
2025-04-29 12:14:17,093 - INFO - App v1 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 12:14:17,127 - INFO - App v1 - load_patient_list - Loading patient list in PatientManagementView.
2025-04-29 12:14:17,128 - INFO - App v1 - load_patient_list - No patients found in database.
2025-04-29 12:19:25,332 - INFO - App v1 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 12:19:25,345 - WARNING - App v1 - __init__ - StaffManagementViewAdmin UI is not implemented.
2025-04-29 12:21:03,574 - INFO - App v1 - show_user_management_view - Admin switching to User Management view.
2025-04-29 12:21:03,599 - INFO - App v1 - load_user_list - Loading user list in UserManagementViewAdmin.
2025-04-29 12:45:19,476 - INFO - App v1 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 12:45:19,517 - INFO - App v1 - load_patient_list - Loading patient list in PatientManagementView.
2025-04-29 12:45:19,518 - INFO - App v1 - load_patient_list - No patients found in database.
2025-04-29 12:45:25,459 - INFO - App v1 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 12:45:25,477 - WARNING - App v1 - __init__ - StaffManagementViewAdmin UI is not implemented.
2025-04-29 12:45:26,438 - INFO - App v1 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 12:45:26,457 - INFO - App v1 - load_patient_list - Loading patient list in PatientManagementView.
2025-04-29 12:45:26,458 - INFO - App v1 - load_patient_list - No patients found in database.
2025-04-29 12:50:15,827 - INFO - App v1 - show_user_management_view - Admin switching to User Management view.
2025-04-29 12:50:15,872 - INFO - App v1 - load_user_list - Loading user list in UserManagementViewAdmin.
2025-04-29 12:52:42,623 - INFO - App v1 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 12:52:42,661 - INFO - App v1 - load_patient_list - Loading patient list in PatientManagementView.
2025-04-29 12:52:42,661 - INFO - App v1 - load_patient_list - No patients found in database.
2025-04-29 12:58:02,260 - INFO - App v1 - <module> - Application has finished.
2025-04-29 13:11:11,016 - INFO - App v2 - <module> - Application starting up.
2025-04-29 13:11:11,016 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 13:11:11,017 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 13:11:11,071 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 13:11:11,090 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 13:11:11,090 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 13:11:17,969 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 13:11:18,150 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 13:11:18,150 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 13:11:18,150 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 13:11:18,153 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 13:11:18,156 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:11:18,159 - ERROR - App v2 - login_successful - Error switching frame after login for role Admin: 'UserManagementViewAdmin' object has no attribute 'reg_frame'
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 362, in login_successful
    self.switch_frame(AdminFrame)
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 325, in switch_frame
    self._current_frame = frame_class(self, *args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1083, in __init__
    self.show_user_management_view() # Default view for Admin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1129, in show_user_management_view
    UserManagementViewAdmin(self.content_frame, self.master).pack(fill=tk.BOTH, expand=True)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1183, in __init__
    self.create_widgets()
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1230, in create_widgets
    ttk.Label(self.reg_frame, text="Username:").grid(row=0, column=0, padx=5, pady=5, sticky="w")
              ^^^^^^^^^^^^^^
AttributeError: 'UserManagementViewAdmin' object has no attribute 'reg_frame'
2025-04-29 13:11:21,954 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 13:11:21,954 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 13:11:23,787 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 13:11:26,440 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 13:11:26,452 - INFO - App v2 - <module> - Application has finished.
2025-04-29 13:13:09,229 - INFO - App v2 - <module> - Application starting up.
2025-04-29 13:13:09,229 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 13:13:09,229 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 13:13:09,285 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 13:13:09,303 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 13:13:09,304 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 13:13:17,520 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 13:13:17,706 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 13:13:17,706 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 13:13:17,706 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 13:13:17,709 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 13:13:17,712 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:13:17,715 - ERROR - App v2 - login_successful - Error switching frame after login for role Admin: 'UserManagementViewAdmin' object has no attribute 'role_specific_frame'
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 362, in login_successful
    self.switch_frame(AdminFrame)
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 325, in switch_frame
    self._current_frame = frame_class(self, *args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1083, in __init__
    self.show_user_management_view() # Default view for Admin
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1129, in show_user_management_view
    UserManagementViewAdmin(self.content_frame, self.master).pack(fill=tk.BOTH, expand=True)
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1183, in __init__
    self.create_widgets()
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 1234, in create_widgets
    self.patient_fields_frame = ttk.Frame(self.role_specific_frame, padding="5")
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'UserManagementViewAdmin' object has no attribute 'role_specific_frame'
2025-04-29 13:13:22,489 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 13:13:22,490 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 13:13:23,912 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 13:13:25,798 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 13:13:25,810 - INFO - App v2 - <module> - Application has finished.
2025-04-29 13:41:35,551 - INFO - App v2 - <module> - Application starting up.
2025-04-29 13:41:35,552 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 13:41:35,553 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 13:41:35,606 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 13:41:35,625 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 13:41:35,625 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 13:41:42,439 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 13:41:42,623 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 13:41:42,623 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 13:41:42,623 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 13:41:42,627 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 13:41:42,630 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:41:42,633 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 13:41:47,836 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:41:47,859 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:41:47,860 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:41:55,222 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:41:55,246 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:41:55,247 - INFO - App v2 - load_staff_list - No staff found in database.
2025-04-29 13:41:59,684 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:41:59,715 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:41:59,715 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:42:11,413 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:42:11,438 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:42:11,438 - INFO - App v2 - load_staff_list - No staff found in database.
2025-04-29 13:42:52,682 - INFO - App v2 - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-29 13:42:52,869 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 2
2025-04-29 13:42:52,869 - INFO - App v2 - add_staff - User login created for 'az'. User ID: 2
2025-04-29 13:42:52,873 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 13:42:52,874 - INFO - App v2 - add_staff - Staff record created for 'Adonay Zeru'. Staff ID: 1, Linked to User ID: 2
2025-04-29 13:42:55,986 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:43:30,429 - INFO - App v2 - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-29 13:43:30,621 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 3
2025-04-29 13:43:30,621 - INFO - App v2 - add_staff - User login created for 'as'. User ID: 3
2025-04-29 13:43:30,624 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 2
2025-04-29 13:43:30,624 - INFO - App v2 - add_staff - Staff record created for 'Angela Smith'. Staff ID: 2, Linked to User ID: 3
2025-04-29 13:43:32,547 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:43:44,238 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:43:44,261 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:43:46,522 - INFO - App v2 - on_staff_select - Staff selected: ID 2 (Admin)
2025-04-29 13:43:50,200 - INFO - App v2 - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-29 13:43:53,641 - INFO - App v2 - on_staff_select - Staff selected: ID 2 (Admin)
2025-04-29 13:43:55,520 - INFO - App v2 - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-29 13:43:56,583 - INFO - App v2 - on_staff_select - Staff selected: ID 2 (Admin)
2025-04-29 13:43:58,306 - INFO - App v2 - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-29 13:44:00,252 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:44:00,279 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:44:00,279 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:46:30,146 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:46:30,171 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:46:36,459 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:46:36,793 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:46:36,794 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:46:39,054 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:46:39,076 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 13:46:41,578 - INFO - App v2 - on_user_select - User selected: ID 2, Username: az (Admin)
2025-04-29 13:46:50,734 - INFO - App v2 - on_user_select - User selected: ID 3, Username: as (Admin)
2025-04-29 13:46:55,652 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:46:55,674 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:46:55,675 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:47:00,298 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:47:00,315 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 13:49:12,698 - INFO - App v2 - on_user_select - User selected: ID 3, Username: as (Admin)
2025-04-29 13:49:28,406 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:49:28,427 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:49:28,428 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:49:30,024 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:49:30,054 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:50:42,912 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:50:42,925 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 13:51:50,921 - INFO - App v2 - on_user_select - User selected: ID 3, Username: as (Admin)
2025-04-29 13:53:25,679 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:53:25,701 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:53:25,702 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 13:56:48,323 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 13:56:48,340 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 13:56:49,285 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 13:56:49,296 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 13:56:53,065 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 13:56:53,089 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 13:56:53,090 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:17:53,291 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 14:17:54,923 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 14:17:54,947 - INFO - App v2 - <module> - Application has finished.
2025-04-29 14:18:15,935 - INFO - App v2 - <module> - Application starting up.
2025-04-29 14:18:15,935 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 14:18:15,936 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 14:18:15,992 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 14:18:16,009 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 14:18:16,009 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 14:18:24,818 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 14:18:25,004 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 14:18:25,004 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 14:18:25,004 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 14:18:25,007 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 14:18:25,010 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 14:18:25,014 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 14:18:29,258 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 14:18:29,284 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 14:18:29,285 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:18:37,020 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 14:18:37,044 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 14:18:41,949 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 14:18:41,981 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 14:18:41,981 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:27:47,028 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 14:27:49,997 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 14:27:50,022 - INFO - App v2 - <module> - Application has finished.
2025-04-29 14:27:52,221 - INFO - App v2 - <module> - Application starting up.
2025-04-29 14:27:52,221 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 14:27:52,222 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 14:27:52,275 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 14:27:52,293 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 14:27:52,293 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 14:27:57,914 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 14:27:58,094 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 14:27:58,094 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 14:27:58,094 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 14:27:58,096 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 14:27:58,101 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 14:27:58,104 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 14:32:48,771 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 14:32:48,789 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 14:33:02,446 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 14:33:02,477 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 14:33:02,477 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:33:03,367 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 14:33:03,400 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 14:34:35,353 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 14:34:35,384 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 14:34:35,384 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:36:28,807 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 14:36:28,827 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 14:49:14,876 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 14:49:17,744 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 14:49:17,765 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 14:49:17,766 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 14:49:21,267 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 14:49:23,027 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 14:49:23,056 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:04:35,321 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:04:35,321 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:04:35,323 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:04:35,617 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:04:35,636 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:04:35,636 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:04:41,855 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 15:04:42,035 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 15:04:42,035 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 15:04:42,035 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 15:04:42,038 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 15:04:42,041 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:04:42,044 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:04:49,255 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:04:49,275 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:04:49,275 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:05:26,296 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:05:28,038 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 15:05:28,064 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:06:17,454 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:06:17,455 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:06:17,456 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:06:17,510 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:06:17,528 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:06:17,528 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:06:27,054 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 15:06:27,233 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 15:06:27,234 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 15:06:27,234 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 15:06:27,237 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 15:06:27,240 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:06:27,244 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:06:29,108 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:06:29,130 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:06:29,131 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:06:33,938 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:06:35,698 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 15:06:35,726 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:06:42,084 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:06:42,085 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:06:42,086 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:06:42,140 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:06:42,158 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:06:42,159 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:06:49,958 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 15:06:50,139 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 15:06:50,139 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 15:06:50,139 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 15:06:50,142 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 15:06:50,146 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:06:50,149 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:06:52,027 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:06:52,047 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:06:52,048 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:06:59,468 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 15:06:59,500 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 15:07:04,602 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:07:04,629 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:07:04,630 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:07:05,940 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 15:07:05,966 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 15:07:10,002 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:07:23,772 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:07:25,163 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 15:07:25,182 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:18:29,578 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:18:29,578 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:18:29,579 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:18:29,634 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:18:29,652 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:18:29,652 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:18:40,949 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 15:18:41,130 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 15:18:41,130 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 15:18:41,130 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 15:18:41,132 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 15:18:41,135 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:18:41,139 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:18:43,519 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:18:43,544 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:18:43,545 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:18:44,575 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 15:18:44,608 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 15:18:54,172 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:18:54,205 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:18:54,206 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 15:25:35,046 - INFO - App v2 - add_patient - Attempting to add new patient and create login (Admin).
2025-04-29 15:25:35,233 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 4
2025-04-29 15:25:35,233 - INFO - App v2 - add_patient - User login created for 'jd'. User ID: 4
2025-04-29 15:25:35,237 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 15:25:35,237 - INFO - App v2 - add_patient - Patient record created for 'John Doe'. Patient ID: 1, Linked to User ID: 4
2025-04-29 15:25:35,241 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 15:25:37,648 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:25:40,735 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:25:40,759 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:25:44,924 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 15:25:44,936 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 15:25:50,058 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 15:25:50,083 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 15:25:55,528 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-29 15:25:55,528 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:25:55,528 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:26:08,059 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 15:26:08,241 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 15:26:08,241 - INFO - App v2 - login_successful - Login successful. User ID: 4, Role: Patient. Navigating to role frame.
2025-04-29 15:26:08,241 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 15:26:08,244 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 15:26:08,249 - ERROR - App v2 - login_successful - Error switching frame after login for role Patient, user_id 4: unknown option "-bg"
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 395, in login_successful
    self.switch_frame(PatientFrame, patient_data)
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 372, in switch_frame
    self._current_frame = frame_class(self, *args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 508, in __init__
    self.create_widgets()
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 534, in create_widgets
    background=info_frame.cget('bg'), # Match LabelFrame background
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\AppData\Local\Programs\Python\Python312\Lib\tkinter\__init__.py", line 1728, in cget
    return self.tk.call(self._w, 'cget', '-' + key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: unknown option "-bg"
2025-04-29 15:26:18,476 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:26:18,476 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:26:55,158 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:27:01,371 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:27:01,371 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:27:01,372 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:27:01,428 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:27:01,446 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:27:01,446 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:27:13,992 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 15:27:14,173 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 15:27:14,173 - INFO - App v2 - login_successful - Login successful. User ID: 4, Role: Patient. Navigating to role frame.
2025-04-29 15:27:14,174 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 15:27:14,177 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 15:27:14,182 - ERROR - App v2 - login_successful - Error switching frame after login for role Patient, user_id 4: unknown option "-bg"
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 395, in login_successful
    self.switch_frame(PatientFrame, patient_data)
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 372, in switch_frame
    self._current_frame = frame_class(self, *args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 508, in __init__
    self.create_widgets()
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 534, in create_widgets
    background=info_frame.cget('bg'), # Match LabelFrame background
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\AppData\Local\Programs\Python\Python312\Lib\tkinter\__init__.py", line 1728, in cget
    return self.tk.call(self._w, 'cget', '-' + key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: unknown option "-bg"
2025-04-29 15:27:17,843 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:27:17,843 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:28:49,632 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:28:51,207 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 15:28:51,218 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:31:17,272 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:31:17,273 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:31:17,274 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:31:17,329 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:31:17,347 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:31:17,347 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:31:27,636 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 15:31:27,816 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 15:31:27,816 - INFO - App v2 - login_successful - Login successful. User ID: 4, Role: Patient. Navigating to role frame.
2025-04-29 15:31:27,817 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 15:31:27,819 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 15:31:27,831 - ERROR - App v2 - login_successful - Error switching frame after login for role Patient, user_id 4: 'sqlite3.Row' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 395, in login_successful
    self.switch_frame(PatientFrame, patient_data)
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 372, in switch_frame
    self._current_frame = frame_class(self, *args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 509, in __init__
    self.load_patient_info()
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 645, in load_patient_info
    content = self.patient_data.get(key.replace(":", "").lower().replace(" ","_"), 'N/A') or 'N/A'
              ^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'sqlite3.Row' object has no attribute 'get'
2025-04-29 15:31:41,648 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:31:41,648 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:31:53,234 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 15:31:55,178 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 15:31:55,191 - INFO - App v2 - <module> - Application has finished.
2025-04-29 15:37:34,803 - INFO - App v2 - <module> - Application starting up.
2025-04-29 15:37:34,803 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 15:37:34,804 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 15:37:34,858 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 15:37:34,877 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:37:34,877 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:37:46,245 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 15:37:46,425 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 15:37:46,425 - INFO - App v2 - login_successful - Login successful. User ID: 4, Role: Patient. Navigating to role frame.
2025-04-29 15:37:46,427 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 15:37:46,429 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 15:37:46,442 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-29 15:37:46,442 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-29 15:38:12,132 - INFO - App v2 - logout - User logged out: User ID 4, Role Patient
2025-04-29 15:38:12,132 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:38:12,132 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:38:20,531 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 15:38:20,712 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 15:38:20,712 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 15:38:20,712 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 15:38:20,715 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 15:38:20,717 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 15:38:20,721 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 15:38:23,175 - INFO - App v2 - on_user_select - User selected: ID 3, Username: as (Admin)
2025-04-29 15:38:29,820 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-29 15:38:29,820 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 15:38:29,820 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 15:38:35,455 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 15:38:35,635 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 15:38:35,635 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 15:38:35,636 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 15:38:35,639 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 15:38:35,642 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 15:38:35,660 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 15:38:41,895 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 15:38:41,927 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 15:38:49,585 - INFO - App v2 - on_patient_select - Patient selected: ID 1 (Staff 2)
2025-04-29 15:38:51,067 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 15:38:51,083 - WARNING - App v2 - __init__ - AppointmentManagementView UI is not implemented.
2025-04-29 15:38:53,887 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 15:38:53,889 - WARNING - App v2 - __init__ - TreatmentManagementView UI is not implemented.
2025-04-29 15:38:56,225 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 15:38:56,227 - WARNING - App v2 - __init__ - AppointmentManagementView UI is not implemented.
2025-04-29 15:39:47,581 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 15:39:47,582 - WARNING - App v2 - __init__ - TreatmentManagementView UI is not implemented.
2025-04-29 16:29:52,388 - INFO - App v2 - <module> - Application has finished.
2025-04-29 16:29:54,145 - INFO - App v2 - <module> - Application starting up.
2025-04-29 16:29:54,146 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 16:29:54,147 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 16:29:54,202 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 16:29:54,230 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 16:29:54,230 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 16:30:04,523 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 16:30:04,703 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 16:30:04,703 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 16:30:04,703 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 16:30:04,706 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 16:30:04,709 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 16:30:04,726 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 16:30:11,805 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 16:30:11,837 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 16:30:11,837 - INFO - App v2 - load_appointment_list - No appointments found for display (Staff 2).
2025-04-29 16:31:05,901 - INFO - App v2 - schedule_appointment - Attempting to schedule new appointment (Staff 2)
2025-04-29 16:31:22,114 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 16:31:23,480 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 16:31:23,499 - INFO - App v2 - <module> - Application has finished.
2025-04-29 17:28:26,494 - INFO - App v2 - <module> - Application starting up.
2025-04-29 17:28:26,495 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 17:28:26,496 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 17:28:26,549 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 17:28:26,567 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 17:28:26,568 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 17:28:39,399 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 17:28:39,580 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 17:28:39,580 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 17:28:39,581 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 17:28:39,583 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 17:28:39,586 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 17:28:39,603 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 17:28:47,433 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 17:28:47,474 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 17:28:48,723 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 17:28:48,749 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:28:48,749 - INFO - App v2 - load_appointment_list - No appointments found for display (Staff 2).
2025-04-29 17:28:54,619 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 17:28:56,932 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 17:28:56,944 - INFO - App v2 - <module> - Application has finished.
2025-04-29 17:30:12,710 - INFO - App v2 - <module> - Application starting up.
2025-04-29 17:30:12,710 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 17:30:12,711 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 17:30:12,766 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 17:30:12,784 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 17:30:12,784 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 17:30:20,573 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 17:30:20,754 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 17:30:20,754 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 17:30:20,755 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 17:30:20,758 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 17:30:20,761 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 17:30:20,777 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 17:30:24,049 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 17:30:24,078 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:30:24,078 - INFO - App v2 - load_appointment_list - No appointments found for display (Staff 2).
2025-04-29 17:30:49,067 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 17:35:23,773 - INFO - App v2 - <module> - Application has finished.
2025-04-29 17:35:25,214 - INFO - App v2 - <module> - Application starting up.
2025-04-29 17:35:25,214 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 17:35:25,215 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 17:35:25,270 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 17:35:25,288 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 17:35:25,288 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 17:35:33,302 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 17:35:33,482 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 17:35:33,482 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 17:35:33,482 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 17:35:33,485 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 17:35:33,488 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 17:35:33,505 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 17:35:35,105 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 17:35:35,195 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:35:35,196 - INFO - App v2 - load_appointment_list - No appointments found for display (Staff 2).
2025-04-29 17:35:59,488 - INFO - App v2 - schedule_appointment - Attempting to schedule new appointment (Staff 2)
2025-04-29 17:35:59,497 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 17:35:59,498 - INFO - App v2 - schedule_appointment - Appointment scheduled successfully. ID: 1
2025-04-29 17:36:01,801 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:36:06,499 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 17:36:06,526 - INFO - App v2 - load_treatment_list - Loading treatment list (Staff 2)
2025-04-29 17:36:06,526 - INFO - App v2 - load_treatment_list - No treatments found for display (Staff 2).
2025-04-29 17:36:27,782 - INFO - App v2 - record_treatment - Attempting to record new treatment (Staff 2)
2025-04-29 17:36:32,237 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 17:37:28,199 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 17:37:28,267 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:37:30,787 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 17:37:30,808 - INFO - App v2 - load_treatment_list - Loading treatment list (Staff 2)
2025-04-29 17:37:30,808 - INFO - App v2 - load_treatment_list - No treatments found for display (Staff 2).
2025-04-29 17:42:16,208 - INFO - App v2 - <module> - Application has finished.
2025-04-29 17:57:20,494 - INFO - App v2 - <module> - Application starting up.
2025-04-29 17:57:20,494 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 17:57:20,495 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 17:57:20,550 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 17:57:20,568 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 17:57:20,568 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 17:57:30,780 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 17:57:30,961 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 17:57:30,961 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 17:57:30,961 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 17:57:30,964 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 17:57:30,968 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 17:57:30,984 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 17:57:33,113 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 17:57:33,199 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 17:57:37,585 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 2)
2025-04-29 17:57:41,378 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 17:57:45,960 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 18:00:06,890 - INFO - App v2 - <module> - Application has finished.
2025-04-29 18:00:08,263 - INFO - App v2 - <module> - Application starting up.
2025-04-29 18:00:08,263 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 18:00:08,264 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 18:00:08,319 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 18:00:08,339 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:00:08,339 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:00:16,248 - INFO - App v2 - verify_login - Attempting login for user: as
2025-04-29 18:00:16,429 - INFO - App v2 - verify_login - Login successful for user: as, Role: Staff
2025-04-29 18:00:16,429 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 18:00:16,430 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 18:00:16,433 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-29 18:00:16,436 - INFO - App v2 - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-29 18:00:16,452 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-29 18:00:17,994 - INFO - App v2 - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-29 18:00:18,081 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 2)
2025-04-29 18:00:19,325 - INFO - App v2 - show_treatment_management_view - Staff 2 switching to Treatment Management view.
2025-04-29 18:00:19,397 - INFO - App v2 - load_treatment_list - Loading treatment list (Staff 2)
2025-04-29 18:00:19,397 - INFO - App v2 - load_treatment_list - No treatments found for display (Staff 2).
2025-04-29 18:00:30,362 - INFO - App v2 - record_treatment - Attempting to record new treatment (Staff 2)
2025-04-29 18:00:30,372 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 18:00:30,372 - INFO - App v2 - record_treatment - Treatment recorded successfully. ID: 1 by Staff ID: 2
2025-04-29 18:00:32,298 - INFO - App v2 - load_treatment_list - Loading treatment list (Staff 2)
2025-04-29 18:01:23,157 - INFO - App v2 - logout - User logged out: User ID 3, Role Staff
2025-04-29 18:01:23,157 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:01:23,157 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:01:32,348 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 18:01:32,527 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 18:01:32,527 - INFO - App v2 - login_successful - Login successful. User ID: 4, Role: Patient. Navigating to role frame.
2025-04-29 18:01:32,528 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 18:01:32,531 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 18:01:32,543 - INFO - App v2 - load_appointments - Found 1 appointments for patient_id: 1
2025-04-29 18:01:32,544 - INFO - App v2 - load_treatments - Found 1 treatments for patient_id: 1
2025-04-29 18:01:42,506 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 18:01:44,215 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 18:01:44,233 - INFO - App v2 - <module> - Application has finished.
2025-04-29 18:03:59,328 - INFO - App v2 - <module> - Application starting up.
2025-04-29 18:03:59,328 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 18:03:59,329 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 18:03:59,397 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 18:03:59,415 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:03:59,416 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:04:16,160 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:04:16,340 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 18:04:16,340 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 18:04:16,340 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 18:04:16,344 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 18:04:16,347 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 18:04:16,351 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 18:04:23,266 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-29 18:04:23,267 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:04:23,267 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:04:35,760 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:04:35,761 - ERROR - App v2 - execute_query - Database Query Error: no such table: Users
Query: SELECT user_id, password, role FROM Users WHERE username = ?
Params: ('admin',)
2025-04-29 18:04:35,761 - WARNING - App v2 - verify_login - Login failed for user: admin - User not found.
2025-04-29 18:04:53,839 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:04:54,025 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 18:04:54,026 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 18:04:54,026 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 18:04:54,029 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 18:04:54,031 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 18:04:54,035 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 18:05:05,121 - INFO - App v2 - <module> - Application has finished.
2025-04-29 18:14:19,616 - INFO - App v2 - <module> - Application starting up.
2025-04-29 18:14:19,616 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 18:14:19,617 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 18:14:19,672 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 18:14:19,689 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:14:19,689 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:14:37,686 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:14:37,688 - ERROR - App v2 - execute_query - Database Query Error: no such table: Users
Query: SELECT user_id, password, role FROM Users WHERE username = ?
Params: ('admin',)
2025-04-29 18:14:37,688 - WARNING - App v2 - verify_login - Login failed for user: admin - User not found.
2025-04-29 18:14:42,737 - WARNING - App v2 - attempt_login - Login attempt failed: Username or password empty.
2025-04-29 18:14:51,359 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:14:51,361 - ERROR - App v2 - execute_query - Database Query Error: no such table: Users
Query: SELECT user_id, password, role FROM Users WHERE username = ?
Params: ('admin',)
2025-04-29 18:14:51,361 - WARNING - App v2 - verify_login - Login failed for user: admin - User not found.
2025-04-29 18:15:11,937 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 18:15:14,256 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 18:15:14,268 - INFO - App v2 - <module> - Application has finished.
2025-04-29 18:15:17,226 - INFO - App v2 - <module> - Application starting up.
2025-04-29 18:15:17,226 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 18:15:17,256 - INFO - App v2 - initialize_database - Default admin user not found. Creating...
2025-04-29 18:15:17,440 - INFO - App v2 - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-29 18:15:17,444 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 18:15:17,517 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 18:15:17,537 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 18:15:17,537 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 18:15:23,022 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 18:15:23,202 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 18:15:23,202 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 18:15:23,202 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 18:15:23,205 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 18:15:23,209 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 18:15:23,213 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 18:15:31,169 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 18:15:32,767 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 18:15:32,780 - INFO - App v2 - <module> - Application has finished.
2025-04-29 19:16:47,944 - INFO - App v2 - <module> - Application starting up.
2025-04-29 19:16:47,944 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 19:16:47,945 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 19:16:48,317 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 19:16:48,337 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 19:16:48,338 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 19:16:59,001 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-29 19:16:59,181 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-29 19:16:59,181 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-29 19:16:59,181 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-29 19:16:59,186 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-29 19:16:59,189 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-29 19:16:59,193 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-29 19:17:02,548 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 19:17:02,568 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 19:17:02,569 - INFO - App v2 - load_staff_list - No staff found in database.
2025-04-29 19:17:03,531 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 19:17:03,564 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 19:17:03,565 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 19:17:05,053 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 19:17:05,090 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 19:17:05,091 - INFO - App v2 - load_staff_list - No staff found in database.
2025-04-29 19:17:05,863 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-29 19:17:05,901 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 19:17:05,901 - INFO - App v2 - load_patient_list - No patients found in database.
2025-04-29 19:18:13,337 - INFO - App v2 - add_patient - Attempting to add new patient and create login (Admin).
2025-04-29 19:18:13,530 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 2
2025-04-29 19:18:13,531 - INFO - App v2 - add_patient - User login created for 'jd'. User ID: 2
2025-04-29 19:18:13,535 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 19:18:13,535 - INFO - App v2 - add_patient - Patient record created for 'John Doe'. Patient ID: 1, Linked to User ID: 2
2025-04-29 19:18:13,539 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 19:18:15,784 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-29 19:18:19,489 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-29 19:18:20,133 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 19:18:20,134 - INFO - App v2 - load_staff_list - No staff found in database.
2025-04-29 19:18:42,190 - INFO - App v2 - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-29 19:18:42,378 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 3
2025-04-29 19:18:42,378 - INFO - App v2 - add_staff - User login created for 'az'. User ID: 3
2025-04-29 19:18:42,382 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-29 19:18:42,382 - INFO - App v2 - add_staff - Staff record created for 'Adonay Zeru'. Staff ID: 1, Linked to User ID: 3
2025-04-29 19:18:44,519 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-29 19:18:48,331 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-29 19:18:48,331 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 19:18:48,331 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 19:18:58,917 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 19:18:59,102 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 19:18:59,102 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-29 19:18:59,103 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 19:18:59,107 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 19:18:59,122 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-29 19:18:59,122 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-29 19:19:08,009 - INFO - App v2 - show_booking_view - Patient 1 opening booking window.
2025-04-29 19:19:13,255 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 19:19:16,240 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 19:19:16,269 - INFO - App v2 - <module> - Application has finished.
2025-04-29 19:24:13,813 - INFO - App v2 - <module> - Application starting up.
2025-04-29 19:24:13,814 - INFO - App v2 - initialize_database - Initializing database...
2025-04-29 19:24:13,815 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-29 19:24:13,869 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-29 19:24:13,890 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 19:24:13,890 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 19:24:23,312 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-29 19:24:23,492 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-29 19:24:23,492 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-29 19:24:23,493 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-29 19:24:23,497 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-29 19:24:23,501 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-29 19:24:23,520 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-29 19:24:30,474 - INFO - App v2 - show_schedule_view - Staff 1 switching to Schedule View.
2025-04-29 19:24:35,478 - INFO - App v2 - logout - User logged out: User ID 3, Role Staff
2025-04-29 19:24:35,479 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-29 19:24:35,479 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-29 19:24:48,186 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-29 19:24:48,366 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-29 19:24:48,367 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-29 19:24:48,368 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-29 19:24:48,372 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-29 19:24:48,385 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-29 19:24:48,385 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-29 19:24:53,691 - INFO - App v2 - show_booking_view - Patient 1 opening booking window.
2025-04-29 19:24:55,324 - INFO - App v2 - on_closing - Application window closing.
2025-04-29 19:24:57,259 - INFO - App v2 - on_closing - Application shutting down.
2025-04-29 19:24:57,283 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:04:13,059 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:04:13,060 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:04:13,068 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:04:13,489 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:04:13,508 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:04:13,509 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:04:23,592 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-30 16:04:23,772 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 16:04:23,772 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 16:04:23,772 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-30 16:04:23,779 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-30 16:04:23,782 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-30 16:04:23,785 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 16:04:29,172 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 16:04:29,194 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 16:04:35,308 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 16:04:35,335 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 16:04:37,958 - INFO - App v2 - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 16:04:37,985 - INFO - App v2 - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 16:04:41,100 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-30 16:04:41,111 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 16:04:46,322 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-30 16:04:46,323 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:04:46,323 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:04:55,118 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-30 16:04:55,302 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 16:04:55,302 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-30 16:04:55,302 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-30 16:04:55,305 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 16:04:55,319 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-30 16:04:55,319 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-30 16:05:01,910 - INFO - App v2 - show_booking_view - Patient 1 opening booking window.
2025-04-30 16:06:48,908 - INFO - App v2 - on_closing - Application window closing.
2025-04-30 16:06:50,730 - INFO - App v2 - on_closing - Application shutting down.
2025-04-30 16:06:50,747 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:06:52,390 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:06:52,391 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:06:52,392 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:06:52,444 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:06:52,461 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:06:52,461 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:07:00,963 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-30 16:07:01,145 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 16:07:01,145 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-30 16:07:01,145 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-30 16:07:01,149 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 16:07:01,160 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-30 16:07:01,161 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-30 16:07:05,938 - ERROR - App v2 - show_booking_view - Error creating PatientBookingView: 'sqlite3.Row' object has no attribute 'get'
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 786, in show_booking_view
    booking_window = PatientBookingView(
                     ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 2588, in __init__
    self.patient_phone = patient_data.get('contact_number')
                         ^^^^^^^^^^^^^^^^
AttributeError: 'sqlite3.Row' object has no attribute 'get'
2025-04-30 16:13:04,601 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:13:06,190 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:13:06,191 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:13:06,192 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:13:06,247 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:13:06,264 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:13:06,264 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:13:15,802 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-30 16:13:15,983 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 16:13:15,983 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-30 16:13:15,984 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-30 16:13:15,986 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 16:13:15,999 - INFO - App v2 - load_appointments - No appointments found for patient_id: 1
2025-04-30 16:13:15,999 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-30 16:13:30,135 - WARNING - App v2 - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 16:13:36,192 - INFO - App v2 - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 16:13:51,234 - INFO - App v2 - book_selected_appointment - Attempting booking for Patient 1, Staff 1, DateTime 2025-05-02 16:30:00
2025-04-30 16:13:51,243 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 1
2025-04-30 16:13:51,243 - INFO - App v2 - book_selected_appointment - Appointment booked successfully. ID: 1
2025-04-30 16:14:07,167 - WARNING - App v2 - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 16:14:09,604 - INFO - App v2 - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 16:14:13,761 - INFO - App v2 - book_selected_appointment - Attempting booking for Patient 1, Staff 1, DateTime 2025-04-30 16:30:00
2025-04-30 16:14:13,769 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 2
2025-04-30 16:14:13,769 - INFO - App v2 - book_selected_appointment - Appointment booked successfully. ID: 2
2025-04-30 16:14:19,015 - INFO - App v2 - on_closing - Application window closing.
2025-04-30 16:14:20,414 - INFO - App v2 - on_closing - Application shutting down.
2025-04-30 16:14:20,434 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:18:31,950 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:18:31,951 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:18:31,952 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:18:32,004 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:18:32,022 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:18:32,022 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:18:41,096 - INFO - App v2 - verify_login - Attempting login for user: jd
2025-04-30 16:18:41,278 - INFO - App v2 - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 16:18:41,278 - INFO - App v2 - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-04-30 16:18:41,279 - INFO - App v2 - switch_frame - Switching frame to: PatientFrame
2025-04-30 16:18:41,281 - INFO - App v2 - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 16:18:41,294 - INFO - App v2 - load_appointments - Found 2 appointments for patient_id: 1
2025-04-30 16:18:41,294 - INFO - App v2 - load_treatments - No treatments found for patient_id: 1
2025-04-30 16:18:54,499 - WARNING - App v2 - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 16:19:01,461 - INFO - App v2 - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-05-09
2025-04-30 16:19:06,083 - INFO - App v2 - book_selected_appointment - Attempting booking for Patient 1, Staff 1, DateTime 2025-05-09 11:00:00
2025-04-30 16:19:06,092 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 3
2025-04-30 16:19:06,092 - INFO - App v2 - book_selected_appointment - Appointment booked successfully. ID: 3
2025-04-30 16:19:11,016 - WARNING - App v2 - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 16:19:18,399 - INFO - App v2 - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-05-09
2025-04-30 16:19:27,899 - WARNING - App v2 - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 16:19:31,209 - INFO - App v2 - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 16:20:00,313 - INFO - App v2 - logout - User logged out: User ID 2, Role Patient
2025-04-30 16:20:00,313 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:20:00,314 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:20:06,906 - INFO - App v2 - verify_login - Attempting login for user: admin
2025-04-30 16:20:07,093 - INFO - App v2 - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 16:20:07,093 - INFO - App v2 - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 16:20:07,093 - INFO - App v2 - switch_frame - Switching frame to: AdminFrame
2025-04-30 16:20:07,096 - INFO - App v2 - __init__ - Initializing AdminFrame.
2025-04-30 16:20:07,098 - INFO - App v2 - show_user_management_view - Admin switching to User Management view.
2025-04-30 16:20:07,102 - INFO - App v2 - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 16:20:10,500 - INFO - App v2 - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 16:20:10,519 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 16:20:12,712 - INFO - App v2 - on_patient_select - Patient selected: ID 1 (Admin)
2025-04-30 16:20:25,282 - INFO - App v2 - logout - User logged out: User ID 1, Role Admin
2025-04-30 16:20:25,283 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:20:25,283 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:20:31,584 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:20:31,765 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 16:20:31,765 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 16:20:31,766 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 16:20:31,769 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 16:20:31,772 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 16:20:31,788 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 16:20:33,954 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 16:20:34,037 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 16:20:35,828 - INFO - App v2 - on_appointment_select - Appointment selected: ID 3 (Staff 1)
2025-04-30 16:20:44,249 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:20:45,139 - INFO - App v2 - on_appointment_select - Appointment selected: ID 3 (Staff 1)
2025-04-30 16:21:02,472 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:21:10,660 - INFO - App v2 - on_closing - Application window closing.
2025-04-30 16:21:12,553 - INFO - App v2 - on_closing - Application shutting down.
2025-04-30 16:21:12,576 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:37:23,964 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:37:23,965 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:37:23,966 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:37:24,196 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:37:24,214 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:37:24,214 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:37:35,617 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:37:35,796 - WARNING - App v2 - verify_login - Login failed for user: az - Incorrect password.
2025-04-30 16:37:43,836 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:37:44,022 - WARNING - App v2 - verify_login - Login failed for user: az - Incorrect password.
2025-04-30 16:37:51,983 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:37:52,164 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 16:37:52,164 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 16:37:52,165 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 16:37:52,167 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 16:37:52,171 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 16:37:52,187 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 16:38:01,892 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 16:43:22,129 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:43:23,301 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:43:23,301 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:43:23,302 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:43:23,356 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:43:23,373 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:43:23,373 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:43:31,128 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:43:31,307 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 16:43:31,307 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 16:43:31,308 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 16:43:31,310 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 16:43:31,314 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 16:43:31,329 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 16:43:37,512 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 16:43:37,592 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 16:43:49,138 - INFO - App v2 - on_appointment_select - Appointment selected: ID 3 (Staff 1)
2025-04-30 16:43:59,688 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:44:01,682 - INFO - App v2 - on_appointment_select - Appointment selected: ID 2 (Staff 1)
2025-04-30 16:44:27,574 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:44:29,200 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:44:29,200 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:44:29,201 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:44:29,256 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:44:29,274 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:44:29,274 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:44:35,636 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:44:35,817 - WARNING - App v2 - verify_login - Login failed for user: az - Incorrect password.
2025-04-30 16:44:43,037 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:44:43,219 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 16:44:43,219 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 16:44:43,219 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 16:44:43,222 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 16:44:43,225 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 16:44:43,241 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 16:44:47,796 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 16:44:47,879 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 16:44:52,614 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:56:00,036 - INFO - App v2 - on_closing - Application window closing.
2025-04-30 16:56:01,642 - INFO - App v2 - on_closing - Application shutting down.
2025-04-30 16:56:01,665 - INFO - App v2 - <module> - Application has finished.
2025-04-30 16:56:05,008 - INFO - App v2 - <module> - Application starting up.
2025-04-30 16:56:05,008 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 16:56:05,009 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 16:56:05,065 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 16:56:05,082 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 16:56:05,083 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 16:56:11,957 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 16:56:12,142 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 16:56:12,142 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 16:56:12,143 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 16:56:12,145 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 16:56:12,149 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 16:56:12,165 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 16:56:14,825 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 16:56:14,905 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 16:56:18,559 - INFO - App v2 - on_appointment_select - Appointment selected: ID 3 (Staff 1)
2025-04-30 16:56:21,161 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:56:24,359 - INFO - App v2 - on_appointment_select - Appointment selected: ID 2 (Staff 1)
2025-04-30 16:56:36,927 - WARNING - App v2 - cancel_appointment - Staff 1 attempting to cancel appointment ID: 2
2025-04-30 16:56:39,464 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 0
2025-04-30 16:56:39,464 - ERROR - App v2 - cancel_appointment - Failed to cancel appointment ID 2. DB Error: None
2025-04-30 16:56:47,644 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 16:56:49,231 - WARNING - App v2 - cancel_appointment - Staff 1 attempting to cancel appointment ID: 1
2025-04-30 16:56:50,463 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 0
2025-04-30 16:56:50,463 - ERROR - App v2 - cancel_appointment - Failed to cancel appointment ID 1. DB Error: None
2025-04-30 16:56:55,727 - WARNING - App v2 - remove_appointment - Staff 1 attempting to REMOVE appointment ID: 1
2025-04-30 16:57:06,082 - INFO - App v2 - on_appointment_select - Appointment selected: ID 3 (Staff 1)
2025-04-30 16:57:07,168 - WARNING - App v2 - remove_appointment - Staff 1 attempting to REMOVE appointment ID: 3
2025-04-30 16:57:09,549 - INFO - App v2 - execute_query - Query committed successfully. Last row ID: 0
2025-04-30 16:57:09,549 - ERROR - App v2 - remove_appointment - Failed to remove appointment ID 3. DB Error: None
2025-04-30 16:57:19,047 - WARNING - App v2 - cancel_appointment - Staff 1 attempting to cancel appointment ID: 3
2025-04-30 17:07:06,060 - INFO - App v2 - <module> - Application has finished.
2025-04-30 17:07:07,570 - INFO - App v2 - <module> - Application starting up.
2025-04-30 17:07:07,570 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 17:07:07,571 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 17:07:07,626 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 17:07:07,643 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 17:07:07,643 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 17:07:14,121 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 17:07:14,302 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 17:07:14,302 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 17:07:14,303 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 17:07:14,306 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 17:07:14,309 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 17:07:14,325 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 17:07:20,617 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 17:07:20,699 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 17:07:22,732 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 17:07:27,283 - INFO - App v2 - on_appointment_select - Appointment selected: ID 2 (Staff 1)
2025-04-30 17:11:27,003 - INFO - App v2 - <module> - Application has finished.
2025-04-30 17:11:28,454 - INFO - App v2 - <module> - Application starting up.
2025-04-30 17:11:28,454 - INFO - App v2 - initialize_database - Initializing database...
2025-04-30 17:11:28,455 - INFO - App v2 - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 17:11:28,510 - INFO - App v2 - __init__ - Initializing GUI application.
2025-04-30 17:11:28,527 - INFO - App v2 - show_login_frame - Displaying Login Frame.
2025-04-30 17:11:28,528 - INFO - App v2 - switch_frame - Switching frame to: LoginFrame
2025-04-30 17:11:35,492 - INFO - App v2 - verify_login - Attempting login for user: az
2025-04-30 17:11:35,676 - INFO - App v2 - verify_login - Login successful for user: az, Role: Staff
2025-04-30 17:11:35,676 - INFO - App v2 - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 17:11:35,677 - INFO - App v2 - switch_frame - Switching frame to: StaffFrame
2025-04-30 17:11:35,679 - INFO - App v2 - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 17:11:35,682 - INFO - App v2 - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 17:11:35,698 - INFO - App v2 - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 17:11:41,483 - INFO - App v2 - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 17:11:41,566 - INFO - App v2 - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 17:12:07,261 - INFO - App v2 - on_appointment_select - Appointment selected: ID 2 (Staff 1)
2025-04-30 17:12:47,909 - INFO - App v2 - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 17:35:39,797 - INFO - App v2 - <module> - Application has finished.
2025-04-30 17:35:41,218 - INFO - root - <module> - Application starting up.
2025-04-30 17:35:41,219 - INFO - root - initialize_database - Initializing database...
2025-04-30 17:35:41,219 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 17:35:41,219 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 17:35:41,221 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 17:35:41,221 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 17:35:41,221 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 17:35:41,221 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 17:35:41,221 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 17:35:41,221 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 17:35:41,481 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 17:35:41,503 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 17:35:41,503 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 17:35:41,503 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 17:35:41,525 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 17:35:51,123 - INFO - root - verify_login - Attempting login for user: az
2025-04-30 17:35:51,123 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-04-30 17:35:51,123 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 17:35:51,123 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:51,123 - DEBUG - root - check_password - Checking password hash.
2025-04-30 17:35:51,304 - INFO - root - verify_login - Login successful for user: az, Role: Staff
2025-04-30 17:35:51,304 - INFO - root - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 17:35:51,304 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 3
2025-04-30 17:35:51,304 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (3,)
2025-04-30 17:35:51,305 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 17:35:51,306 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:51,306 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 17:35:51,308 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 17:35:51,308 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 17:35:51,309 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 1)
2025-04-30 17:35:51,312 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 17:35:51,312 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 17:35:51,312 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-04-30 17:35:51,312 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-04-30 17:35:51,328 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 17:35:51,328 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 17:35:51,328 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 17:35:51,328 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 17:35:51,328 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:51,329 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 17:35:51,329 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-04-30 17:35:51,329 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 17:35:54,127 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 17:35:54,127 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 17:35:54,143 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-04-30 17:35:54,143 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-04-30 17:35:54,205 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 17:35:54,205 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 17:35:54,205 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 17:35:54,205 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:54,206 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 17:35:54,206 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-04-30 17:35:54,206 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-04-30 17:35:54,206 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 17:35:54,206 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:54,206 - DEBUG - root - load_appointment_list - Displaying 2 appointments.
2025-04-30 17:35:54,206 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-04-30 17:35:59,791 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 17:35:59,792 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 17:35:59,792 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 17:35:59,792 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 17:35:59,792 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 17:35:59,794 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Cancelled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, StatusIsScheduled=False
2025-04-30 17:35:59,794 - DEBUG - root - on_appointment_select - Final Button Enable Flag: False
2025-04-30 17:36:07,897 - INFO - root - on_closing - Application window closing.
2025-04-30 17:36:10,247 - DEBUG - root - on_closing - Quit cancelled by user.
2025-04-30 17:41:11,254 - INFO - root - <module> - Application has finished.
2025-04-30 18:03:03,743 - INFO - root - <module> - Application starting up.
2025-04-30 18:03:03,744 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:03:03,744 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:03:03,744 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:03:03,745 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:03:03,745 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:03:03,745 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:03:03,745 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:03:03,745 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:03:03,745 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:03:03,800 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:03:03,817 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:03:03,817 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:03:03,818 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:03:03,823 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:03:10,457 - INFO - root - verify_login - Attempting login for user: az
2025-04-30 18:03:10,457 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-04-30 18:03:10,458 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:03:10,458 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:10,458 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:03:10,637 - INFO - root - verify_login - Login successful for user: az, Role: Staff
2025-04-30 18:03:10,637 - INFO - root - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 18:03:10,637 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 3
2025-04-30 18:03:10,637 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (3,)
2025-04-30 18:03:10,638 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:03:10,638 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:10,638 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 18:03:10,641 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:03:10,641 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 18:03:10,641 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 1)
2025-04-30 18:03:10,644 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 18:03:10,644 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 18:03:10,644 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-04-30 18:03:10,645 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-04-30 18:03:10,661 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 18:03:10,661 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:03:10,661 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:03:10,661 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:03:10,661 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:10,661 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:03:10,661 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-04-30 18:03:10,661 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 18:03:17,125 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 18:03:17,125 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 18:03:17,145 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-04-30 18:03:17,145 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-04-30 18:03:17,213 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 18:03:17,213 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 18:03:17,214 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:03:17,214 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:17,214 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 18:03:17,214 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-04-30 18:03:17,214 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-04-30 18:03:17,215 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:03:17,215 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:17,215 - DEBUG - root - load_appointment_list - Displaying 2 appointments.
2025-04-30 18:03:17,215 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-04-30 18:03:28,531 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 18:03:28,531 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:03:28,531 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:03:28,532 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:03:28,533 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:03:28,537 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Cancelled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 18:03:28,537 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 18:03:40,877 - WARNING - root - remove_appointment - Staff 1 attempting to REMOVE appointment ID: 1
2025-04-30 18:03:40,877 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:03:40,877 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:03:40,877 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:03:40,878 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:13:33,828 - WARNING - root - remove_appointment - Staff 1 attempting to REMOVE appointment ID: 1
2025-04-30 18:13:33,828 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:13:33,828 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:13:33,828 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:13:33,828 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:13:41,151 - INFO - root - on_appointment_select - Appointment selected: ID 2 (Staff 1)
2025-04-30 18:13:41,152 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 18:13:41,152 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 18:13:41,155 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:13:41,155 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:13:41,156 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=2, Appt Status='Cancelled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 18:13:41,156 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 18:13:45,213 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 18:13:45,213 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:13:45,214 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:13:45,218 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:13:45,218 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:13:45,219 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Cancelled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 18:13:45,219 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 18:13:49,962 - INFO - root - on_closing - Application window closing.
2025-04-30 18:13:51,534 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:13:51,557 - INFO - root - <module> - Application has finished.
2025-04-30 18:14:10,952 - INFO - root - <module> - Application starting up.
2025-04-30 18:14:10,952 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:14:10,954 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:14:10,954 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:14:11,009 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:14:11,026 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:14:11,026 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:14:11,028 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:14:11,034 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:14:26,511 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:14:26,512 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:14:26,512 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:14:26,512 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:14:26,512 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:14:26,691 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:14:26,692 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:14:26,692 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:14:26,694 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:14:26,695 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:14:26,695 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:14:26,698 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:14:26,698 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:14:26,698 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:14:26,698 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:14:26,701 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:14:26,701 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:14:26,701 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:14:26,702 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:14:26,702 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:14:26,702 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:14:26,702 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:14:26,702 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:14:35,745 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:14:35,746 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:14:35,750 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:14:35,750 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:14:35,753 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:14:35,753 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:14:35,753 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:14:35,754 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:14:35,754 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:14:35,754 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:14:35,755 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:14:38,365 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:14:38,365 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:14:38,370 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:14:38,370 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:14:38,382 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:14:38,383 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:14:38,383 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:14:38,383 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:14:38,383 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:14:38,384 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:14:38,384 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:14:44,749 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:14:44,749 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:14:44,761 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:14:44,761 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:14:44,765 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:14:44,765 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:14:44,765 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:14:44,765 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:14:44,766 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:14:44,766 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:14:44,766 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:14:47,003 - INFO - root - on_user_select - User selected: ID 2, Username: jd (Admin)
2025-04-30 18:14:58,512 - INFO - root - on_closing - Application window closing.
2025-04-30 18:15:00,083 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:15:00,097 - INFO - root - <module> - Application has finished.
2025-04-30 18:15:08,786 - INFO - root - <module> - Application starting up.
2025-04-30 18:15:08,786 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:15:08,787 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:15:08,787 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:15:08,842 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:15:08,861 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:15:08,862 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:15:08,862 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:15:08,869 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:15:15,192 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:15:15,192 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:15:15,192 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:15:15,193 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:15,193 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:15:15,371 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:15:15,371 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:15:15,371 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:15:15,374 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:15:15,375 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:15:15,375 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:15:15,378 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:15:15,378 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:15:15,378 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:15:15,378 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:15:15,381 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:15:15,381 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:15:15,381 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:15:15,382 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:15:15,382 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:15,382 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:15:15,382 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:15:15,382 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:15:17,627 - INFO - root - on_user_select - User selected: ID 2, Username: jd (Admin)
2025-04-30 18:15:29,103 - INFO - root - on_user_select - User selected: ID 3, Username: az (Admin)
2025-04-30 18:15:37,595 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:15:37,596 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:15:37,600 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:15:37,600 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:15:37,612 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:15:37,612 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:15:37,613 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:15:37,613 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:15:37,613 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:37,613 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:15:37,614 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:15:39,590 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 18:15:39,591 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:15:39,594 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:15:39,594 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:39,594 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 18:15:47,901 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 18:15:47,901 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:15:47,910 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 18:15:47,910 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 18:15:47,925 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 18:15:47,925 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:15:47,925 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:15:47,925 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:15:47,926 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:15:47,926 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:47,926 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:15:47,926 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:15:50,167 - INFO - root - on_patient_select - Patient selected: ID 1 (Admin)
2025-04-30 18:15:50,167 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE patient_id = ? with params: (1,)
2025-04-30 18:15:50,167 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:15:50,168 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:50,168 - DEBUG - root - execute_query - Executing query: SELECT * FROM Insurance WHERE patient_id = ? with params: (1,)
2025-04-30 18:15:50,168 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:15:50,168 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:15:50,168 - DEBUG - root - on_patient_select - Loading details for patient ID: 1
2025-04-30 18:15:50,168 - DEBUG - root - on_patient_select - Loading insurance details for patient ID: 1
2025-04-30 18:15:54,818 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 18:15:54,818 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:15:54,818 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:15:54,837 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:15:54,837 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:15:54,840 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:16:01,407 - INFO - root - verify_login - Attempting login for user: az
2025-04-30 18:16:01,407 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-04-30 18:16:01,408 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:16:01,408 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:01,408 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:16:01,593 - INFO - root - verify_login - Login successful for user: az, Role: Staff
2025-04-30 18:16:01,593 - INFO - root - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-04-30 18:16:01,593 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 3
2025-04-30 18:16:01,593 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (3,)
2025-04-30 18:16:01,594 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:16:01,594 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:01,594 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 18:16:01,596 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:16:01,596 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 1
2025-04-30 18:16:01,597 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 1)
2025-04-30 18:16:01,600 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-04-30 18:16:01,600 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 18:16:01,600 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-04-30 18:16:01,600 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-04-30 18:16:01,616 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-04-30 18:16:01,616 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:16:01,616 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:16:01,616 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:16:01,616 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:01,616 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:16:01,616 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-04-30 18:16:01,617 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 18:16:05,219 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-04-30 18:16:05,219 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 18:16:05,239 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-04-30 18:16:05,239 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-04-30 18:16:05,304 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 18:16:05,305 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 18:16:05,305 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:16:05,305 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:05,305 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-04-30 18:16:05,305 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-04-30 18:16:05,305 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-04-30 18:16:05,306 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:16:05,306 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:05,306 - DEBUG - root - load_appointment_list - Displaying 2 appointments.
2025-04-30 18:16:05,306 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-04-30 18:16:09,873 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-04-30 18:16:09,874 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:16:09,874 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:16:09,875 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:16:09,876 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:16:09,882 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Cancelled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 18:16:09,882 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 18:16:14,272 - WARNING - root - remove_appointment - Staff 1 attempting to REMOVE appointment ID: 1
2025-04-30 18:16:14,272 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-04-30 18:16:14,272 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-04-30 18:16:14,272 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:16:14,273 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:20:03,634 - INFO - root - <module> - Application has finished.
2025-04-30 18:20:05,001 - INFO - root - <module> - Application starting up.
2025-04-30 18:20:05,001 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:20:05,011 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:20:05,015 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:20:05,018 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:20:05,022 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:20:05,025 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:20:05,028 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:20:05,028 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-04-30 18:20:05,214 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-30 18:20:05,223 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:20:05,223 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:20:05,347 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:20:05,385 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:20:05,386 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:20:05,386 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:20:05,409 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:20:12,463 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:20:12,463 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:20:12,464 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:20:12,464 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:20:12,464 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:20:12,644 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:20:12,644 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:20:12,645 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:20:12,647 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:20:12,648 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:20:12,648 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:20:12,650 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:20:12,650 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:20:12,650 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:20:12,650 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:20:12,654 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:20:12,654 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:20:12,654 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:20:12,654 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:20:12,654 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:20:12,654 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:20:12,654 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:20:12,654 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:20:15,067 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:20:15,067 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:20:15,070 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:20:15,071 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:20:15,074 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:20:15,074 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:20:15,074 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:20:15,075 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:20:15,075 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:20:15,075 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:20:15,075 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:20:34,306 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:20:34,307 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:20:34,311 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:20:34,311 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:20:34,321 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:20:34,321 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:20:34,322 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:20:34,322 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:20:34,322 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:20:34,322 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 18:20:34,322 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:21:19,271 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:21:19,271 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 18:21:19,271 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 18:21:19,272 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:21:19,272 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:21:19,272 - DEBUG - root - check_username_exists - Username 'staff' exists: False
2025-04-30 18:21:19,272 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:21:19,453 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff', b'$2b$12$tRvlpHqyJG0dnWt6Qi3VuegEWNgbOhbn.nM7MmiITRSD.REeHb4hy', 'Staff')
2025-04-30 18:21:19,460 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:21:19,460 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:21:19,460 - INFO - root - add_staff - User login created for 'staff'. User ID: True
2025-04-30 18:21:19,460 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (True, 'Staff1', 'Doctor', 'aasvdfvdsvadasvdsvdsvsdvd')
2025-04-30 18:21:19,464 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:21:19,464 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:21:19,464 - INFO - root - add_staff - Staff record created for 'Staff1'. Staff ID: True, Linked to User ID: True
2025-04-30 18:21:21,423 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:21:21,423 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:21:21,423 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:21:21,424 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:21:21,424 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:21:21,424 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:21:21,425 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:21:32,089 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 18:21:32,089 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:21:32,100 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 18:21:32,100 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 18:21:32,119 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 18:21:32,120 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:21:32,120 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:21:32,120 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:21:32,120 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:21:32,120 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:21:32,121 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 18:21:32,121 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:22:33,236 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 18:22:35,620 - WARNING - root - add_patient - Add patient failed: Username or password empty.
2025-04-30 18:22:47,353 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 18:22:47,353 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-04-30 18:22:47,353 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 18:22:47,353 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:22:47,354 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:22:47,354 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-04-30 18:22:47,354 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:22:47,537 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-04-30 18:22:47,538 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$X0Ge11AxyvHvnuB/ufQOA.MYyD.wYeibLpDoJAjhhhnW.z2g66BSG', 'Patient')
2025-04-30 18:22:47,545 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:22:47,545 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:22:47,546 - INFO - root - add_patient - User login created for 'jd'. User ID: True
2025-04-30 18:22:47,546 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (True, 'John Doe', '2000-10-31', 'm', '5555555', 'avdsavdsavds', 'avsdasdvsv', 'dasvdsdsv')
2025-04-30 18:22:47,549 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:22:47,549 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:22:47,549 - INFO - root - add_patient - Patient record created for 'John Doe'. Patient ID: True, Linked to User ID: True
2025-04-30 18:22:47,549 - DEBUG - root - add_patient - Adding insurance details for new patient ID: True
2025-04-30 18:22:47,549 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (True, 'Capitol', '123123213', '2028-10-31', 'adfvasvsdvd')
2025-04-30 18:22:47,554 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:22:47,554 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:22:47,554 - DEBUG - root - add_patient - Insurance details added for patient ID: True
2025-04-30 18:22:49,648 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:22:49,648 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:22:49,648 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:22:49,649 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:22:49,649 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:22:49,649 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:22:49,649 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:22:58,067 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 18:22:58,068 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:22:58,068 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:22:58,087 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:22:58,087 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:22:58,090 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:23:12,265 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 18:23:12,265 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 18:23:12,266 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:23:12,266 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:12,266 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:23:12,451 - INFO - root - verify_login - Login successful for user: staff, Role: Staff
2025-04-30 18:23:12,451 - INFO - root - login_successful - Login successful. User ID: 2, Role: Staff. Navigating to role frame.
2025-04-30 18:23:12,451 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 2
2025-04-30 18:23:12,451 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (2,)
2025-04-30 18:23:12,452 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:23:12,452 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:12,452 - ERROR - root - login_successful - Login Error: Staff record not found for user_id: 2, though user login exists.
2025-04-30 18:23:17,028 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:23:17,028 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:23:17,031 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:23:17,032 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:23:17,034 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:23:33,212 - INFO - root - verify_login - Attempting login for user: staff1
2025-04-30 18:23:33,212 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff1',)
2025-04-30 18:23:33,213 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:23:33,213 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:33,213 - WARNING - root - verify_login - Login failed for user: staff1 - User not found.
2025-04-30 18:23:45,732 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:23:45,732 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:23:45,733 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:23:45,733 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:45,733 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:23:45,915 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:23:45,915 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:23:45,915 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:23:45,917 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:23:45,918 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:23:45,918 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:23:45,920 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:23:45,920 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:23:45,922 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:23:45,922 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:23:45,925 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:23:45,925 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:23:45,925 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:23:45,925 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:23:45,925 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:45,925 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:23:45,926 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:23:45,926 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:23:47,769 - INFO - root - on_user_select - User selected: ID 2, Username: staff (Admin)
2025-04-30 18:23:50,594 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:23:50,595 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:23:50,599 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:23:50,599 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:23:50,610 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:23:50,612 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:23:50,612 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:23:50,612 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:23:50,612 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:50,613 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:23:50,613 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:23:52,101 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 18:23:52,101 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:23:52,101 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:23:52,101 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:23:52,101 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 18:24:16,575 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:24:16,575 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:24:16,586 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:24:16,586 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:24:16,597 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:24:16,597 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:24:16,597 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:24:16,597 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:24:16,597 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:16,597 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:24:16,597 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:24:18,474 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 18:24:18,475 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:24:18,478 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:24:18,478 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:18,479 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 18:24:26,666 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:24:26,666 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:24:26,675 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:24:26,676 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:24:26,684 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:24:26,684 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:24:26,684 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:24:26,684 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:24:26,685 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:26,685 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:24:26,685 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:24:57,178 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:24:57,178 - DEBUG - root - check_username_exists - Checking if username exists: staff2
2025-04-30 18:24:57,178 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 18:24:57,179 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:24:57,179 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:57,179 - DEBUG - root - check_username_exists - Username 'staff2' exists: False
2025-04-30 18:24:57,179 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:24:57,364 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff2', b'$2b$12$JHOTuToDmvPM/90cGGsr..YkqfJn37ivMZ/A43muUJy4TFPfReMfW', 'Staff')
2025-04-30 18:24:57,371 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:24:57,373 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:57,373 - INFO - root - add_staff - User login created for 'staff2'. User ID: True
2025-04-30 18:24:57,373 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (True, 'staff2', 'doctor', 'vasdvsdavsv')
2025-04-30 18:24:57,373 - ERROR - root - execute_query - Database Query Error: UNIQUE constraint failed: Staff.user_id
Query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?)
Params: (True, 'staff2', 'doctor', 'vasdvsdavsv')
2025-04-30 18:24:57,373 - WARNING - root - execute_query - Transaction rolled back due to error during commit.
2025-04-30 18:24:57,373 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:57,373 - CRITICAL - root - add_staff - CRITICAL: User True created, but failed staff record insert!
2025-04-30 18:24:57,374 - DEBUG - root - execute_query - Executing query: DELETE FROM Users WHERE user_id = ? with params: (True,)
2025-04-30 18:24:57,377 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:24:57,377 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:24:57,378 - WARNING - root - add_staff - Attempted cleanup of orphaned user True. Success: True
2025-04-30 18:25:12,424 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:25:12,424 - DEBUG - root - check_username_exists - Checking if username exists: staff2
2025-04-30 18:25:12,424 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 18:25:12,425 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:25:12,425 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:25:12,425 - DEBUG - root - check_username_exists - Username 'staff2' exists: True
2025-04-30 18:25:18,215 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:25:18,215 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:25:18,223 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:25:18,223 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:25:18,226 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:25:18,226 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:25:18,226 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:25:18,226 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:25:18,226 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:25:18,226 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:25:18,226 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:25:18,752 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:25:18,752 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:25:18,757 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:25:18,757 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:25:18,767 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:25:18,767 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:25:18,767 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:25:18,768 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:25:18,768 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:25:18,768 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:25:18,768 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:25:40,468 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:25:40,468 - DEBUG - root - check_username_exists - Checking if username exists: staff2
2025-04-30 18:25:40,468 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 18:25:40,469 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:25:40,469 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:25:40,469 - DEBUG - root - check_username_exists - Username 'staff2' exists: True
2025-04-30 18:25:49,272 - INFO - root - on_closing - Application window closing.
2025-04-30 18:25:51,135 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:25:51,159 - INFO - root - <module> - Application has finished.
2025-04-30 18:26:09,061 - INFO - root - <module> - Application starting up.
2025-04-30 18:26:09,061 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:26:09,065 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:26:09,069 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:26:09,073 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:26:09,077 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:26:09,081 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:26:09,085 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:26:09,085 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-04-30 18:26:09,265 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-30 18:26:09,267 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:26:09,267 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:26:09,323 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:26:09,342 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:26:09,342 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:26:09,344 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:26:09,351 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:26:23,654 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:26:23,654 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:26:23,655 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:26:23,655 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:26:23,655 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:26:23,835 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:26:23,835 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:26:23,835 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:26:23,838 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:26:23,838 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:26:23,839 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:26:23,842 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:26:23,842 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:26:23,842 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:26:23,842 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:26:23,845 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:26:23,846 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:26:23,846 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:26:23,846 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:26:23,846 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:26:23,846 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:26:23,846 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:26:23,846 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:26:25,649 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:26:25,649 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:26:25,676 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:26:25,676 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:26:25,701 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:26:25,702 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:26:25,702 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:26:25,702 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:26:25,703 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:26:25,703 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 18:26:25,703 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:27:02,480 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:27:02,480 - DEBUG - root - check_username_exists - Checking if username exists: staff1
2025-04-30 18:27:02,480 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff1',)
2025-04-30 18:27:02,481 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:27:02,481 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:27:02,481 - DEBUG - root - check_username_exists - Username 'staff1' exists: False
2025-04-30 18:27:02,481 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:27:02,661 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff1', b'$2b$12$8UbE93av9pMtpq0BeFrGFeGjN/WuJ.ull3c.H1tV5ztt0P8MTZMe.', 'Staff')
2025-04-30 18:27:02,664 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:27:02,665 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:27:02,665 - INFO - root - add_staff - User login created for 'staff1'. User ID: True
2025-04-30 18:27:02,665 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (True, 'staff1', 'doctor', 'vasdsadvdsavsda')
2025-04-30 18:27:02,669 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:27:02,669 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:27:02,669 - INFO - root - add_staff - Staff record created for 'staff1'. Staff ID: True, Linked to User ID: True
2025-04-30 18:27:05,073 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:27:05,074 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:27:05,074 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:27:05,074 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:27:05,074 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:27:05,074 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:27:05,074 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:27:11,301 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 18:27:11,301 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:27:11,315 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 18:27:11,315 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 18:27:11,335 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 18:27:11,335 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:27:11,335 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:27:11,335 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:27:11,335 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:27:11,335 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:27:11,336 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 18:27:11,336 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:28:11,428 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 18:28:11,428 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-04-30 18:28:11,428 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 18:28:11,429 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:28:11,429 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:11,429 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-04-30 18:28:11,429 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:28:11,609 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-04-30 18:28:11,609 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$Fzy42LKTWM1JlES9LTayhe67YFuF4utZOSvChw05VRa/a.qCUz5ju', 'Patient')
2025-04-30 18:28:11,616 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:28:11,616 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:11,616 - INFO - root - add_patient - User login created for 'jd'. User ID: True
2025-04-30 18:28:11,616 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (True, 'John Doe', '2000-10-31', 'm', '12312413432', 'sabfdsbfdsbdf', 'abdfsbsdbdfsbvfdsb', 'fdsbefrberrb')
2025-04-30 18:28:11,620 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:28:11,621 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:11,621 - INFO - root - add_patient - Patient record created for 'John Doe'. Patient ID: True, Linked to User ID: True
2025-04-30 18:28:11,621 - DEBUG - root - add_patient - Adding insurance details for new patient ID: True
2025-04-30 18:28:11,621 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (True, 'Capitol', '111', '2029-11-1', 'asdvsavdsvdsv')
2025-04-30 18:28:11,626 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:28:11,626 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:11,626 - DEBUG - root - add_patient - Insurance details added for patient ID: True
2025-04-30 18:28:13,646 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:28:13,646 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:28:13,646 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:28:13,647 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:28:13,647 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:13,647 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:28:13,647 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:28:19,494 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:28:19,494 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:28:19,511 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:28:19,511 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:28:19,514 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:28:19,514 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:28:19,515 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:28:19,515 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:28:19,515 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:19,515 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:28:19,515 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:28:21,016 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:28:21,016 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:28:21,020 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:28:21,020 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:28:21,032 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:28:21,032 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:28:21,032 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:28:21,033 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:28:21,033 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:21,033 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:28:21,033 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:28:22,098 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:28:22,098 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:28:22,107 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:28:22,107 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:28:22,109 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:28:22,109 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:28:22,109 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:28:22,110 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:28:22,110 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:22,110 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:28:22,110 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:28:30,596 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 18:28:30,596 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:28:30,596 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:28:30,602 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:28:30,603 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:28:30,605 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:28:40,242 - INFO - root - verify_login - Attempting login for user: staff1
2025-04-30 18:28:40,242 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff1',)
2025-04-30 18:28:40,242 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:28:40,243 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:40,243 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:28:40,421 - INFO - root - verify_login - Login successful for user: staff1, Role: Staff
2025-04-30 18:28:40,421 - INFO - root - login_successful - Login successful. User ID: 2, Role: Staff. Navigating to role frame.
2025-04-30 18:28:40,421 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 2
2025-04-30 18:28:40,421 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (2,)
2025-04-30 18:28:40,422 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:28:40,422 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:40,422 - ERROR - root - login_successful - Login Error: Staff record not found for user_id: 2, though user login exists.
2025-04-30 18:28:47,040 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:28:47,041 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:28:47,044 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:28:47,045 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:28:47,049 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:28:59,684 - INFO - root - verify_login - Attempting login for user: staff1
2025-04-30 18:28:59,684 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff1',)
2025-04-30 18:28:59,685 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:28:59,685 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:59,685 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:28:59,869 - INFO - root - verify_login - Login successful for user: staff1, Role: Staff
2025-04-30 18:28:59,869 - INFO - root - login_successful - Login successful. User ID: 2, Role: Staff. Navigating to role frame.
2025-04-30 18:28:59,869 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 2
2025-04-30 18:28:59,869 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (2,)
2025-04-30 18:28:59,870 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:28:59,870 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:28:59,870 - ERROR - root - login_successful - Login Error: Staff record not found for user_id: 2, though user login exists.
2025-04-30 18:32:28,116 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:32:28,116 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:32:28,119 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:32:28,120 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:32:28,123 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:32:34,605 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:32:34,605 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:32:34,606 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:32:34,606 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:32:34,606 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:32:34,786 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:32:34,786 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:32:34,786 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:32:34,789 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:32:34,790 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:32:34,790 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:32:34,793 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:32:34,793 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:32:34,793 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:32:34,793 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:32:34,796 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:32:34,796 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:32:34,796 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:32:34,797 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:32:34,797 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:32:34,797 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:32:34,798 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:32:34,798 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:32:44,447 - INFO - root - on_user_select - User selected: ID 2, Username: staff1 (Admin)
2025-04-30 18:33:07,859 - WARNING - root - delete_user - Admin attempting delete user LOGIN ID: 2, Username: staff1, Role: Staff
2025-04-30 18:33:13,337 - DEBUG - root - execute_query - Executing query: DELETE FROM Users WHERE user_id = ? with params: (2,)
2025-04-30 18:33:13,344 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:33:13,344 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:13,344 - INFO - root - delete_user - User login ID 2 ('staff1') deleted.
2025-04-30 18:33:16,020 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:33:16,020 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:33:16,020 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:33:16,021 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:33:16,021 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:16,021 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:33:16,021 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:33:16,021 - DEBUG - root - on_user_select - User list selection cleared (Admin).
2025-04-30 18:33:16,022 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:33:17,650 - INFO - root - on_user_select - User selected: ID 3, Username: jd (Admin)
2025-04-30 18:33:35,545 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:33:35,546 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:33:35,549 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:33:35,549 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:33:35,558 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:33:35,558 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:33:35,558 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:33:35,559 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:33:35,559 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:35,559 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:33:35,559 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:33:39,486 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 18:33:39,488 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:33:39,490 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:33:39,491 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:39,491 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 18:33:47,007 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:33:47,008 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:33:47,019 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:33:47,019 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:33:47,021 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:33:47,021 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:33:47,022 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:33:47,022 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:33:47,022 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:47,022 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:33:47,022 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:33:49,060 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:33:49,060 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:33:49,064 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:33:49,064 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:33:49,076 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:33:49,076 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:33:49,076 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:33:49,077 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:33:49,077 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:49,077 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:33:49,077 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:33:52,031 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:33:52,032 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:33:52,044 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:33:52,044 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:33:52,047 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:33:52,047 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:33:52,047 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:33:52,048 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:33:52,048 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:33:52,048 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:33:52,048 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:34:01,997 - INFO - root - on_user_select - User selected: ID 3, Username: jd (Admin)
2025-04-30 18:34:03,909 - WARNING - root - delete_user - Admin attempting delete user LOGIN ID: 3, Username: jd, Role: Patient
2025-04-30 18:34:05,108 - DEBUG - root - execute_query - Executing query: DELETE FROM Users WHERE user_id = ? with params: (3,)
2025-04-30 18:34:05,116 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:34:05,117 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:05,117 - INFO - root - delete_user - User login ID 3 ('jd') deleted.
2025-04-30 18:34:07,006 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:34:07,007 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:34:07,007 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:34:07,007 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:34:07,007 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:07,007 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:34:07,007 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:34:07,008 - DEBUG - root - on_user_select - User list selection cleared (Admin).
2025-04-30 18:34:07,008 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:34:08,774 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:34:08,774 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:34:08,777 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:34:08,777 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:34:08,790 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:34:08,790 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:34:08,790 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:34:08,790 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:34:08,791 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:08,791 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:34:08,791 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:34:09,853 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 18:34:09,854 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:34:09,866 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 18:34:09,866 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 18:34:09,884 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 18:34:09,885 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:34:09,885 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:34:09,885 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:34:09,885 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:34:09,885 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:09,885 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:34:09,885 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:34:11,281 - INFO - root - on_patient_select - Patient selected: ID 1 (Admin)
2025-04-30 18:34:11,282 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE patient_id = ? with params: (1,)
2025-04-30 18:34:11,284 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:34:11,285 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:11,285 - DEBUG - root - execute_query - Executing query: SELECT * FROM Insurance WHERE patient_id = ? with params: (1,)
2025-04-30 18:34:11,285 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:34:11,285 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:11,285 - DEBUG - root - on_patient_select - Loading details for patient ID: 1
2025-04-30 18:34:11,285 - DEBUG - root - on_patient_select - Loading insurance details for patient ID: 1
2025-04-30 18:34:15,477 - WARNING - root - delete_patient - Admin attempting to delete patient RECORD ID: 1, Name: John Doe
2025-04-30 18:34:15,478 - DEBUG - root - execute_query - Executing query: SELECT user_id, username FROM Users WHERE user_id = (SELECT user_id FROM Patients WHERE patient_id = ?) with params: (1,)
2025-04-30 18:34:15,479 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:34:15,479 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:27,666 - DEBUG - root - execute_query - Executing query: DELETE FROM Patients WHERE patient_id = ? with params: (1,)
2025-04-30 18:34:27,675 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:34:27,675 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:27,675 - INFO - root - delete_patient - Patient record ID 1 deleted successfully by Admin.
2025-04-30 18:34:29,084 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:34:29,084 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:34:29,085 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:34:29,086 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:34:29,086 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:29,086 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 18:34:29,086 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:34:29,086 - DEBUG - root - on_patient_select - Patient list selection cleared (Admin).
2025-04-30 18:34:29,086 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:34:30,802 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:34:30,802 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:34:30,821 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:34:30,821 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:34:30,829 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:34:30,829 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:34:30,829 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:34:30,830 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:34:30,830 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:30,830 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:34:30,830 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:34:33,213 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 18:34:33,213 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:34:33,214 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:34:33,214 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:33,214 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 18:34:38,716 - WARNING - root - delete_staff - Admin attempting to delete staff RECORD ID: 1, Name: staff1
2025-04-30 18:34:38,716 - DEBUG - root - execute_query - Executing query: SELECT user_id, username FROM Users WHERE user_id = (SELECT user_id FROM Staff WHERE staff_id = ?) with params: (1,)
2025-04-30 18:34:38,717 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:34:38,717 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:40,324 - DEBUG - root - execute_query - Executing query: DELETE FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 18:34:40,332 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:34:40,332 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:40,332 - INFO - root - delete_staff - Staff record ID 1 deleted successfully by Admin.
2025-04-30 18:34:41,893 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:34:41,893 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:34:41,893 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:34:41,894 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:34:41,894 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:34:41,894 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 18:34:41,894 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:34:41,894 - DEBUG - root - on_staff_select - Staff list selection cleared (Admin).
2025-04-30 18:34:41,894 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:35:01,848 - DEBUG - root - logout - Logout cancelled by user.
2025-04-30 18:35:03,886 - INFO - root - on_closing - Application window closing.
2025-04-30 18:35:05,492 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:35:05,515 - INFO - root - <module> - Application has finished.
2025-04-30 18:35:11,719 - INFO - root - <module> - Application starting up.
2025-04-30 18:35:11,720 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:35:11,720 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:35:11,720 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:35:11,720 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:35:11,721 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:35:11,721 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:35:11,721 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:35:11,721 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:35:11,721 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:35:11,775 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:35:11,792 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:35:11,792 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:35:11,793 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:35:11,799 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:35:21,070 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:35:21,070 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:35:21,071 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:35:21,071 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:35:21,071 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:35:21,250 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:35:21,251 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:35:21,251 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:35:21,253 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:35:21,254 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:35:21,254 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:35:21,257 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:35:21,257 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:35:21,257 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:35:21,258 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:35:21,261 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:35:21,261 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:35:21,261 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:35:21,261 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:35:21,261 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:35:21,262 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:35:21,262 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:35:21,262 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:35:32,947 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:35:32,948 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:35:32,952 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:35:32,952 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:35:32,965 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:35:32,965 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:35:32,965 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:35:32,966 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:35:32,966 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:35:32,966 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 18:35:32,966 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:36:04,429 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:36:04,429 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 18:36:04,429 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 18:36:04,430 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:36:04,430 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:04,430 - DEBUG - root - check_username_exists - Username 'staff' exists: False
2025-04-30 18:36:04,430 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:36:04,614 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff', b'$2b$12$qk9rWepzy.mJQpeG30L4qOTqPhY9.MfrCRNTws5CZ7Q/htLpzjcCu', 'Staff')
2025-04-30 18:36:04,622 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:36:04,622 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:04,623 - INFO - root - add_staff - User login created for 'staff'. User ID: True
2025-04-30 18:36:04,623 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (True, 'staff1', 'doctor', 'afbafbvasfbasdfbvadb')
2025-04-30 18:36:04,626 - INFO - root - execute_query - Query committed successfully. Rows affected: 1
2025-04-30 18:36:04,627 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:04,627 - INFO - root - add_staff - Staff record created for 'staff1'. Staff ID: True, Linked to User ID: True
2025-04-30 18:36:14,648 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:36:14,648 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:36:14,648 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:36:14,649 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:36:14,649 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:14,649 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:36:14,649 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:36:18,561 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:36:18,561 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:36:18,570 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:36:18,570 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:36:18,573 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:36:18,573 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:36:18,573 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:36:18,573 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:36:18,573 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:18,573 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:36:18,574 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:36:57,243 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:36:57,243 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:36:57,253 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:36:57,254 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:36:57,273 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:36:57,273 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:36:57,273 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:36:57,274 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:36:57,274 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:36:57,274 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:36:57,274 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:37:37,825 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:37:37,826 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:37:37,837 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:37:37,837 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:37:37,839 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:37:37,840 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:37:37,840 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:37:37,841 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:37:37,841 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:37:37,841 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:37:37,841 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:44:00,322 - INFO - root - on_closing - Application window closing.
2025-04-30 18:44:01,889 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:44:01,904 - INFO - root - <module> - Application has finished.
2025-04-30 18:56:18,442 - INFO - root - <module> - Application starting up.
2025-04-30 18:56:18,444 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:56:18,445 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:56:18,445 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:56:18,498 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:56:18,515 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:56:18,515 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:56:18,516 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:56:18,521 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:56:25,355 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:56:25,355 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:56:25,356 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:56:25,356 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:56:25,356 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:56:25,541 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:56:25,541 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:56:25,541 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:56:25,544 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:56:25,544 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:56:25,544 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:56:25,547 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:56:25,547 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:56:25,547 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:56:25,547 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:56:25,550 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:56:25,550 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:56:25,551 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:56:25,552 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:56:25,552 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:56:25,552 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:56:25,552 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:56:25,552 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:56:28,822 - INFO - root - on_closing - Application window closing.
2025-04-30 18:56:30,603 - INFO - root - on_closing - Application shutting down.
2025-04-30 18:56:30,614 - INFO - root - <module> - Application has finished.
2025-04-30 18:56:39,002 - INFO - root - <module> - Application starting up.
2025-04-30 18:56:39,002 - INFO - root - initialize_database - Initializing database...
2025-04-30 18:56:39,007 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 18:56:39,012 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 18:56:39,016 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 18:56:39,018 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 18:56:39,022 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 18:56:39,026 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 18:56:39,026 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-04-30 18:56:39,232 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-30 18:56:39,236 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 18:56:39,236 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 18:56:39,346 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 18:56:39,375 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:56:39,375 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:56:39,375 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:56:39,394 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:56:48,379 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 18:56:48,379 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 18:56:48,379 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:56:48,379 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:56:48,379 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:56:48,559 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 18:56:48,559 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 18:56:48,559 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 18:56:48,562 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:56:48,564 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 18:56:48,564 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 18:56:48,566 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:56:48,566 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:56:48,566 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:56:48,566 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:56:48,570 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:56:48,570 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:56:48,570 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:56:48,570 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:56:48,570 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:56:48,570 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 18:56:48,570 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:56:48,570 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 18:56:52,234 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:56:52,234 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:56:52,239 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:56:52,239 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:56:52,250 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:56:52,250 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:56:52,250 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:56:52,252 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:56:52,252 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:56:52,252 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 18:56:52,252 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:57:21,771 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 18:57:21,772 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 18:57:21,772 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 18:57:21,772 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:57:21,772 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:21,772 - DEBUG - root - check_username_exists - Username 'staff' exists: False
2025-04-30 18:57:21,772 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:57:21,952 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff', b'$2b$12$UfNmE/YTtJ94JoPBDv6MsesHLD/p8MPoCRX9cnVJ0jVpucW6pMOBy', 'Staff')
2025-04-30 18:57:21,960 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-04-30 18:57:21,960 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:21,960 - INFO - root - add_staff - User login created for 'staff'. User ID: 2
2025-04-30 18:57:21,960 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (2, 'staff1', 'doctor', 'asdvsdvsabvsdfb')
2025-04-30 18:57:21,962 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 18:57:21,964 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:21,964 - INFO - root - add_staff - Staff record created for 'staff1'. Staff ID: 1, Linked to User ID: 2
2025-04-30 18:57:23,826 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:57:23,826 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:57:23,826 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:57:23,828 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:57:23,828 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:23,828 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:57:23,828 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:57:25,750 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:57:25,750 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:57:25,772 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:57:25,772 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:57:25,780 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:57:25,780 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:57:25,780 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:57:25,782 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 18:57:25,782 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:25,782 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-04-30 18:57:25,782 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:57:30,300 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:57:30,300 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:57:30,304 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:57:30,304 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:57:30,316 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:57:30,316 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:57:30,316 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:57:30,316 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:57:30,316 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:30,316 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:57:30,316 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:57:31,206 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 18:57:31,206 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:57:31,218 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 18:57:31,218 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 18:57:31,232 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 18:57:31,232 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:57:31,232 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:57:31,232 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:57:31,234 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:57:31,234 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:57:31,234 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 18:57:31,234 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:58:32,898 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 18:58:32,898 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-04-30 18:58:32,898 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 18:58:32,899 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 18:58:32,899 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:32,899 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-04-30 18:58:32,899 - DEBUG - root - hash_password - Hashing password.
2025-04-30 18:58:33,083 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-04-30 18:58:33,084 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$z8Duws66W/p9BtW1Wriir.gSI2KMzMEGKxotIAto/PbeS/fRghnE2', 'Patient')
2025-04-30 18:58:33,088 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 3
2025-04-30 18:58:33,088 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:33,088 - INFO - root - add_patient - User login created for 'jd'. User ID: 3
2025-04-30 18:58:33,088 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (3, 'John Doe', '2000-10-31', 'M', '5555555', 'asvasduvasdkjnasddsjkv\tasduvj', 'abfabasdfbfsdbfd', 'dbfsbaefbgnbfsafbf')
2025-04-30 18:58:33,092 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 18:58:33,092 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:33,092 - INFO - root - add_patient - Patient record created for 'John Doe'. Patient ID: 1, Linked to User ID: 3
2025-04-30 18:58:33,092 - DEBUG - root - add_patient - Adding insurance details for new patient ID: 1
2025-04-30 18:58:33,092 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (1, 'Capitol', '123', '2029-10-31', 'vasdvsdvxsv cx vsdf')
2025-04-30 18:58:33,095 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 18:58:33,095 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:33,095 - DEBUG - root - add_patient - Insurance details added for patient ID: 1
2025-04-30 18:58:34,441 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 18:58:34,441 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 18:58:34,441 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 18:58:34,441 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:58:34,441 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:34,441 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 18:58:34,441 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 18:58:36,903 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 18:58:36,903 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:58:36,923 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 18:58:36,923 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 18:58:36,927 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 18:58:36,927 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 18:58:36,927 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 18:58:36,928 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 18:58:36,928 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:36,928 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 18:58:36,928 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 18:58:44,913 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 18:58:44,913 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 18:58:44,915 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 18:58:44,915 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 18:58:44,925 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 18:58:44,925 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 18:58:44,925 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 18:58:44,925 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:58:44,925 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:58:44,925 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 18:58:44,925 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 18:58:52,991 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 18:58:52,991 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 18:58:52,993 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 18:58:53,004 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:58:53,004 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 18:58:53,008 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 18:59:01,515 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 18:59:01,515 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 18:59:01,515 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:59:01,515 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:01,515 - DEBUG - root - check_password - Checking password hash.
2025-04-30 18:59:01,694 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 18:59:01,696 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 18:59:01,696 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 18:59:01,696 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 18:59:01,696 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 18:59:01,696 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:01,696 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 18:59:01,698 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 18:59:01,698 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 18:59:01,698 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 18:59:01,709 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 18:59:01,710 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 18:59:01,710 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 18:59:01,712 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:59:01,712 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:01,712 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 18:59:01,712 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 18:59:01,712 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 18:59:01,712 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:59:01,712 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:01,712 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 18:59:01,712 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 18:59:09,041 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 18:59:09,041 - WARNING - root - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 18:59:09,041 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 18:59:09,041 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 18:59:09,165 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 18:59:09,165 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 18:59:09,165 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 18:59:09,165 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:12,973 - INFO - root - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 18:59:12,977 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?)
             with params: (1, '2025-04-30')
2025-04-30 18:59:12,977 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:59:12,977 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:12,977 - DEBUG - root - show_available_slots - Booked start times (HH:MM) for 2025-04-30: set()
2025-04-30 18:59:12,977 - DEBUG - root - show_available_slots - No available slots found for this selection.
2025-04-30 18:59:12,977 - DEBUG - root - execute_query - Executing query: 
                SELECT appointment_datetime
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?)
             with params: (1, '2025-04-30')
2025-04-30 18:59:12,979 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 18:59:12,979 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 18:59:12,979 - DEBUG - root - show_available_slots - Booked times for 2025-04-30: set()
2025-04-30 18:59:12,979 - DEBUG - root - show_available_slots - No available slots found.
2025-04-30 19:07:54,660 - INFO - root - <module> - Application has finished.
2025-04-30 19:11:23,873 - INFO - root - <module> - Application starting up.
2025-04-30 19:11:23,873 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:11:23,874 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:11:23,874 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:11:23,928 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:11:23,946 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:11:23,947 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:11:23,948 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:11:23,952 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:11:32,714 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 19:11:32,714 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 19:11:32,715 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:11:32,715 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:32,715 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:11:32,895 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 19:11:32,895 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 19:11:32,895 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 19:11:32,898 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:11:32,898 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 19:11:32,898 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 19:11:32,901 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:11:32,901 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:11:32,901 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:11:32,901 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:11:32,904 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:11:32,904 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:11:32,904 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:11:32,905 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 19:11:32,905 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:32,905 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 19:11:32,905 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:11:32,905 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 19:11:38,316 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 19:11:38,316 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:11:38,319 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 19:11:38,319 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 19:11:38,329 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:11:38,329 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:11:38,329 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:11:38,330 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:11:38,330 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:38,330 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 19:11:38,330 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:11:41,208 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:11:41,208 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:11:41,220 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:11:41,221 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:11:41,224 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:11:41,224 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:11:41,224 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:11:41,224 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 19:11:41,225 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:41,225 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 19:11:41,225 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:11:46,107 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 19:11:46,107 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:11:46,107 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:11:46,115 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:11:46,115 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:11:46,118 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:11:56,940 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:11:56,940 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:11:56,941 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:11:56,941 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:56,941 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:11:57,121 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:11:57,121 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:11:57,121 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:11:57,121 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:11:57,121 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:11:57,121 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:57,121 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:11:57,124 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:11:57,124 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:11:57,124 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:11:57,135 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:11:57,137 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:11:57,137 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:11:57,137 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:11:57,137 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:57,138 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:11:57,138 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:11:57,138 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:11:57,138 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:11:57,138 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:11:57,138 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:11:57,138 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:12:01,018 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:12:01,018 - WARNING - root - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 19:12:01,018 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:12:01,019 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:12:01,109 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:12:01,109 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:12:01,109 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:12:01,109 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:04,784 - INFO - root - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 19:12:04,786 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:12:04,786 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:12:04,786 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:04,786 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:12:04,786 - ERROR - root - show_available_slots - Error generating/showing available slots: name 'time' is not defined
Traceback (most recent call last):
  File "C:\Users\seven\Downloads\skool\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 2894, in show_available_slots
    current_slot_start_dt = datetime.combine(selected_date, time(hour=start_hour, minute=0))
                                                            ^^^^
NameError: name 'time' is not defined. Did you forget to import 'time'
2025-04-30 19:12:13,947 - INFO - root - on_closing - Application window closing.
2025-04-30 19:12:15,201 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:12:15,218 - INFO - root - <module> - Application has finished.
2025-04-30 19:12:38,567 - INFO - root - <module> - Application starting up.
2025-04-30 19:12:38,567 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:12:38,568 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:12:38,569 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:12:38,569 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:12:38,621 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:12:38,638 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:12:38,638 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:12:38,639 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:12:38,645 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:12:49,522 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:12:49,522 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:12:49,522 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:12:49,522 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:49,523 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:12:49,706 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:12:49,706 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:12:49,706 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:12:49,706 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:12:49,707 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:12:49,707 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:49,707 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:12:49,710 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:12:49,710 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:12:49,710 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:12:49,721 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:12:49,722 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:12:49,722 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:12:49,723 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:12:49,723 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:49,723 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:12:49,723 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:12:49,723 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:12:49,723 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:12:49,723 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:49,723 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:12:49,723 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:12:56,074 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:12:56,074 - WARNING - root - __init__ - Patient John Doe (ID: 1) has no contact number in booking view.
2025-04-30 19:12:56,074 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:12:56,075 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:12:56,166 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:12:56,166 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:12:56,167 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:12:56,167 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:59,249 - INFO - root - show_available_slots - Checking available slots for Staff ID: 1 on Date: 2025-04-30
2025-04-30 19:12:59,251 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:12:59,251 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:12:59,251 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:12:59,251 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:12:59,252 - DEBUG - root - show_available_slots - No available slots found for this selection.
2025-04-30 19:14:42,344 - INFO - root - on_closing - Application window closing.
2025-04-30 19:14:45,240 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:14:45,258 - INFO - root - <module> - Application has finished.
2025-04-30 19:16:51,926 - INFO - root - <module> - Application starting up.
2025-04-30 19:16:51,927 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:16:51,936 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:16:51,939 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:16:51,942 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:16:51,946 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:16:51,949 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:16:51,953 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:16:51,953 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-04-30 19:16:52,136 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-30 19:16:52,139 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:16:52,139 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:16:52,194 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:16:52,212 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:16:52,212 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:16:52,215 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:16:52,222 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:17:06,370 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 19:17:06,370 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 19:17:06,370 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:17:06,370 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:06,370 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:17:06,550 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 19:17:06,550 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 19:17:06,550 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 19:17:06,553 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:17:06,554 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 19:17:06,554 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 19:17:06,556 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:17:06,556 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:17:06,556 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:17:06,556 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:17:06,559 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:17:06,561 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:17:06,561 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:17:06,561 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:17:06,561 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:06,561 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 19:17:06,561 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:17:06,561 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 19:17:09,369 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 19:17:09,369 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:17:09,374 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 19:17:09,374 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 19:17:09,387 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:17:09,387 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:17:09,387 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:17:09,387 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:17:09,387 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:09,387 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 19:17:09,387 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:17:36,140 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 19:17:36,140 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 19:17:36,140 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:17:36,142 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:17:36,142 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:36,142 - DEBUG - root - check_username_exists - Username 'staff' exists: False
2025-04-30 19:17:36,142 - DEBUG - root - hash_password - Hashing password.
2025-04-30 19:17:36,322 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff', b'$2b$12$GEio8ZBpe2c/gU1pwU0fK.0Ecz4fTUF4rs2BvMQJAAWtEXB7/x92q', 'Staff')
2025-04-30 19:17:36,328 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-04-30 19:17:36,328 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:36,328 - INFO - root - add_staff - User login created for 'staff'. User ID: 2
2025-04-30 19:17:36,328 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (2, 'staff1', 'doctor', 'abfsdbsdbfdb')
2025-04-30 19:17:36,334 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:17:36,334 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:36,334 - INFO - root - add_staff - Staff record created for 'staff1'. Staff ID: 1, Linked to User ID: 2
2025-04-30 19:17:39,238 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:17:39,238 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:17:39,238 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:17:39,240 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:17:39,240 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:39,240 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 19:17:39,240 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:17:41,154 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 19:17:41,154 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:17:41,166 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 19:17:41,166 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 19:17:41,182 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 19:17:41,182 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 19:17:41,182 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:17:41,182 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:17:41,182 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:17:41,182 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:17:41,182 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 19:17:41,182 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 19:18:39,047 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 19:18:39,047 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-04-30 19:18:39,047 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:18:39,047 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:18:39,047 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:39,049 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-04-30 19:18:39,049 - DEBUG - root - hash_password - Hashing password.
2025-04-30 19:18:39,233 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-04-30 19:18:39,233 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$KoFK7c67.dBP8COcxn5nqOsfBY5FJ1HMRjQMbt0h4hLVJrVgXOWRa', 'Patient')
2025-04-30 19:18:39,240 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 3
2025-04-30 19:18:39,240 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:39,242 - INFO - root - add_patient - User login created for 'jd'. User ID: 3
2025-04-30 19:18:39,242 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (3, 'Jon Die', '200-20-31', 'M', '23423423523', 'asvbd dvsavasvd\t\tasdbfbf', 'arvgaqrfbagasfbf', 'afbdfbndfnfdndf')
2025-04-30 19:18:39,245 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:18:39,245 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:39,245 - INFO - root - add_patient - Patient record created for 'Jon Die'. Patient ID: 1, Linked to User ID: 3
2025-04-30 19:18:39,245 - DEBUG - root - add_patient - Adding insurance details for new patient ID: 1
2025-04-30 19:18:39,245 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (1, 'Cap', '123', '2029-08-21', 'vasdfzbdfsbfdbfdbfd')
2025-04-30 19:18:39,249 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:18:39,249 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:39,249 - DEBUG - root - add_patient - Insurance details added for patient ID: 1
2025-04-30 19:18:41,151 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 19:18:41,151 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:18:41,151 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:18:41,152 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:18:41,152 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:41,152 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:18:41,152 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 19:18:44,926 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 19:18:44,926 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:18:44,947 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 19:18:44,947 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 19:18:44,958 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:18:44,958 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:18:44,958 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:18:44,958 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:18:44,960 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:44,960 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 19:18:44,960 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:18:46,417 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:18:46,417 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:18:46,425 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:18:46,425 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:18:46,429 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:18:46,429 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:18:46,429 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:18:46,429 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 19:18:46,429 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:18:46,429 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 19:18:46,429 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:18:52,779 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 19:18:52,779 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:18:52,779 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:18:52,805 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:18:52,805 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:18:52,811 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:19:11,339 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:19:11,339 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:19:11,339 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:19:11,339 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:11,339 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:19:11,519 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:19:11,519 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:19:11,519 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:19:11,519 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:19:11,521 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:19:11,521 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:11,521 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:19:11,523 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:19:11,523 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:19:11,523 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:19:11,534 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:19:11,535 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:19:11,535 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:19:11,535 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:19:11,535 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:11,535 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:19:11,535 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:19:11,535 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:19:11,537 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:19:11,537 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:11,537 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:19:11,537 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:19:17,867 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:19:17,867 - WARNING - root - __init__ - Patient Jon Die (ID: 1) has no contact number in booking view.
2025-04-30 19:19:17,867 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:19:17,868 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:19:17,978 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:19:17,978 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:19:17,978 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:19:17,978 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:21,867 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-04-30 ---
2025-04-30 19:19:21,869 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:19:21.869291
2025-04-30 19:19:21,869 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:19:21,869 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:19:21,870 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots - Slot Generation Loop: Start=2025-04-30 09:00:00, End Limit=2025-04-30 17:00:00
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:19:21,870 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:19:21,871 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:19:21,872 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:19:21.869291)
2025-04-30 19:19:21,873 - DEBUG - root - show_available_slots - --- Slot Generation Loop Finished ---
2025-04-30 19:19:21,874 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:20:58,529 - INFO - root - on_closing - Application window closing.
2025-04-30 19:21:00,440 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:21:00,460 - INFO - root - <module> - Application has finished.
2025-04-30 19:22:53,018 - INFO - root - <module> - Application starting up.
2025-04-30 19:22:53,018 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:22:53,026 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:22:53,030 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:22:53,034 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:22:53,037 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:22:53,041 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:22:53,045 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:22:53,045 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-04-30 19:22:53,229 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-04-30 19:22:53,233 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:22:53,233 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:22:53,321 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:22:53,350 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:22:53,350 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:22:53,354 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:22:53,369 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:22:59,553 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 19:22:59,553 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 19:22:59,554 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:22:59,554 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:22:59,554 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:22:59,738 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 19:22:59,738 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 19:22:59,738 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 19:22:59,741 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:22:59,742 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 19:22:59,742 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 19:22:59,745 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:22:59,745 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:22:59,745 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:22:59,745 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:22:59,749 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:22:59,749 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:22:59,749 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:22:59,749 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:22:59,749 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:22:59,749 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-04-30 19:22:59,750 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:22:59,750 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 19:23:14,196 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 19:23:14,196 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:23:14,201 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 19:23:14,201 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 19:23:14,211 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:23:14,211 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:23:14,211 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:23:14,212 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:23:14,212 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:14,212 - INFO - root - load_staff_list - No staff found in database.
2025-04-30 19:23:14,212 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:23:35,513 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 19:23:35,514 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 19:23:35,514 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:23:35,514 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:23:35,514 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:35,515 - DEBUG - root - check_username_exists - Username 'staff' exists: False
2025-04-30 19:23:35,515 - DEBUG - root - hash_password - Hashing password.
2025-04-30 19:23:35,697 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff', b'$2b$12$u1uNFdnnqzH6nmDGRZMMBe2CvQ/N1xd0rGJcHleWVj2zIXChyYFq.', 'Staff')
2025-04-30 19:23:35,704 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-04-30 19:23:35,704 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:35,704 - INFO - root - add_staff - User login created for 'staff'. User ID: 2
2025-04-30 19:23:35,704 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (2, 'staff1', 'vasvsdv', 'sdbvasdbvsdfb')
2025-04-30 19:23:35,709 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:23:35,709 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:35,709 - INFO - root - add_staff - Staff record created for 'staff1'. Staff ID: 1, Linked to User ID: 2
2025-04-30 19:23:37,735 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:23:37,735 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:23:37,735 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:23:37,736 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:23:37,736 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:37,736 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 19:23:37,736 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:23:39,903 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-04-30 19:23:39,903 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:23:39,924 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-04-30 19:23:39,925 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-04-30 19:23:39,961 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-04-30 19:23:39,961 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 19:23:39,961 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:23:39,962 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:23:39,962 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:23:39,962 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:23:39,962 - INFO - root - load_patient_list - No patients found in database.
2025-04-30 19:23:39,963 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 19:24:31,379 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-04-30 19:24:31,379 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-04-30 19:24:31,379 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:24:31,380 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:24:31,380 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:31,380 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-04-30 19:24:31,380 - DEBUG - root - hash_password - Hashing password.
2025-04-30 19:24:31,558 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-04-30 19:24:31,558 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$NP7pxEFodITql/brHgAiseocKF.0b2ms9UdL8/JIXkzBmPjic257a', 'Patient')
2025-04-30 19:24:31,562 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 3
2025-04-30 19:24:31,562 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:31,563 - INFO - root - add_patient - User login created for 'jd'. User ID: 3
2025-04-30 19:24:31,563 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (3, 'vsdvsdv', '2000-10-31', 'm', '23423324', 'afsbsdfbsdf\tavs', 'asdbvdasfbsadfb', 'adfsbsadfbsdfb')
2025-04-30 19:24:31,566 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:24:31,567 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:31,567 - INFO - root - add_patient - Patient record created for 'vsdvsdv'. Patient ID: 1, Linked to User ID: 3
2025-04-30 19:24:31,567 - DEBUG - root - add_patient - Adding insurance details for new patient ID: 1
2025-04-30 19:24:31,567 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (1, 'asvdasvdasd', '1231231', '2021-10-31', 'asdvdsavdvds')
2025-04-30 19:24:31,570 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:24:31,570 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:31,570 - DEBUG - root - add_patient - Insurance details added for patient ID: 1
2025-04-30 19:24:34,171 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-04-30 19:24:34,171 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:24:34,172 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:24:34,172 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:24:34,173 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:34,173 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:24:34,173 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-04-30 19:24:36,097 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:24:36,097 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:24:36,112 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:24:36,112 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:24:36,115 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:24:36,115 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:24:36,115 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:24:36,116 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 19:24:36,116 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:36,116 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 19:24:36,116 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:24:39,177 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 19:24:39,177 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:24:39,177 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:24:39,229 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:24:39,230 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:24:39,240 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:24:49,475 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:24:49,475 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:24:49,475 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:24:49,476 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:49,476 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:24:49,655 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:24:49,655 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:24:49,655 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:24:49,655 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:24:49,656 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:24:49,656 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:49,656 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:24:49,658 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:24:49,659 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:24:49,659 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:24:49,670 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:24:49,671 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:24:49,671 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:24:49,672 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:24:49,672 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:49,672 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:24:49,672 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:24:49,672 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:24:49,672 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:24:49,673 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:24:49,673 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:24:49,673 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:25:00,305 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:25:00,305 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:25:00,305 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:25:00,306 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:25:00,393 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:25:00,393 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:25:00,393 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:25:00,393 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:25:04,728 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-04-30 ---
2025-04-30 19:25:04,730 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:25:04.730629
2025-04-30 19:25:04,730 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:25:04,730 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:25:04,730 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:25:04,730 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,731 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:25:04,732 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,744 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:25:04.730629)
2025-04-30 19:25:04,745 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:25:04,746 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:31:17,821 - INFO - root - on_closing - Application window closing.
2025-04-30 19:31:19,387 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:31:19,404 - INFO - root - <module> - Application has finished.
2025-04-30 19:31:23,770 - INFO - root - <module> - Application starting up.
2025-04-30 19:31:23,771 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:31:23,771 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:31:23,771 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:31:23,771 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:31:23,771 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:31:23,773 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:31:23,773 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:31:23,773 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:31:23,773 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:31:23,826 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:31:23,844 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:31:23,845 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:31:23,845 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:31:23,851 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:31:36,688 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:31:36,688 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:31:36,689 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:31:36,689 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:36,689 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:31:36,869 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:31:36,869 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:31:36,869 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:31:36,869 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:31:36,870 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:31:36,870 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:36,870 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:31:36,872 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:31:36,872 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:31:36,873 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:31:36,884 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:31:36,885 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:31:36,885 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:31:36,886 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:31:36,886 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:36,886 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:31:36,886 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:31:36,886 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:31:36,886 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:31:36,886 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:36,886 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:31:36,886 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:31:43,822 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:31:43,822 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:31:43,822 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:31:43,823 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:31:43,906 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:31:43,906 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:31:43,907 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:31:43,907 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:46,971 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:31:46,971 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:31:46,971 - DEBUG - root - selection_changed -   Selected Date String: '2025-04-30'
2025-04-30 19:31:46,971 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:31:46,971 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-04-30
2025-04-30 19:31:46,971 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-04-30 ---
2025-04-30 19:31:46,974 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:31:46.974434
2025-04-30 19:31:46,974 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:31:46,974 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:31:46,975 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:31:46,975 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,976 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:31:46.974434)
2025-04-30 19:31:46,977 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:31:46,978 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:31:46,978 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:32:16,016 - INFO - root - on_closing - Application window closing.
2025-04-30 19:32:17,687 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:32:17,705 - INFO - root - <module> - Application has finished.
2025-04-30 19:33:11,921 - INFO - root - <module> - Application starting up.
2025-04-30 19:33:11,922 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:33:11,922 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:33:11,923 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:33:11,923 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:33:11,977 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:33:11,993 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:33:11,993 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:33:11,995 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:33:12,001 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:33:19,784 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:33:19,784 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:33:19,785 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:33:19,785 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:33:19,785 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:33:19,970 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:33:19,970 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:33:19,970 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:33:19,970 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:33:19,970 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:33:19,970 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:33:19,970 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:33:19,973 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:33:19,973 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:33:19,973 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:33:19,984 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:33:19,985 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:33:19,985 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:33:19,986 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:33:19,986 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:33:19,986 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:33:19,986 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:33:19,986 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:33:19,987 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:33:19,987 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:33:19,987 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:33:19,987 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:33:26,717 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:33:26,718 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:33:26,718 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:33:26,719 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:33:26,802 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:33:26,802 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:33:26,803 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:33:26,803 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:35:53,551 - INFO - root - on_closing - Application window closing.
2025-04-30 19:35:55,262 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:35:55,280 - INFO - root - <module> - Application has finished.
2025-04-30 19:38:03,568 - INFO - root - <module> - Application starting up.
2025-04-30 19:38:03,568 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:38:03,569 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:38:03,570 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:38:03,570 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:38:03,624 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:38:03,642 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:38:03,642 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:38:03,643 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:38:03,648 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:38:11,071 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:38:11,071 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:38:11,072 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:38:11,072 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:11,072 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:38:11,253 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:38:11,253 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:38:11,253 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:38:11,253 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:38:11,254 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:38:11,254 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:11,254 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:38:11,256 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:38:11,256 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:38:11,257 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:38:11,268 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:38:11,269 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:38:11,269 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:38:11,270 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:38:11,270 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:11,270 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:38:11,270 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:38:11,270 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:38:11,270 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:38:11,270 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:11,271 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:38:11,271 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:38:16,605 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:38:16,605 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:38:16,605 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:38:16,607 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:38:16,696 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:38:16,696 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:38:16,697 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:38:16,697 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:22,039 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:38:22,039 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:38:22,039 - DEBUG - root - selection_changed -   Selected Date String: '2025-04-30'
2025-04-30 19:38:22,039 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:38:22,039 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-04-30
2025-04-30 19:38:22,039 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-04-30 ---
2025-04-30 19:38:22,041 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:38:22.041128
2025-04-30 19:38:22,041 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:38:22,041 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:38:22,041 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,042 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,043 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:38:22.041128)
2025-04-30 19:38:22,044 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:38:22,045 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:38:22,045 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:38:43,321 - INFO - root - on_closing - Application window closing.
2025-04-30 19:38:44,856 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:38:44,874 - INFO - root - <module> - Application has finished.
2025-04-30 19:43:29,180 - INFO - root - <module> - Application starting up.
2025-04-30 19:43:29,181 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:43:29,181 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:43:29,181 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:43:29,182 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:43:29,182 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:43:29,182 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:43:29,182 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:43:29,182 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:43:29,182 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:43:29,237 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:43:29,254 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:43:29,254 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:43:29,255 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:43:29,261 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:43:38,351 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:43:38,351 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:43:38,352 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:43:38,352 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:38,352 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:43:38,532 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:43:38,532 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:43:38,532 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:43:38,532 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:43:38,533 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:43:38,533 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:38,533 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:43:38,535 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:43:38,535 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:43:38,535 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:43:38,547 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:43:38,547 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:43:38,547 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:43:38,548 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:43:38,548 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:38,548 - INFO - root - load_appointments - No appointments found for patient_id: 1
2025-04-30 19:43:38,548 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:43:38,548 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:43:38,548 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:43:38,548 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:38,548 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:43:38,548 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:43:43,477 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:43:43,477 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:43:43,477 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:43:43,479 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:43:43,567 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:43:43,567 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:43:43,567 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:43:43,568 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:48,681 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:43:48,682 - DEBUG - root - selection_changed -   Selected Staff Display: ''
2025-04-30 19:43:48,682 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-02'
2025-04-30 19:43:48,682 - DEBUG - root - selection_changed -   Staff or Date not yet selected. Clearing slots.
2025-04-30 19:43:48,682 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:43:58,426 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:43:58,426 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:43:58,426 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-02'
2025-04-30 19:43:58,426 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:43:58,426 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-05-02
2025-04-30 19:43:58,427 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-05-02 ---
2025-04-30 19:43:58,428 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:43:58.428394
2025-04-30 19:43:58,428 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-05-02')
2025-04-30 19:43:58,429 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:43:58,429 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:43:58,429 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-05-02: set()
2025-04-30 19:43:58,429 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:43:58,429 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-05-02 09:00:00)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     -> Slot Added: 09:00
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-05-02 09:30:00)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     -> Slot Added: 09:30
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-05-02 10:00:00)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     -> Slot Added: 10:00
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-05-02 10:30:00)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     -> Slot Added: 10:30
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-05-02 11:00:00)
2025-04-30 19:43:58,430 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     -> Slot Added: 11:00
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-05-02 11:30:00)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     -> Slot Added: 11:30
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-05-02 12:00:00)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     -> Slot Added: 12:00
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-05-02 12:30:00)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     -> Slot Added: 12:30
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-05-02 13:00:00)
2025-04-30 19:43:58,431 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     -> Slot Added: 13:00
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-05-02 13:30:00)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     -> Slot Added: 13:30
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-05-02 14:00:00)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     -> Slot Added: 14:00
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-05-02 14:30:00)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     -> Slot Added: 14:30
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-05-02 15:00:00)
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,432 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     -> Slot Added: 15:00
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-05-02 15:30:00)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     -> Slot Added: 15:30
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-05-02 16:00:00)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:00:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     -> Slot Added: 16:00
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-05-02 16:30:00)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:30:00 < Now 2025-04-30 19:43:58.428394)
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots -     -> Slot Added: 16:30
2025-04-30 19:43:58,433 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:43:58,434 - INFO - root - show_available_slots - Displaying 16 available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30']
2025-04-30 19:43:58,434 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:44:03,537 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:44:03,537 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:44:03,537 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:44:03,538 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:44:03,622 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:44:03,622 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:44:03,623 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:44:03,623 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:05,972 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:44:05,972 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:44:05,972 - DEBUG - root - selection_changed -   Selected Date String: '2025-04-30'
2025-04-30 19:44:05,972 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:44:05,972 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-04-30
2025-04-30 19:44:05,972 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-04-30 ---
2025-04-30 19:44:05,972 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:44:05.972302
2025-04-30 19:44:05,972 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-04-30')
2025-04-30 19:44:05,973 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:44:05,973 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,973 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,974 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,977 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:44:05.972302)
2025-04-30 19:44:05,978 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:44:05,978 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:44:05,979 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:44:10,229 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:44:10,229 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:44:10,229 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-02'
2025-04-30 19:44:10,230 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:44:10,230 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-05-02
2025-04-30 19:44:10,230 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-05-02 ---
2025-04-30 19:44:10,230 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:44:10.230716
2025-04-30 19:44:10,230 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-05-02')
2025-04-30 19:44:10,231 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:44:10,231 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-05-02: set()
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-05-02 09:00:00)
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     -> Slot Added: 09:00
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-05-02 09:30:00)
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     -> Slot Added: 09:30
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-05-02 10:00:00)
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,231 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 10:00
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-05-02 10:30:00)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 10:30
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-05-02 11:00:00)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 11:00
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-05-02 11:30:00)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 11:30
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-05-02 12:00:00)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 12:00
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-05-02 12:30:00)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -     -> Slot Added: 12:30
2025-04-30 19:44:10,232 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-05-02 13:00:00)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     -> Slot Added: 13:00
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-05-02 13:30:00)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     -> Slot Added: 13:30
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-05-02 14:00:00)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     -> Slot Added: 14:00
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-05-02 14:30:00)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,233 - DEBUG - root - show_available_slots -     -> Slot Added: 14:30
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-05-02 15:00:00)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     -> Slot Added: 15:00
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-05-02 15:30:00)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     -> Slot Added: 15:30
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-05-02 16:00:00)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:00:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     -> Slot Added: 16:00
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-05-02 16:30:00)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:30:00 < Now 2025-04-30 19:44:10.230716)
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots -     -> Slot Added: 16:30
2025-04-30 19:44:10,234 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:44:10,235 - INFO - root - show_available_slots - Displaying 16 available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30']
2025-04-30 19:44:10,235 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:44:13,999 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:44:13,999 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:44:13,999 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-01'
2025-04-30 19:44:14,000 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:44:14,000 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-05-01
2025-04-30 19:44:14,000 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-05-01 ---
2025-04-30 19:44:14,000 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:44:14.000816
2025-04-30 19:44:14,000 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-05-01')
2025-04-30 19:44:14,001 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:44:14,001 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:14,001 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-05-01: set()
2025-04-30 19:44:14,001 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:44:14,001 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-05-01 09:00:00)
2025-04-30 19:44:14,001 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 09:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     -> Slot Added: 09:00
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-05-01 09:30:00)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 09:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     -> Slot Added: 09:30
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-05-01 10:00:00)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 10:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     -> Slot Added: 10:00
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-05-01 10:30:00)
2025-04-30 19:44:14,002 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 10:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     -> Slot Added: 10:30
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-05-01 11:00:00)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 11:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     -> Slot Added: 11:00
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-05-01 11:30:00)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 11:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     -> Slot Added: 11:30
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-05-01 12:00:00)
2025-04-30 19:44:14,003 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 12:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     -> Slot Added: 12:00
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-05-01 12:30:00)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 12:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     -> Slot Added: 12:30
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-05-01 13:00:00)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 13:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     -> Slot Added: 13:00
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-05-01 13:30:00)
2025-04-30 19:44:14,004 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 13:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     -> Slot Added: 13:30
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-05-01 14:00:00)
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 14:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     -> Slot Added: 14:00
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-05-01 14:30:00)
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 14:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -     -> Slot Added: 14:30
2025-04-30 19:44:14,005 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-05-01 15:00:00)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 15:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     -> Slot Added: 15:00
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-05-01 15:30:00)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 15:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     -> Slot Added: 15:30
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-05-01 16:00:00)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 16:00:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -     -> Slot Added: 16:00
2025-04-30 19:44:14,006 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-05-01 16:30:00)
2025-04-30 19:44:14,007 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:14,007 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-01 16:30:00 < Now 2025-04-30 19:44:14.000816)
2025-04-30 19:44:14,007 - DEBUG - root - show_available_slots -     -> Slot Added: 16:30
2025-04-30 19:44:14,007 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:44:14,007 - INFO - root - show_available_slots - Displaying 16 available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30']
2025-04-30 19:44:14,007 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:44:16,258 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:44:16,259 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff1 (ID: 1)'
2025-04-30 19:44:16,259 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-07'
2025-04-30 19:44:16,259 - DEBUG - root - selection_changed -   Retrieved Staff ID: 1
2025-04-30 19:44:16,259 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 1, Date 2025-05-07
2025-04-30 19:44:16,259 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 1, Date: 2025-05-07 ---
2025-04-30 19:44:16,259 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:44:16.259413
2025-04-30 19:44:16,260 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (1, '2025-05-07')
2025-04-30 19:44:16,261 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:44:16,261 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-05-07: set()
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-05-07 09:00:00)
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 09:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,262 - DEBUG - root - show_available_slots -     -> Slot Added: 09:00
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-05-07 09:30:00)
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 09:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -     -> Slot Added: 09:30
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-05-07 10:00:00)
2025-04-30 19:44:16,263 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 10:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -     -> Slot Added: 10:00
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-05-07 10:30:00)
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 10:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,264 - DEBUG - root - show_available_slots -     -> Slot Added: 10:30
2025-04-30 19:44:16,265 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-05-07 11:00:00)
2025-04-30 19:44:16,265 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,265 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 11:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,265 - DEBUG - root - show_available_slots -     -> Slot Added: 11:00
2025-04-30 19:44:16,265 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-05-07 11:30:00)
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 11:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     -> Slot Added: 11:30
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-05-07 12:00:00)
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 12:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,266 - DEBUG - root - show_available_slots -     -> Slot Added: 12:00
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-05-07 12:30:00)
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 12:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -     -> Slot Added: 12:30
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-05-07 13:00:00)
2025-04-30 19:44:16,267 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 13:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -     -> Slot Added: 13:00
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-05-07 13:30:00)
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 13:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,268 - DEBUG - root - show_available_slots -     -> Slot Added: 13:30
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-05-07 14:00:00)
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 14:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -     -> Slot Added: 14:00
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-05-07 14:30:00)
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,269 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 14:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     -> Slot Added: 14:30
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-05-07 15:00:00)
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 15:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     -> Slot Added: 15:00
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-05-07 15:30:00)
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 15:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -     -> Slot Added: 15:30
2025-04-30 19:44:16,270 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-05-07 16:00:00)
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 16:00:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -     -> Slot Added: 16:00
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-05-07 16:30:00)
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:44:16,272 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-07 16:30:00 < Now 2025-04-30 19:44:16.259413)
2025-04-30 19:44:16,273 - DEBUG - root - show_available_slots -     -> Slot Added: 16:30
2025-04-30 19:44:16,273 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:44:16,274 - INFO - root - show_available_slots - Displaying 16 available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30']
2025-04-30 19:44:16,274 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:44:19,613 - DEBUG - root - on_slot_select - Time slot selected: 09:30
2025-04-30 19:44:21,777 - INFO - root - book_selected_appointment - Attempting booking for Patient 1, Staff 1, DateTime 2025-05-07 09:30:00
2025-04-30 19:44:21,777 - DEBUG - root - execute_query - Executing query: 
            SELECT 1 FROM Appointments
            WHERE staff_id = ? AND appointment_datetime = ?
         with params: (1, '2025-05-07 09:30:00')
2025-04-30 19:44:21,778 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:44:21,778 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:21,778 - DEBUG - root - execute_query - Executing query: 
            INSERT INTO Appointments (patient_id, staff_id, appointment_datetime, status, reason)
            VALUES (?, ?, ?, ?, ?)
         with params: (1, 1, '2025-05-07 09:30:00', 'Scheduled', 'Patient Booking')
2025-04-30 19:44:21,786 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-04-30 19:44:21,786 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:21,786 - INFO - root - book_selected_appointment - Appointment booked successfully. ID: 1
2025-04-30 19:44:37,842 - INFO - root - logout - User logged out: User ID 3, Role Patient
2025-04-30 19:44:37,842 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:44:37,842 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:44:37,857 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:44:37,857 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:44:37,861 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:44:47,135 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 19:44:47,135 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:44:47,136 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:44:47,136 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:47,136 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:44:47,315 - WARNING - root - verify_login - Login failed for user: staff - Incorrect password.
2025-04-30 19:44:55,757 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 19:44:55,757 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:44:55,758 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:44:55,758 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:44:55,758 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:44:55,943 - WARNING - root - verify_login - Login failed for user: staff - Incorrect password.
2025-04-30 19:45:03,857 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 19:45:03,857 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:45:03,857 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:45:03,858 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:03,858 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:45:04,043 - WARNING - root - verify_login - Login failed for user: staff - Incorrect password.
2025-04-30 19:45:16,041 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 19:45:16,041 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:45:16,042 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:45:16,042 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:16,042 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:45:16,221 - WARNING - root - verify_login - Login failed for user: staff - Incorrect password.
2025-04-30 19:45:21,769 - INFO - root - verify_login - Attempting login for user: staff
2025-04-30 19:45:21,769 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:45:21,769 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:45:21,769 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:21,769 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:45:21,949 - WARNING - root - verify_login - Login failed for user: staff - Incorrect password.
2025-04-30 19:45:32,911 - INFO - root - verify_login - Attempting login for user: admin
2025-04-30 19:45:32,911 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-04-30 19:45:32,911 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:45:32,912 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:32,912 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:45:33,096 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-04-30 19:45:33,096 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-04-30 19:45:33,096 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-04-30 19:45:33,099 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:45:33,099 - INFO - root - __init__ - Initializing AdminFrame.
2025-04-30 19:45:33,099 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-04-30 19:45:33,102 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-04-30 19:45:33,102 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:45:33,102 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-04-30 19:45:33,102 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-04-30 19:45:33,105 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-04-30 19:45:33,105 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-04-30 19:45:33,105 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-04-30 19:45:33,106 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-04-30 19:45:33,106 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:33,106 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-04-30 19:45:33,106 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-04-30 19:45:33,106 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-04-30 19:45:35,788 - INFO - root - on_user_select - User selected: ID 2, Username: staff (Admin)
2025-04-30 19:45:41,627 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-04-30 19:45:41,627 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-04-30 19:45:41,631 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-04-30 19:45:41,632 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-04-30 19:45:41,642 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:45:41,642 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:45:41,642 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:45:41,643 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:45:41,643 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:41,643 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-04-30 19:45:41,643 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:45:43,822 - INFO - root - on_staff_select - Staff selected: ID 1 (Admin)
2025-04-30 19:45:43,823 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE staff_id = ? with params: (1,)
2025-04-30 19:45:43,826 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:45:43,826 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:45:43,827 - DEBUG - root - on_staff_select - Loading details for staff ID: 1
2025-04-30 19:45:58,792 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:45:58,793 - DEBUG - root - on_staff_select - Staff list selection cleared (Admin).
2025-04-30 19:45:58,793 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:46:18,891 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 19:46:18,891 - DEBUG - root - check_username_exists - Checking if username exists: staff
2025-04-30 19:46:18,891 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff',)
2025-04-30 19:46:18,892 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:46:18,892 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:18,892 - DEBUG - root - check_username_exists - Username 'staff' exists: True
2025-04-30 19:46:25,868 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-04-30 19:46:25,868 - DEBUG - root - check_username_exists - Checking if username exists: staff2
2025-04-30 19:46:25,869 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 19:46:25,869 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:46:25,869 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:25,869 - DEBUG - root - check_username_exists - Username 'staff2' exists: False
2025-04-30 19:46:25,870 - DEBUG - root - hash_password - Hashing password.
2025-04-30 19:46:26,050 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('staff2', b'$2b$12$ckZa.lP8kXwr2YF/dfxtKegkdZLvsOg9w6Y9DnutPE1rIHB1xnU4.', 'Staff')
2025-04-30 19:46:26,057 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 4
2025-04-30 19:46:26,057 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:26,057 - INFO - root - add_staff - User login created for 'staff2'. User ID: 4
2025-04-30 19:46:26,057 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (4, 'staff2', 'abfbdf', 'bfbdfb')
2025-04-30 19:46:26,061 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-04-30 19:46:26,061 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:26,061 - INFO - root - add_staff - Staff record created for 'staff2'. Staff ID: 2, Linked to User ID: 4
2025-04-30 19:46:28,677 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-04-30 19:46:28,678 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-04-30 19:46:28,678 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-04-30 19:46:28,679 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 19:46:28,679 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:28,679 - DEBUG - root - load_staff_list - Populating staff list with 2 records.
2025-04-30 19:46:28,679 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-04-30 19:46:33,907 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-04-30 19:46:33,907 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:46:33,907 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:46:33,919 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:46:33,919 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:46:33,923 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:46:43,924 - INFO - root - verify_login - Attempting login for user: staff2
2025-04-30 19:46:43,924 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 19:46:43,925 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:46:43,925 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:43,925 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:46:44,110 - INFO - root - verify_login - Login successful for user: staff2, Role: Staff
2025-04-30 19:46:44,110 - INFO - root - login_successful - Login successful. User ID: 4, Role: Staff. Navigating to role frame.
2025-04-30 19:46:44,110 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 4
2025-04-30 19:46:44,110 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (4,)
2025-04-30 19:46:44,111 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:46:44,111 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:44,111 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 19:46:44,113 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:46:44,113 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-30 19:46:44,114 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 2)
2025-04-30 19:46:44,117 - INFO - root - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-30 19:46:44,117 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:46:44,117 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 2)
2025-04-30 19:46:44,117 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 2)
2025-04-30 19:46:44,134 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-30 19:46:44,134 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:46:44,134 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:46:44,135 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:46:44,135 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:44,135 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:46:44,135 - DEBUG - root - clear_form - Clearing patient details form (Staff 2).
2025-04-30 19:46:44,135 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 19:46:50,829 - INFO - root - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-30 19:46:50,829 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:46:50,845 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 2)
2025-04-30 19:46:50,845 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 2)
2025-04-30 19:46:50,904 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 19:46:50,905 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 19:46:50,905 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:46:50,905 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:50,905 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:46:50,905 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:46:50,906 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:46:50,906 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:46:50,906 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:46:50,906 - INFO - root - load_appointment_list - No appointments found for display (Staff 2).
2025-04-30 19:46:50,906 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:47:01,813 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:47:01,813 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:47:01,813 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:47:01,814 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:47:01,814 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:01,814 - INFO - root - load_appointment_list - No appointments found for display (Staff 2).
2025-04-30 19:47:01,814 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:47:13,144 - INFO - root - logout - User logged out: User ID 4, Role Staff
2025-04-30 19:47:13,144 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:47:13,144 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:47:13,167 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:47:13,168 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:47:13,171 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:47:21,351 - INFO - root - verify_login - Attempting login for user: jd
2025-04-30 19:47:21,351 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-04-30 19:47:21,351 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:47:21,351 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:21,351 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:47:21,536 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-04-30 19:47:21,536 - INFO - root - login_successful - Login successful. User ID: 3, Role: Patient. Navigating to role frame.
2025-04-30 19:47:21,536 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 3
2025-04-30 19:47:21,536 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (3,)
2025-04-30 19:47:21,537 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:47:21,537 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:21,537 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-04-30 19:47:21,539 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:47:21,540 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-04-30 19:47:21,540 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-04-30 19:47:21,550 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-04-30 19:47:21,550 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-04-30 19:47:21,552 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-04-30 19:47:21,552 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:47:21,552 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:21,552 - INFO - root - load_appointments - Found 1 appointments for patient_id: 1
2025-04-30 19:47:21,552 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-04-30 19:47:21,552 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-04-30 19:47:21,553 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:47:21,553 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:21,553 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-04-30 19:47:21,553 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-04-30 19:47:23,889 - DEBUG - root - show_booking_view - Opening booking window for patient ID: 1
2025-04-30 19:47:23,889 - WARNING - root - __init__ - Patient vsdvsdv (ID: 1) has no contact number in booking view.
2025-04-30 19:47:23,889 - DEBUG - root - __init__ - Initializing PatientBookingView for Patient ID: 1
2025-04-30 19:47:23,890 - DEBUG - root - create_widgets - Creating widgets for PatientBookingView (Patient ID: 1)
2025-04-30 19:47:23,972 - DEBUG - root - get_all_staff_for_selection - Fetching all staff (ID, Name) for selection.
2025-04-30 19:47:23,972 - DEBUG - root - execute_query - Executing query: SELECT staff_id, name FROM Staff ORDER BY name with params: ()
2025-04-30 19:47:23,973 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-04-30 19:47:23,973 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:27,495 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:47:27,496 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff2 (ID: 2)'
2025-04-30 19:47:27,496 - DEBUG - root - selection_changed -   Selected Date String: '2025-04-30'
2025-04-30 19:47:27,496 - DEBUG - root - selection_changed -   Retrieved Staff ID: 2
2025-04-30 19:47:27,496 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 2, Date 2025-04-30
2025-04-30 19:47:27,496 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 2, Date: 2025-04-30 ---
2025-04-30 19:47:27,496 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:47:27.496823
2025-04-30 19:47:27,496 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (2, '2025-04-30')
2025-04-30 19:47:27,497 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:47:27,497 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-04-30: set()
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-04-30 09:00:00)
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-04-30 09:30:00)
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,497 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 09:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-04-30 10:00:00)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-04-30 10:30:00)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 10:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-04-30 11:00:00)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-04-30 11:30:00)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 11:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-04-30 12:00:00)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,498 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-04-30 12:30:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 12:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-04-30 13:00:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-04-30 13:30:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 13:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-04-30 14:00:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-04-30 14:30:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 14:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-04-30 15:00:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-04-30 15:30:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 15:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-04-30 16:00:00)
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,500 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:00:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,502 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-04-30 16:30:00)
2025-04-30 19:47:27,502 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:27,502 - DEBUG - root - show_available_slots -     Is Past?   True (Slot Time 2025-04-30 16:30:00 < Now 2025-04-30 19:47:27.496823)
2025-04-30 19:47:27,502 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:47:27,502 - INFO - root - show_available_slots - No available slots found for this selection after filtering.
2025-04-30 19:47:27,502 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:47:30,144 - DEBUG - root - selection_changed - --- selection_changed method triggered ---
2025-04-30 19:47:30,144 - DEBUG - root - selection_changed -   Selected Staff Display: 'staff2 (ID: 2)'
2025-04-30 19:47:30,144 - DEBUG - root - selection_changed -   Selected Date String: '2025-05-02'
2025-04-30 19:47:30,144 - DEBUG - root - selection_changed -   Retrieved Staff ID: 2
2025-04-30 19:47:30,144 - DEBUG - root - selection_changed -   Calling show_available_slots for Staff ID 2, Date 2025-05-02
2025-04-30 19:47:30,144 - INFO - root - show_available_slots - --- Running show_available_slots for Staff ID: 2, Date: 2025-05-02 ---
2025-04-30 19:47:30,145 - DEBUG - root - show_available_slots - Current time ('now'): 2025-04-30 19:47:30.145364
2025-04-30 19:47:30,145 - DEBUG - root - execute_query - Executing query: 
                SELECT time(appointment_datetime) as booked_start_time
                FROM Appointments
                WHERE staff_id = ? AND date(appointment_datetime) = date(?) AND status = 'Scheduled'
             with params: (2, '2025-05-02')
2025-04-30 19:47:30,145 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:47:30,145 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots - Booked 'Scheduled' times (HH:MM) for 2025-05-02: set()
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots - Generating slots from 9:00 to 17:00 at 30 min intervals.
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -   Checking Slot: 09:00 (2025-05-02 09:00:00)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     -> Slot Added: 09:00
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -   Checking Slot: 09:30 (2025-05-02 09:30:00)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 09:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     -> Slot Added: 09:30
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -   Checking Slot: 10:00 (2025-05-02 10:00:00)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     -> Slot Added: 10:00
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -   Checking Slot: 10:30 (2025-05-02 10:30:00)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 10:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     -> Slot Added: 10:30
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -   Checking Slot: 11:00 (2025-05-02 11:00:00)
2025-04-30 19:47:30,146 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     -> Slot Added: 11:00
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -   Checking Slot: 11:30 (2025-05-02 11:30:00)
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 11:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     -> Slot Added: 11:30
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -   Checking Slot: 12:00 (2025-05-02 12:00:00)
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -     -> Slot Added: 12:00
2025-04-30 19:47:30,147 - DEBUG - root - show_available_slots -   Checking Slot: 12:30 (2025-05-02 12:30:00)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 12:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     -> Slot Added: 12:30
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -   Checking Slot: 13:00 (2025-05-02 13:00:00)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     -> Slot Added: 13:00
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -   Checking Slot: 13:30 (2025-05-02 13:30:00)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 13:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     -> Slot Added: 13:30
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -   Checking Slot: 14:00 (2025-05-02 14:00:00)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     -> Slot Added: 14:00
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -   Checking Slot: 14:30 (2025-05-02 14:30:00)
2025-04-30 19:47:30,149 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 14:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     -> Slot Added: 14:30
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -   Checking Slot: 15:00 (2025-05-02 15:00:00)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     -> Slot Added: 15:00
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -   Checking Slot: 15:30 (2025-05-02 15:30:00)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 15:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     -> Slot Added: 15:30
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -   Checking Slot: 16:00 (2025-05-02 16:00:00)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:00:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     -> Slot Added: 16:00
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -   Checking Slot: 16:30 (2025-05-02 16:30:00)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Booked? False (Checked against set())
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     Is Past?   False (Slot Time 2025-05-02 16:30:00 < Now 2025-04-30 19:47:30.145364)
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots -     -> Slot Added: 16:30
2025-04-30 19:47:30,150 - DEBUG - root - show_available_slots - --- Slot Generation Finished ---
2025-04-30 19:47:30,151 - INFO - root - show_available_slots - Displaying 16 available slots: ['09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30']
2025-04-30 19:47:30,151 - DEBUG - root - selection_changed - --- selection_changed method finished ---
2025-04-30 19:47:31,758 - DEBUG - root - on_slot_select - Time slot selected: 10:30
2025-04-30 19:47:33,862 - INFO - root - book_selected_appointment - Attempting booking for Patient 1, Staff 2, DateTime 2025-05-02 10:30:00
2025-04-30 19:47:33,863 - DEBUG - root - execute_query - Executing query: 
            SELECT 1 FROM Appointments
            WHERE staff_id = ? AND appointment_datetime = ?
         with params: (2, '2025-05-02 10:30:00')
2025-04-30 19:47:33,863 - DEBUG - root - execute_query - Query fetched one row: No data
2025-04-30 19:47:33,863 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:33,863 - DEBUG - root - execute_query - Executing query: 
            INSERT INTO Appointments (patient_id, staff_id, appointment_datetime, status, reason)
            VALUES (?, ?, ?, ?, ?)
         with params: (1, 2, '2025-05-02 10:30:00', 'Scheduled', 'Patient Booking')
2025-04-30 19:47:33,871 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-04-30 19:47:33,871 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:33,871 - INFO - root - book_selected_appointment - Appointment booked successfully. ID: 2
2025-04-30 19:47:41,405 - INFO - root - logout - User logged out: User ID 3, Role Patient
2025-04-30 19:47:41,405 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:47:41,405 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:47:41,417 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:47:41,417 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:47:41,420 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:47:50,444 - INFO - root - verify_login - Attempting login for user: staff2
2025-04-30 19:47:50,444 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 19:47:50,445 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:47:50,445 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:50,445 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:47:50,630 - INFO - root - verify_login - Login successful for user: staff2, Role: Staff
2025-04-30 19:47:50,630 - INFO - root - login_successful - Login successful. User ID: 4, Role: Staff. Navigating to role frame.
2025-04-30 19:47:50,630 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 4
2025-04-30 19:47:50,630 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (4,)
2025-04-30 19:47:50,630 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:47:50,630 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:50,631 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 19:47:50,633 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:47:50,633 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-30 19:47:50,633 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 2)
2025-04-30 19:47:50,637 - INFO - root - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-30 19:47:50,637 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:47:50,637 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 2)
2025-04-30 19:47:50,637 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 2)
2025-04-30 19:47:50,653 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-30 19:47:50,653 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:47:50,653 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:47:50,654 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:47:50,654 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:50,654 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:47:50,654 - DEBUG - root - clear_form - Clearing patient details form (Staff 2).
2025-04-30 19:47:50,654 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 19:47:53,480 - INFO - root - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-30 19:47:53,481 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:47:53,501 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 2)
2025-04-30 19:47:53,501 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 2)
2025-04-30 19:47:53,564 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 19:47:53,564 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 19:47:53,565 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:47:53,565 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:53,565 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:47:53,565 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:47:53,565 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:47:53,566 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:47:53,566 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:53,566 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-04-30 19:47:53,566 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:47:54,723 - INFO - root - on_appointment_select - Appointment selected: ID 2 (Staff 2)
2025-04-30 19:47:54,723 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:47:54,723 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:47:54,724 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:47:54,725 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:47:54,727 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=2, Appt Status='Scheduled', Appt Staff ID=2 (Type: <class 'int'>), Logged-in Staff ID=2 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=True
2025-04-30 19:47:54,727 - DEBUG - root - on_appointment_select - Enable Cancel: True, Enable Remove: False
2025-04-30 19:48:04,631 - WARNING - root - cancel_appointment - Staff 2 attempting to cancel appointment ID: 2
2025-04-30 19:48:04,631 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:48:04,631 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:48:04,632 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:48:04,632 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:48:09,619 - DEBUG - root - execute_query - Executing query: UPDATE Appointments SET status = ? WHERE appointment_id = ? with params: ('Cancelled', 2)
2025-04-30 19:48:09,627 - INFO - root - execute_query - UPDATE/DELETE query committed successfully. Rows affected: 1
2025-04-30 19:48:09,627 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:48:09,627 - INFO - root - cancel_appointment - Appointment ID 2 cancelled successfully.
2025-04-30 19:48:11,525 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:48:11,526 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:48:11,526 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:48:11,527 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:48:11,527 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:48:11,527 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-04-30 19:48:11,527 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:48:11,527 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:48:14,261 - INFO - root - on_appointment_select - Appointment selected: ID 2 (Staff 2)
2025-04-30 19:48:14,262 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:48:14,262 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:48:14,265 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:48:14,265 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:48:14,266 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=2, Appt Status='Cancelled', Appt Staff ID=2 (Type: <class 'int'>), Logged-in Staff ID=2 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 19:48:14,266 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 19:48:17,064 - WARNING - root - remove_appointment - Staff 2 attempting to REMOVE appointment ID: 2
2025-04-30 19:48:17,064 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:48:17,065 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:48:17,065 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:48:17,065 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:49:14,082 - WARNING - root - remove_appointment - Staff 2 attempting to REMOVE appointment ID: 2
2025-04-30 19:49:14,082 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:49:14,082 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:49:14,084 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:49:14,084 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:52:44,794 - INFO - root - on_closing - Application window closing.
2025-04-30 19:52:46,295 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:52:46,320 - INFO - root - <module> - Application has finished.
2025-04-30 19:52:49,859 - INFO - root - <module> - Application starting up.
2025-04-30 19:52:49,859 - INFO - root - initialize_database - Initializing database...
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Users table checked/created.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Patients table checked/created.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Staff table checked/created.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-04-30 19:52:49,860 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-04-30 19:52:49,860 - DEBUG - root - initialize_database - Database connection closed.
2025-04-30 19:52:49,915 - INFO - root - __init__ - Initializing GUI application.
2025-04-30 19:52:49,933 - INFO - root - show_login_frame - Displaying Login Frame.
2025-04-30 19:52:49,933 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-04-30 19:52:49,934 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-04-30 19:52:49,941 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-04-30 19:52:58,958 - INFO - root - verify_login - Attempting login for user: staff2
2025-04-30 19:52:58,958 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('staff2',)
2025-04-30 19:52:58,959 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:52:58,959 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:52:58,959 - DEBUG - root - check_password - Checking password hash.
2025-04-30 19:52:59,139 - INFO - root - verify_login - Login successful for user: staff2, Role: Staff
2025-04-30 19:52:59,139 - INFO - root - login_successful - Login successful. User ID: 4, Role: Staff. Navigating to role frame.
2025-04-30 19:52:59,139 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 4
2025-04-30 19:52:59,139 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (4,)
2025-04-30 19:52:59,140 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:52:59,140 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:52:59,140 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-04-30 19:52:59,142 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-04-30 19:52:59,143 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 2
2025-04-30 19:52:59,143 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 2)
2025-04-30 19:52:59,146 - INFO - root - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-30 19:52:59,146 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:52:59,146 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 2)
2025-04-30 19:52:59,146 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 2)
2025-04-30 19:52:59,163 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-30 19:52:59,163 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:52:59,163 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:52:59,163 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:52:59,163 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:52:59,163 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:52:59,163 - DEBUG - root - clear_form - Clearing patient details form (Staff 2).
2025-04-30 19:52:59,164 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-04-30 19:53:09,586 - INFO - root - show_appointment_management_view - Staff 2 switching to Appointment Management view.
2025-04-30 19:53:09,586 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:53:09,603 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 2)
2025-04-30 19:53:09,603 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 2)
2025-04-30 19:53:09,666 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-04-30 19:53:09,666 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-04-30 19:53:09,667 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:53:09,667 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:09,667 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:53:09,667 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:53:09,667 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:53:09,668 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:53:09,668 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:09,668 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-04-30 19:53:09,668 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:53:10,620 - INFO - root - on_appointment_select - Appointment selected: ID 2 (Staff 2)
2025-04-30 19:53:10,621 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:53:10,621 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:53:10,621 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:53:10,621 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:10,623 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=2, Appt Status='Cancelled', Appt Staff ID=2 (Type: <class 'int'>), Logged-in Staff ID=2 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=False
2025-04-30 19:53:10,623 - DEBUG - root - on_appointment_select - Enable Cancel: False, Enable Remove: True
2025-04-30 19:53:18,790 - WARNING - root - remove_appointment - Staff 2 attempting to REMOVE appointment ID: 2
2025-04-30 19:53:18,790 - DEBUG - root - remove_appointment - Re-fetching details inside remove_appointment...
2025-04-30 19:53:18,790 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 2
2025-04-30 19:53:18,790 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (2,)
2025-04-30 19:53:18,791 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-04-30 19:53:18,791 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:18,791 - DEBUG - root - remove_appointment - Re-fetched details status: Cancelled
2025-04-30 19:53:18,791 - DEBUG - root - remove_appointment - Checking if status 'Cancelled' is in allowed remove list: ['Scheduled', 'Cancelled', 'No Show']
2025-04-30 19:53:18,791 - DEBUG - root - remove_appointment - Status check passed for removal.
2025-04-30 19:53:18,791 - DEBUG - root - remove_appointment - Displaying confirmation dialog for removal...
2025-04-30 19:53:21,422 - DEBUG - root - remove_appointment - Confirmation result: True
2025-04-30 19:53:21,422 - DEBUG - root - remove_appointment - Attempting database DELETE operation...
2025-04-30 19:53:21,422 - DEBUG - root - execute_query - Executing query: DELETE FROM Appointments WHERE appointment_id = ? with params: (2,)
2025-04-30 19:53:21,430 - INFO - root - execute_query - UPDATE/DELETE query committed successfully. Rows affected: 1
2025-04-30 19:53:21,430 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:21,430 - DEBUG - root - remove_appointment - Result of execute_query for DELETE: True
2025-04-30 19:53:21,430 - INFO - root - remove_appointment - Appointment ID 2 removed successfully.
2025-04-30 19:53:22,609 - INFO - root - load_appointment_list - Loading appointment list (Staff 2)
2025-04-30 19:53:22,609 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=2, patient_id=None)
2025-04-30 19:53:22,609 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (2,)
2025-04-30 19:53:22,610 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-04-30 19:53:22,610 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:22,610 - INFO - root - load_appointment_list - No appointments found for display (Staff 2).
2025-04-30 19:53:22,610 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:53:22,611 - DEBUG - root - clear_form - Clearing appointment form (Staff 2)
2025-04-30 19:53:29,790 - INFO - root - show_patient_management_view - Staff 2 switching to Patient Management view.
2025-04-30 19:53:29,790 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-04-30 19:53:29,808 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 2)
2025-04-30 19:53:29,808 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 2)
2025-04-30 19:53:29,827 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 2)
2025-04-30 19:53:29,827 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-04-30 19:53:29,827 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-04-30 19:53:29,828 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-04-30 19:53:29,828 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-04-30 19:53:29,828 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-04-30 19:53:29,828 - DEBUG - root - clear_form - Clearing patient details form (Staff 2).
2025-04-30 19:53:33,002 - INFO - root - on_closing - Application window closing.
2025-04-30 19:53:34,698 - INFO - root - on_closing - Application shutting down.
2025-04-30 19:53:34,724 - INFO - root - <module> - Application has finished.
2025-05-01 10:22:53,335 - INFO - root - <module> - Application starting up.
2025-05-01 10:22:53,337 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:22:53,343 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:22:53,344 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:22:53,345 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:22:53,345 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:22:53,346 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:22:53,346 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:22:53,347 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:22:53,347 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:22:53,595 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:22:53,644 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:22:53,645 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:22:53,649 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:22:53,676 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:23:01,566 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:23:01,566 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:23:01,575 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:23:01,576 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:23:01,576 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:23:01,828 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:23:01,829 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:23:01,829 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:23:01,838 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:23:01,840 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:23:01,841 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:23:01,846 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:23:01,846 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:23:01,846 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:23:01,847 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:23:01,854 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:23:01,855 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:23:01,855 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:23:01,860 - DEBUG - root - execute_query - Query fetched 4 rows.
2025-05-01 10:23:01,861 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:23:01,861 - DEBUG - root - load_user_list - Populating user list with 4 records.
2025-05-01 10:23:01,861 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:23:01,861 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:23:34,793 - INFO - root - <module> - Application has finished.
2025-05-01 10:23:38,096 - INFO - root - <module> - Application starting up.
2025-05-01 10:23:38,098 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:23:38,115 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:23:38,130 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:23:38,146 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:23:38,166 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:23:38,184 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:23:38,218 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:23:38,220 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-05-01 10:23:38,679 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-05-01 10:23:38,697 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:23:38,706 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:23:39,058 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:23:39,097 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:23:39,098 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:23:39,101 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:23:39,119 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:23:47,678 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:23:47,678 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:23:47,680 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:23:47,680 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:23:47,680 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:23:47,895 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:23:47,896 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:23:47,896 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:23:47,905 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:23:47,906 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:23:47,906 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:23:47,909 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:23:47,910 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:23:47,911 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:23:47,911 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:23:47,917 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:23:47,918 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:23:47,918 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:23:47,922 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:23:47,922 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:23:47,922 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:23:47,922 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:23:47,922 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:24:00,126 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:24:00,126 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:24:00,132 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:24:00,132 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:24:00,152 - DEBUG - root - create_widgets - Delete patient *record* button added for Admin (Admin)
2025-05-01 10:24:00,153 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:24:00,153 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:24:00,153 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:24:00,154 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:24:00,154 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:24:00,154 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:24:00,154 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:25:56,239 - INFO - root - on_closing - Application window closing.
2025-05-01 10:25:58,201 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:25:58,240 - INFO - root - <module> - Application has finished.
2025-05-01 10:26:02,373 - INFO - root - <module> - Application starting up.
2025-05-01 10:26:02,379 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:26:02,408 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:26:02,409 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:26:02,411 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:26:02,413 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:26:02,415 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:26:02,417 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:26:02,419 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:26:02,420 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:26:02,653 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:26:02,695 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:26:02,696 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:26:02,698 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:26:02,712 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:26:10,135 - INFO - root - on_closing - Application window closing.
2025-05-01 10:26:11,618 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:26:11,631 - INFO - root - <module> - Application has finished.
2025-05-01 10:41:23,432 - INFO - root - <module> - Application starting up.
2025-05-01 10:41:23,433 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:41:23,442 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:41:23,442 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:41:23,443 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:41:23,443 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:41:23,443 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:41:23,444 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:41:23,444 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:41:23,444 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:41:23,589 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:41:23,672 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:41:23,675 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:41:23,684 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:41:23,724 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:41:31,837 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:41:31,837 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:41:31,840 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:41:31,840 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:31,840 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:41:32,050 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:41:32,050 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:41:32,051 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:41:32,060 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:41:32,061 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:41:32,061 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:41:32,064 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:41:32,065 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:32,065 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:41:32,065 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:41:32,070 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:41:32,070 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:41:32,070 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:41:32,074 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:41:32,074 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:32,074 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:41:32,074 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:41:32,074 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:41:34,973 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:41:34,973 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:34,981 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:41:34,981 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:41:35,014 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:41:35,014 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:41:35,014 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:41:35,018 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:35,018 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:35,018 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:41:35,018 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:41:36,397 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:41:36,397 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:36,406 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:41:36,406 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:41:36,419 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:41:36,419 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:41:36,419 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:41:36,421 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:36,422 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:36,422 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:41:36,422 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:41:37,573 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:41:37,573 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:37,579 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:41:37,579 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:41:37,584 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:41:37,584 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:41:37,584 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:41:37,587 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:41:37,587 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:37,587 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:41:37,587 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:41:38,461 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:41:38,461 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:38,470 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:41:38,470 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:41:38,483 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:41:38,483 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:41:38,483 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:41:38,485 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:38,485 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:38,485 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:41:38,485 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:41:39,205 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:41:39,205 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:39,211 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:41:39,212 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:41:39,232 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:41:39,232 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:41:39,232 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:41:39,234 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:39,235 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:39,235 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:41:39,235 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:41:39,756 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:41:39,757 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:39,766 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:41:39,766 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:41:39,778 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:41:39,778 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:41:39,778 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:41:39,781 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:39,781 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:39,781 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:41:39,781 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:41:40,277 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:41:40,277 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:40,283 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:41:40,283 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:41:40,286 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:41:40,286 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:41:40,286 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:41:40,289 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:41:40,289 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:40,289 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:41:40,289 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:41:46,645 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:41:46,645 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:41:46,654 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:41:46,654 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:41:46,665 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:41:46,665 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:41:46,665 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:41:46,668 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:41:46,669 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:41:46,669 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:41:46,669 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:41:48,397 - INFO - root - on_closing - Application window closing.
2025-05-01 10:41:49,904 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:41:49,923 - INFO - root - <module> - Application has finished.
2025-05-01 10:42:12,277 - INFO - root - <module> - Application starting up.
2025-05-01 10:42:12,278 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:42:12,281 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:42:12,282 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:42:12,282 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:42:12,282 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:42:12,283 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:42:12,283 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:42:12,283 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:42:12,284 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:42:12,391 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:42:12,420 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:42:12,421 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:42:12,422 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:42:12,432 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:42:17,102 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:42:17,103 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:42:17,108 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:42:17,109 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:42:17,109 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:42:17,321 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:42:17,321 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:42:17,322 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:42:17,331 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:42:17,331 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:42:17,332 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:42:17,335 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:42:17,335 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:42:17,336 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:42:17,336 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:42:17,340 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:42:17,341 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:42:17,341 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:42:17,344 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:42:17,344 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:42:17,344 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:42:17,344 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:42:17,344 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:43:24,005 - INFO - root - on_closing - Application window closing.
2025-05-01 10:43:26,302 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:43:26,350 - INFO - root - <module> - Application has finished.
2025-05-01 10:45:38,277 - INFO - root - <module> - Application starting up.
2025-05-01 10:45:38,278 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:45:38,287 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:45:38,288 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:45:38,288 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:45:38,289 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:45:38,289 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:45:38,289 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:45:38,290 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:45:38,290 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:45:38,425 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:45:38,463 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:45:38,464 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:45:38,468 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:45:38,483 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:45:45,520 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:45:45,521 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:45:45,524 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:45:45,525 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:45:45,525 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:45:45,739 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:45:45,740 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:45:45,740 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:45:45,751 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:45:45,752 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:45:45,752 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:45:45,759 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:45:45,760 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:45:45,760 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:45:45,761 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:45:45,766 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:45:45,767 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:45:45,768 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:45:45,774 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:45:45,774 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:45:45,774 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:45:45,774 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:45:45,775 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:45:47,712 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:45:47,712 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:45:47,720 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:45:47,720 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:45:47,737 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:45:47,738 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:45:47,745 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:45:47,745 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:45:47,745 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:45:47,748 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:45:47,748 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:45:47,749 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:45:47,749 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:45:50,360 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:45:50,360 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:45:50,367 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:45:50,367 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:45:50,387 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:45:50,388 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:45:50,397 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:45:50,397 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:45:50,397 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:45:50,400 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:45:50,400 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:45:50,400 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:45:50,400 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:45:52,575 - INFO - root - on_closing - Application window closing.
2025-05-01 10:45:54,642 - DEBUG - root - on_closing - Quit cancelled by user.
2025-05-01 10:49:59,001 - INFO - root - <module> - Application has finished.
2025-05-01 10:50:01,284 - INFO - root - <module> - Application starting up.
2025-05-01 10:50:01,289 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:50:01,308 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:50:01,317 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:50:01,319 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:50:01,320 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:50:01,321 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:50:01,322 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:50:01,323 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:50:01,324 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:50:02,459 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:50:02,519 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:50:02,520 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:50:02,521 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:50:02,548 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:50:12,050 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:50:12,050 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:50:12,053 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:50:12,053 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:50:12,054 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:50:12,269 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:50:12,269 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:50:12,270 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:50:12,279 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:50:12,279 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:50:12,280 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:50:12,283 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:50:12,284 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:50:12,285 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:50:12,285 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:50:12,290 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:50:12,290 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:50:12,291 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:50:12,296 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:50:12,297 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:50:12,297 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:50:12,297 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:50:12,297 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:50:14,561 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:50:14,562 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:50:14,569 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:50:14,569 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:50:14,585 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:50:14,585 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:50:14,591 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:50:14,592 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:50:14,592 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:50:14,594 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:50:14,595 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:50:14,595 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:50:14,595 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:50:19,669 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:50:19,670 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:50:19,674 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:50:19,674 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:50:19,719 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:50:19,720 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:50:19,731 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:50:19,731 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:50:19,732 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:50:19,835 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:50:19,836 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:50:19,836 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:50:19,836 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:50:21,337 - INFO - root - on_closing - Application window closing.
2025-05-01 10:50:22,737 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:50:22,761 - INFO - root - <module> - Application has finished.
2025-05-01 10:56:52,678 - INFO - root - <module> - Application starting up.
2025-05-01 10:56:52,680 - INFO - root - initialize_database - Initializing database...
2025-05-01 10:56:52,690 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 10:56:52,690 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 10:56:52,690 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 10:56:52,691 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 10:56:52,691 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 10:56:52,691 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 10:56:52,691 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 10:56:52,691 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 10:56:52,829 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 10:56:52,863 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 10:56:52,863 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 10:56:52,865 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 10:56:52,880 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 10:56:58,412 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 10:56:58,412 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 10:56:58,416 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 10:56:58,416 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:56:58,416 - DEBUG - root - check_password - Checking password hash.
2025-05-01 10:56:58,629 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 10:56:58,629 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 10:56:58,629 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 10:56:58,638 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 10:56:58,639 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 10:56:58,639 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 10:56:58,644 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 10:56:58,644 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:56:58,644 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 10:56:58,644 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 10:56:58,649 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 10:56:58,649 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 10:56:58,649 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 10:56:58,653 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 10:56:58,653 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:56:58,654 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 10:56:58,654 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 10:56:58,654 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 10:56:59,980 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:56:59,980 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:56:59,987 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:56:59,987 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:57:00,002 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:57:00,003 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:57:00,007 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:57:00,007 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:57:00,007 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:57:00,011 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:57:00,011 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:57:00,011 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:57:00,012 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:57:08,100 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:57:08,100 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:57:08,114 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:57:08,114 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:57:08,133 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:57:08,134 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:57:08,141 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:57:08,141 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:57:08,142 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:57:08,144 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:57:08,145 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:57:08,145 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:57:08,145 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:57:10,252 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:57:10,269 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,351 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,355 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,362 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,368 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,376 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,383 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,392 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,399 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,406 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,413 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,419 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,427 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,436 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,443 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,451 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,460 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,903 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,917 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,922 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:10,928 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:12,259 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:57:12,260 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:57:12,287 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:57:12,288 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:57:12,299 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:57:12,299 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:57:12,304 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:57:12,304 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:57:12,304 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:57:12,307 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:57:12,307 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:57:12,307 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:57:12,307 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:57:15,428 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:57:15,428 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:57:15,445 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:57:15,445 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:57:15,463 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:57:15,464 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:57:15,472 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:57:15,472 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:57:15,473 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:57:15,475 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:57:15,476 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:57:15,476 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:57:15,476 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:57:16,975 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:57:16,993 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,036 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,060 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,082 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,086 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,093 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,100 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,110 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,119 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,127 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,140 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,148 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,781 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,789 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,796 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,805 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,811 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,820 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,828 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,837 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,843 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,852 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,861 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,876 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,884 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,900 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,932 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,947 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,964 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,980 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,988 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:17,995 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,029 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,037 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,053 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,069 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,078 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:18,124 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,001 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,030 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,061 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,068 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,077 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,083 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,091 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,101 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,109 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,117 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,124 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,132 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,140 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,157 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,164 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,172 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,188 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,197 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,204 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,212 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,221 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:30,233 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,784 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,796 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,800 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,809 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,814 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,820 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,827 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,838 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:33,847 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,377 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,399 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,415 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,422 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,429 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:37,432 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:50,263 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 10:57:50,286 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,316 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,337 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,362 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,371 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,379 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,389 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,397 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,406 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,414 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,424 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,432 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,439 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:50,447 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:51,993 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,008 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,021 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,032 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,040 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,049 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,056 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,063 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,070 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,078 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,085 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,093 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,102 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,109 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,117 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,133 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,140 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,636 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,646 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,654 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,663 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,669 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,677 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,684 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,694 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,703 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,713 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,723 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,731 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,739 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,746 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,752 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,760 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,767 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:52,773 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,364 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,372 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,382 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,390 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,398 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,406 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,415 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,423 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,432 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,439 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,446 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,453 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,460 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,468 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,476 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:57:53,484 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,331 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,351 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,360 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,368 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,376 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,383 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,391 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,399 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,408 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,414 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,421 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,428 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,436 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,446 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,453 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,462 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,469 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,479 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,485 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,493 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,501 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,509 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,517 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:00,528 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:01,940 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:58:01,941 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:58:01,971 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:58:01,971 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:58:01,982 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:58:01,983 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:58:02,000 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:58:02,000 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:58:02,000 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:58:02,003 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:58:02,003 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:58:02,003 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:58:02,003 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:58:02,724 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:58:02,725 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:58:02,737 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:58:02,737 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:58:02,755 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:58:02,755 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:58:02,765 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:58:02,765 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:58:02,765 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:58:02,768 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:58:02,768 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:58:02,768 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:58:02,768 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:58:06,233 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:58:06,263 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,314 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,335 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,343 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,351 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,913 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,925 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,941 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,949 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:06,957 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,323 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,342 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,352 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,360 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,368 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,376 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,384 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,392 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,399 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,407 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,415 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,424 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,431 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,439 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,450 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,465 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,478 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,490 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,501 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,512 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,519 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,527 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:07,539 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:32,789 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 10:58:32,789 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:58:32,816 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 10:58:32,817 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 10:58:32,829 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 10:58:32,829 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 10:58:32,834 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 10:58:32,834 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 10:58:32,834 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 10:58:32,837 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:58:32,837 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:58:32,837 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 10:58:32,837 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 10:58:33,925 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 10:58:33,925 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 10:58:33,941 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 10:58:33,942 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 10:58:33,960 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 10:58:33,961 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:58:33,968 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 10:58:33,968 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 10:58:33,968 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 10:58:33,971 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 10:58:33,971 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 10:58:33,971 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 10:58:33,971 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 10:58:43,612 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 10:58:43,617 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,667 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,681 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,690 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,698 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,710 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,720 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,731 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,742 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,753 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,767 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,785 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:43,804 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,627 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,644 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,650 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,659 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,666 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,674 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,685 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,692 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,701 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,708 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,717 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,724 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,733 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,740 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,747 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:44,754 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,675 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,706 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,711 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,718 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,725 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,734 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,741 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,752 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,760 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,768 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,776 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,784 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,793 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,801 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,810 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:45,817 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,639 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,646 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,656 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,661 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,672 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,681 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,689 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,698 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:58:47,705 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,732 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,753 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,764 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,772 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,783 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,792 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,799 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,806 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,817 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,825 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,835 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,848 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,857 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,867 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:33,880 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 10:59:35,054 - INFO - root - on_closing - Application window closing.
2025-05-01 10:59:36,448 - INFO - root - on_closing - Application shutting down.
2025-05-01 10:59:36,487 - INFO - root - <module> - Application has finished.
2025-05-01 11:05:12,267 - INFO - root - <module> - Application starting up.
2025-05-01 11:05:12,268 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:05:12,276 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:05:12,276 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:05:12,276 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:05:12,277 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:05:12,277 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:05:12,277 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:05:12,278 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:05:12,278 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:05:12,406 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:05:12,437 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:05:12,438 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:05:12,442 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:05:12,454 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:05:20,079 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 11:05:20,079 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 11:05:20,085 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:05:20,085 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:05:20,085 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:05:20,298 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 11:05:20,298 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 11:05:20,298 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 11:05:20,309 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:05:20,310 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 11:05:20,310 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 11:05:20,314 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 11:05:20,314 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:05:20,314 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 11:05:20,315 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 11:05:20,320 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 11:05:20,322 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 11:05:20,322 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 11:05:20,327 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:05:20,328 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:05:20,328 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 11:05:20,328 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 11:05:20,329 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 11:05:22,291 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:05:22,291 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:05:22,299 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:05:22,299 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:05:22,317 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:05:22,318 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:05:22,323 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:05:22,323 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:05:22,324 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:05:22,327 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:05:22,327 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:05:22,327 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:05:22,327 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:05:34,522 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:05:34,523 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:05:34,539 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:05:34,539 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:05:34,559 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:05:34,560 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:05:34,579 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:05:34,581 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:05:34,581 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:05:34,583 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:05:34,583 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:05:34,583 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 11:05:34,585 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:05:38,349 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:05:38,357 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:38,413 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:38,429 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:38,434 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,109 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,119 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,126 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,133 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,142 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,146 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,155 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:05:39,163 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:06:30,625 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:06:39,282 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:06:39,319 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,347 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,368 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,393 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,402 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,412 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,892 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,901 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,908 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,918 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,930 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,936 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,944 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:39,951 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:06:44,330 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-05-01 11:06:44,330 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-05-01 11:06:44,331 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-05-01 11:06:44,333 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:06:44,333 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:44,345 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-05-01 11:06:44,345 - DEBUG - root - hash_password - Hashing password.
2025-05-01 11:06:44,552 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-05-01 11:06:44,552 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$GbuYWngEXHXDL/RB86giCuRrGGos4SHDzlcYngcjyXmyR7iOdDtu6', 'Patient')
2025-05-01 11:06:44,575 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-05-01 11:06:44,577 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:44,577 - INFO - root - add_patient - User login created for 'jd'. User ID: 2
2025-05-01 11:06:44,577 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (2, 'John Doe', '2000-10-31', 'M', '123124314', 'asfvonavfsajvna\tsaov', 'asfbasfbafdsb', 'fafbabfabdf')
2025-05-01 11:06:44,590 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:06:44,592 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:44,593 - INFO - root - add_patient - Patient record created for 'John Doe'. Patient ID: 1, Linked to User ID: 2
2025-05-01 11:06:44,593 - DEBUG - root - add_patient - Adding insurance details for new patient ID: 1
2025-05-01 11:06:44,593 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (1, 'Cap', '123', '2029-10-31', 'affvasvfs')
2025-05-01 11:06:44,604 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:06:44,604 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:44,604 - DEBUG - root - add_patient - Insurance details added for patient ID: 1
2025-05-01 11:06:46,920 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:06:46,920 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:06:46,920 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:06:46,922 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:06:46,922 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:46,922 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:06:46,923 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:06:49,723 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:06:49,724 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:06:49,750 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:06:49,750 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:06:49,763 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:06:49,763 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:06:49,768 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:06:49,768 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:06:49,768 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:06:49,770 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:06:49,771 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:49,771 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:06:49,771 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:06:56,618 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:06:56,619 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:06:56,635 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:06:56,635 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:06:56,654 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:06:56,655 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:06:56,663 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:06:56,663 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:06:56,663 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:06:56,667 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:06:56,667 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:06:56,667 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:06:56,667 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:07:00,732 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:07:00,743 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,792 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,815 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,829 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,841 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,851 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,861 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,870 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:00,916 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,766 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,780 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,793 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,801 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,809 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,818 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:07:08,823 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:21,460 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:08:21,460 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:08:21,490 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:08:21,490 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:08:21,501 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:08:21,502 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:08:21,507 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:08:21,507 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:08:21,507 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:08:21,511 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:08:21,511 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:21,512 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:08:21,512 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:08:26,059 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:08:26,059 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:08:26,077 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:08:26,077 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:08:26,096 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:08:26,098 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:08:26,106 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:08:26,106 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:08:26,106 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:08:26,108 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:08:26,109 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:26,109 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:08:26,109 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:08:28,653 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:08:28,662 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,732 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,765 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,779 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,801 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,813 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,852 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,913 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:28,973 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:34,250 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:08:34,251 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:08:34,284 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:08:34,284 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:08:34,318 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:08:34,320 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:08:34,340 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:08:34,341 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:08:34,341 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:08:34,345 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:08:34,345 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:34,345 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:08:34,346 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:08:41,330 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:08:41,444 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,528 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,540 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,564 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,575 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,587 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,593 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,600 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,606 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,619 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,628 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,652 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:41,692 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:50,441 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:08:52,731 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:08:52,732 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:08:52,762 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:08:52,763 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:08:52,784 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:08:52,785 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:08:52,794 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:08:52,794 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:08:52,794 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:08:52,797 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:08:52,797 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:52,798 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:08:52,798 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:08:56,909 - INFO - root - on_patient_select - Patient selected: ID 1 (Admin)
2025-05-01 11:08:56,910 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE patient_id = ? with params: (1,)
2025-05-01 11:08:56,917 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:08:56,918 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:56,919 - DEBUG - root - execute_query - Executing query: SELECT * FROM Insurance WHERE patient_id = ? with params: (1,)
2025-05-01 11:08:56,926 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:08:56,927 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:08:56,927 - DEBUG - root - on_patient_select - Loading details for patient ID: 1
2025-05-01 11:08:56,935 - DEBUG - root - on_patient_select - Loading insurance details for patient ID: 1
2025-05-01 11:09:05,377 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:09:05,397 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,413 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,431 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,453 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,471 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,481 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,496 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,506 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,518 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,530 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,542 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,554 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,569 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,582 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,593 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,607 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,624 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,639 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,649 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,657 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,664 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:05,694 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,290 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,297 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,308 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,316 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,324 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,333 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,340 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,349 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,357 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,365 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,373 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,384 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,391 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,400 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,407 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,416 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,423 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,430 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,445 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,454 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,460 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,469 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,476 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,490 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,497 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,508 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,520 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,534 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,600 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,608 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,619 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,629 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,640 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,648 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,776 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,788 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,796 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,929 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,965 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,972 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,981 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:26,989 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,004 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,017 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,027 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,038 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,047 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,056 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,212 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,221 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,231 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,240 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,250 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,293 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,305 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,318 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,324 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,876 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,884 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,894 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,902 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,910 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,918 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,926 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,933 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,942 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,950 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,958 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,965 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,972 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:27,986 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:28,002 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:28,016 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:28,068 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:28,085 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:28,101 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:34,820 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:09:34,820 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:09:34,851 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:09:34,851 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:09:34,869 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:09:34,870 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:09:34,878 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:09:34,878 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:09:34,878 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:09:34,891 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:09:34,892 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:09:34,892 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:09:34,892 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:09:58,389 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:09:58,399 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,474 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,502 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,516 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,532 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,547 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,555 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,575 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,588 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,594 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,614 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,634 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,649 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,664 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:58,676 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,021 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,032 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,045 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,058 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,076 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,090 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,109 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,124 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,141 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,156 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,172 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,188 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,201 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,598 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,613 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,628 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,638 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,652 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,663 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,681 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,701 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,717 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,733 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,750 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,753 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,778 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,790 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,805 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,820 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:09:59,839 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,101 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,113 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,125 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,135 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,151 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,162 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,173 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,183 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,195 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,203 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,500 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,514 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,524 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,535 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,550 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,568 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,579 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,594 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,628 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,648 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,663 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,677 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,692 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,700 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,712 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,726 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,739 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,750 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,765 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,779 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,788 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:00,804 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,425 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,444 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,449 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,456 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,465 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,473 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,482 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,490 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,498 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,507 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,515 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,524 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,530 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,539 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,544 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,552 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,558 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,565 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,571 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,581 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,588 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,599 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:09,605 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,300 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,306 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,315 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,326 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,333 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,342 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,351 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,358 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,367 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,375 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,385 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,401 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,410 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,420 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,428 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,440 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,462 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,470 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,478 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,487 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,495 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,504 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,513 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,524 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,535 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,556 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,582 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,604 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,629 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,645 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,652 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,725 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,829 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,920 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:39,966 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:40,078 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:41,907 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:10:41,938 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:11:05,263 - INFO - root - <module> - Application has finished.
2025-05-01 11:39:48,716 - INFO - root - <module> - Application starting up.
2025-05-01 11:39:48,718 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:39:48,728 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:39:48,728 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:39:48,729 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:39:48,729 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:39:48,729 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:39:48,729 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:39:48,730 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:39:48,730 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:39:48,861 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:39:48,889 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:39:48,890 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:39:48,891 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:39:48,904 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:39:54,529 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 11:39:54,530 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 11:39:54,534 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:39:54,534 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:39:54,534 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:39:54,768 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 11:39:54,769 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 11:39:54,770 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 11:39:54,781 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:39:54,783 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 11:39:54,784 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 11:39:54,789 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 11:39:54,790 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:39:54,790 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 11:39:54,791 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 11:39:54,799 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 11:39:54,800 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 11:39:54,800 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 11:39:54,822 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-05-01 11:39:54,823 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:39:54,823 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-05-01 11:39:54,823 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 11:39:54,823 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 11:39:59,600 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:39:59,600 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:39:59,608 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:39:59,608 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:39:59,640 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:39:59,641 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:39:59,649 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:39:59,649 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:39:59,649 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:39:59,652 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:39:59,652 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:39:59,652 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:39:59,652 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:40:02,354 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:40:02,360 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:02,373 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:02,390 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:02,411 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:02,426 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:02,431 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,013 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,025 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,029 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,034 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,041 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,047 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,058 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,063 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:03,072 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:05,072 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:40:05,072 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:40:05,101 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:40:05,101 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:40:05,115 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:40:05,116 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:40:05,122 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:40:05,122 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:40:05,122 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:40:05,125 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:40:05,125 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:40:05,125 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:40:05,126 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:40:05,873 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:40:05,873 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:40:05,885 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:40:05,885 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:40:05,943 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:40:05,946 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:40:05,967 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:40:05,968 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:40:05,968 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:40:06,048 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:40:06,048 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:40:06,048 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:40:06,049 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:40:06,601 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:40:07,325 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:07,772 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,122 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,177 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,202 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,249 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,772 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,842 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:40:08,905 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:41:09,436 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 471, 870)
2025-05-01 11:41:09,448 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,467 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,489 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,503 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,509 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,519 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,528 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,537 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,545 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,553 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,562 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,571 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,582 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,593 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,610 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,619 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,629 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,654 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,666 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,680 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:09,688 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:41:22,961 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:41:22,961 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:41:22,992 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:41:22,992 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:41:23,003 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:41:23,004 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:41:23,008 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:41:23,009 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:41:23,009 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:41:23,011 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:41:23,011 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:41:23,012 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:41:23,012 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:41:26,105 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:41:26,110 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:26,144 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:26,242 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:26,793 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:26,825 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:27,351 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:27,454 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:27,482 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:27,877 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:28,426 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:28,618 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:28,657 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:28,689 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:28,729 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:29,165 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:29,718 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:29,739 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,021 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,050 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,074 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,147 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,220 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,794 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:30,884 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:31,474 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:41:57,857 - INFO - root - add_staff - Attempting to add new staff record and create login (Admin).
2025-05-01 11:41:57,858 - DEBUG - root - check_username_exists - Checking if username exists: az
2025-05-01 11:41:57,858 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('az',)
2025-05-01 11:41:57,861 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:41:57,862 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:41:57,875 - DEBUG - root - check_username_exists - Username 'az' exists: False
2025-05-01 11:41:57,875 - DEBUG - root - hash_password - Hashing password.
2025-05-01 11:41:58,082 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('az', b'$2b$12$ftnY2WvhD4JHMyWbxbf2YuPcLGCPBzBpilfRUcyQ5DSUBRBH3ECvW', 'Staff')
2025-05-01 11:41:58,092 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 3
2025-05-01 11:41:58,093 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:41:58,093 - INFO - root - add_staff - User login created for 'az'. User ID: 3
2025-05-01 11:41:58,093 - DEBUG - root - execute_query - Executing query: INSERT INTO Staff (user_id, name, speciality, contact_info) VALUES (?, ?, ?, ?) with params: (3, 'AZ', 'doctor', 'fas dfvasdvsadvsd')
2025-05-01 11:41:58,104 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:41:58,105 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:41:58,105 - INFO - root - add_staff - Staff record created for 'AZ'. Staff ID: 1, Linked to User ID: 3
2025-05-01 11:42:00,354 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:42:00,354 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:42:00,355 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:42:00,356 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:00,356 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:00,356 - DEBUG - root - load_staff_list - Populating staff list with 1 records.
2025-05-01 11:42:00,356 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:42:02,705 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:42:02,706 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:42:02,728 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:42:02,728 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:42:02,747 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:42:02,748 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:42:02,755 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:42:02,755 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:42:02,756 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:42:02,758 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:02,759 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:02,759 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:42:02,759 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:42:04,019 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:42:04,052 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:42:04,611 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:42:04,635 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:42:06,228 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 11:42:06,229 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:42:06,247 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 11:42:06,248 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 11:42:06,252 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 11:42:06,253 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 11:42:06,253 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 11:42:06,320 - DEBUG - root - execute_query - Query fetched 3 rows.
2025-05-01 11:42:06,320 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:06,320 - DEBUG - root - load_user_list - Populating user list with 3 records.
2025-05-01 11:42:06,321 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 11:42:12,292 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-05-01 11:42:12,292 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:42:12,293 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:42:12,305 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:42:12,305 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:42:12,309 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:42:17,681 - INFO - root - verify_login - Attempting login for user: az
2025-05-01 11:42:17,681 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-05-01 11:42:17,685 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:42:17,685 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:17,685 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:42:17,900 - INFO - root - verify_login - Login successful for user: az, Role: Staff
2025-05-01 11:42:17,900 - INFO - root - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-05-01 11:42:17,900 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 3
2025-05-01 11:42:17,900 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (3,)
2025-05-01 11:42:17,905 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:42:17,905 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:17,905 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-05-01 11:42:17,910 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:42:17,911 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 1
2025-05-01 11:42:17,911 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 1)
2025-05-01 11:42:17,917 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-05-01 11:42:17,917 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:42:17,918 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-05-01 11:42:17,918 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-05-01 11:42:17,940 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:42:17,940 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:42:17,949 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-05-01 11:42:17,949 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:42:17,949 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:42:17,953 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:17,953 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:17,953 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:42:17,953 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-05-01 11:42:17,954 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-05-01 11:42:19,355 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:42:19,474 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:42:21,969 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-05-01 11:42:21,969 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:42:22,001 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-05-01 11:42:22,001 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-05-01 11:42:22,133 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-05-01 11:42:22,133 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-05-01 11:42:22,139 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:22,140 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:22,140 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-05-01 11:42:22,140 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-05-01 11:42:22,140 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-05-01 11:42:22,143 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:42:22,144 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:22,144 - INFO - root - load_appointment_list - No appointments found for display (Staff 1).
2025-05-01 11:42:22,144 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-05-01 11:42:28,603 - DEBUG - root - logout - Logout cancelled by user.
2025-05-01 11:42:42,281 - INFO - root - schedule_appointment - Attempting to schedule new appointment (Staff 1)
2025-05-01 11:42:42,296 - DEBUG - root - execute_query - Executing query: 
            INSERT INTO Appointments (patient_id, staff_id, appointment_datetime, reason, status, details)
            VALUES (?, ?, ?, ?, ?, ?)
         with params: (1, 1, '2025-05-02 12:00:00', 'asvdvasdvsd', 'Scheduled', 'asdvdsavsda')
2025-05-01 11:42:42,314 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:42:42,315 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:42,315 - INFO - root - schedule_appointment - Appointment scheduled successfully. ID: 1
2025-05-01 11:42:43,872 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-05-01 11:42:43,872 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-05-01 11:42:43,872 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-05-01 11:42:43,874 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:43,874 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:43,874 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-05-01 11:42:43,874 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-05-01 11:42:48,973 - INFO - root - logout - User logged out: User ID 3, Role Staff
2025-05-01 11:42:48,973 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:42:48,974 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:42:49,008 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:42:49,009 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:42:49,012 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:42:55,105 - INFO - root - verify_login - Attempting login for user: jd
2025-05-01 11:42:55,105 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-05-01 11:42:55,108 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:42:55,108 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:55,108 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:42:55,321 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-05-01 11:42:55,321 - INFO - root - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-05-01 11:42:55,321 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 2
2025-05-01 11:42:55,322 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (2,)
2025-05-01 11:42:55,325 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:42:55,325 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:55,325 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-05-01 11:42:55,334 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:42:55,334 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-05-01 11:42:55,334 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-05-01 11:42:55,346 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-05-01 11:42:55,349 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-05-01 11:42:55,349 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-05-01 11:42:55,352 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:42:55,353 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:55,353 - INFO - root - load_appointments - Found 1 appointments for patient_id: 1
2025-05-01 11:42:55,353 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-05-01 11:42:55,353 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-05-01 11:42:55,355 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:42:55,355 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:42:55,355 - INFO - root - load_treatments - No treatments found for patient_id: 1
2025-05-01 11:42:55,355 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-05-01 11:43:09,368 - INFO - root - logout - User logged out: User ID 2, Role Patient
2025-05-01 11:43:09,368 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:43:09,369 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:43:09,385 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:43:09,386 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:43:09,389 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:43:14,073 - INFO - root - verify_login - Attempting login for user: az
2025-05-01 11:43:14,074 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-05-01 11:43:14,078 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:14,079 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:14,079 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:43:14,292 - INFO - root - verify_login - Login successful for user: az, Role: Staff
2025-05-01 11:43:14,292 - INFO - root - login_successful - Login successful. User ID: 3, Role: Staff. Navigating to role frame.
2025-05-01 11:43:14,293 - DEBUG - root - get_staff_details_by_user_id - Fetching staff details for user_id: 3
2025-05-01 11:43:14,293 - DEBUG - root - execute_query - Executing query: SELECT * FROM Staff WHERE user_id = ? with params: (3,)
2025-05-01 11:43:14,296 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:14,296 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:14,297 - INFO - root - switch_frame - Switching frame to: StaffFrame
2025-05-01 11:43:14,304 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:43:14,305 - INFO - root - __init__ - Initializing StaffFrame for staff_id: 1
2025-05-01 11:43:14,305 - DEBUG - root - create_widgets - Creating widgets for StaffFrame (staff_id: 1)
2025-05-01 11:43:14,310 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-05-01 11:43:14,311 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:14,311 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-05-01 11:43:14,311 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-05-01 11:43:14,332 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:43:14,332 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:43:14,341 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-05-01 11:43:14,342 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:43:14,342 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:14,345 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:14,346 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:14,346 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:43:14,346 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-05-01 11:43:14,346 - DEBUG - root - switch_frame - Packed new frame: StaffFrame
2025-05-01 11:43:15,827 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:43:15,851 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:15,906 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:15,943 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:16,386 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:16,396 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:18,009 - INFO - root - on_patient_select - Patient selected: ID 1 (Staff 1)
2025-05-01 11:43:18,009 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE patient_id = ? with params: (1,)
2025-05-01 11:43:18,012 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:18,012 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:18,012 - DEBUG - root - execute_query - Executing query: SELECT * FROM Insurance WHERE patient_id = ? with params: (1,)
2025-05-01 11:43:18,016 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:18,016 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:18,016 - DEBUG - root - on_patient_select - Loading details for patient ID: 1
2025-05-01 11:43:18,017 - DEBUG - root - on_patient_select - Loading insurance details for patient ID: 1
2025-05-01 11:43:19,338 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:19,443 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:22,252 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:22,298 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:22,805 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:22,877 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:23,883 - INFO - root - show_treatment_management_view - Staff 1 switching to Treatment Management view.
2025-05-01 11:43:23,883 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:23,945 - DEBUG - root - __init__ - Initializing TreatmentManagementView (Staff 1)
2025-05-01 11:43:23,946 - DEBUG - root - create_widgets - Creating widgets for TreatmentManagementView (Staff 1)
2025-05-01 11:43:24,065 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-05-01 11:43:24,066 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:24,072 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:24,073 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:24,073 - INFO - root - load_treatment_list - Loading treatment list (Staff 1)
2025-05-01 11:43:24,073 - DEBUG - root - get_treatments_for_view - Fetching treatments for view (staff_id=1, patient_id=None)
2025-05-01 11:43:24,073 - DEBUG - root - execute_query - Executing query: 
        SELECT t.treatment_id, p.name AS patient_name, t.treatment_date,
               t.medications, t.details, t.patient_id, t.recommending_staff_id
        FROM Treatments t
        JOIN Patients p ON t.patient_id = p.patient_id
        LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Allow for NULL staff
     WHERE t.recommending_staff_id = ? ORDER BY t.treatment_date DESC, t.treatment_id DESC with params: (1,)
2025-05-01 11:43:24,077 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:43:24,077 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:24,077 - INFO - root - load_treatment_list - No treatments found for display (Staff 1).
2025-05-01 11:43:24,077 - DEBUG - root - clear_form - Clearing treatment form (Staff 1)
2025-05-01 11:43:30,121 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-05-01 11:43:30,121 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:30,146 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-05-01 11:43:30,147 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-05-01 11:43:30,221 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-05-01 11:43:30,222 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:30,224 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:30,225 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:30,225 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-05-01 11:43:30,225 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-05-01 11:43:30,225 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-05-01 11:43:30,227 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:30,228 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:30,228 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-05-01 11:43:30,228 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-05-01 11:43:32,322 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-05-01 11:43:32,322 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-05-01 11:43:32,322 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-05-01 11:43:32,325 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:32,325 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:32,327 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Scheduled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=True
2025-05-01 11:43:32,327 - DEBUG - root - on_appointment_select - Enable Cancel: True, Enable Remove: False
2025-05-01 11:43:34,506 - INFO - root - show_treatment_management_view - Staff 1 switching to Treatment Management view.
2025-05-01 11:43:34,507 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:34,541 - DEBUG - root - __init__ - Initializing TreatmentManagementView (Staff 1)
2025-05-01 11:43:34,542 - DEBUG - root - create_widgets - Creating widgets for TreatmentManagementView (Staff 1)
2025-05-01 11:43:34,609 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-05-01 11:43:34,610 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:34,613 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:34,613 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:34,613 - INFO - root - load_treatment_list - Loading treatment list (Staff 1)
2025-05-01 11:43:34,613 - DEBUG - root - get_treatments_for_view - Fetching treatments for view (staff_id=1, patient_id=None)
2025-05-01 11:43:34,613 - DEBUG - root - execute_query - Executing query: 
        SELECT t.treatment_id, p.name AS patient_name, t.treatment_date,
               t.medications, t.details, t.patient_id, t.recommending_staff_id
        FROM Treatments t
        JOIN Patients p ON t.patient_id = p.patient_id
        LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Allow for NULL staff
     WHERE t.recommending_staff_id = ? ORDER BY t.treatment_date DESC, t.treatment_id DESC with params: (1,)
2025-05-01 11:43:34,615 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:43:34,615 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:34,615 - INFO - root - load_treatment_list - No treatments found for display (Staff 1).
2025-05-01 11:43:34,616 - DEBUG - root - clear_form - Clearing treatment form (Staff 1)
2025-05-01 11:43:42,882 - INFO - root - record_treatment - Attempting to record new treatment (Staff 1)
2025-05-01 11:43:42,882 - DEBUG - root - execute_query - Executing query: 
            INSERT INTO Treatments (patient_id, recommending_staff_id, treatment_date, medications, details)
            VALUES (?, ?, ?, ?, ?)
         with params: (1, 1, '2025-05-01', 'abfdabdfabfds', 'afsbfsabvsafbvsfvds')
2025-05-01 11:43:42,890 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:43:42,891 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:42,892 - INFO - root - record_treatment - Treatment recorded successfully. ID: 1 by Staff ID: 1
2025-05-01 11:43:44,779 - INFO - root - load_treatment_list - Loading treatment list (Staff 1)
2025-05-01 11:43:44,779 - DEBUG - root - get_treatments_for_view - Fetching treatments for view (staff_id=1, patient_id=None)
2025-05-01 11:43:44,780 - DEBUG - root - execute_query - Executing query: 
        SELECT t.treatment_id, p.name AS patient_name, t.treatment_date,
               t.medications, t.details, t.patient_id, t.recommending_staff_id
        FROM Treatments t
        JOIN Patients p ON t.patient_id = p.patient_id
        LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Allow for NULL staff
     WHERE t.recommending_staff_id = ? ORDER BY t.treatment_date DESC, t.treatment_id DESC with params: (1,)
2025-05-01 11:43:44,782 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:44,782 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:44,782 - DEBUG - root - load_treatment_list - Displaying 1 treatments.
2025-05-01 11:43:44,783 - DEBUG - root - clear_form - Clearing treatment form (Staff 1)
2025-05-01 11:43:47,553 - INFO - root - show_patient_management_view - Staff 1 switching to Patient Management view.
2025-05-01 11:43:47,553 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:47,580 - DEBUG - root - __init__ - Initializing PatientManagementView (Staff 1)
2025-05-01 11:43:47,580 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Staff 1)
2025-05-01 11:43:47,599 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:43:47,600 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:43:47,609 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Staff 1)
2025-05-01 11:43:47,609 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:43:47,609 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:47,612 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:47,612 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:47,612 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:43:47,613 - DEBUG - root - clear_form - Clearing patient details form (Staff 1).
2025-05-01 11:43:48,937 - INFO - root - on_patient_select - Patient selected: ID 1 (Staff 1)
2025-05-01 11:43:48,937 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE patient_id = ? with params: (1,)
2025-05-01 11:43:48,941 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:48,941 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:48,941 - DEBUG - root - execute_query - Executing query: SELECT * FROM Insurance WHERE patient_id = ? with params: (1,)
2025-05-01 11:43:48,942 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:48,943 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:48,943 - DEBUG - root - on_patient_select - Loading details for patient ID: 1
2025-05-01 11:43:48,945 - DEBUG - root - on_patient_select - Loading insurance details for patient ID: 1
2025-05-01 11:43:49,667 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:43:49,706 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:43:53,689 - INFO - root - show_appointment_management_view - Staff 1 switching to Appointment Management view.
2025-05-01 11:43:53,689 - DEBUG - root - clear_content_frame - Clearing content frame in StaffFrame.
2025-05-01 11:43:53,717 - DEBUG - root - __init__ - Initializing AppointmentManagementView (Staff 1)
2025-05-01 11:43:53,717 - DEBUG - root - create_widgets - Creating widgets for AppointmentManagementView (Staff 1)
2025-05-01 11:43:53,785 - DEBUG - root - get_all_patients_for_selection - Fetching all patients (ID, Name) for selection.
2025-05-01 11:43:53,785 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name FROM Patients ORDER BY name with params: ()
2025-05-01 11:43:53,788 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:53,788 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:53,788 - INFO - root - load_appointment_list - Loading appointment list (Staff 1)
2025-05-01 11:43:53,788 - DEBUG - root - get_appointments_for_view - Fetching appointments for view (staff_id=1, patient_id=None)
2025-05-01 11:43:53,789 - DEBUG - root - execute_query - Executing query: 
        SELECT a.appointment_id, p.name AS patient_name, s.name AS staff_name,
               a.appointment_datetime, a.reason, a.status, a.patient_id, a.staff_id
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
     WHERE a.staff_id = ? ORDER BY a.appointment_datetime DESC with params: (1,)
2025-05-01 11:43:53,792 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:43:53,794 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:53,794 - DEBUG - root - load_appointment_list - Displaying 1 appointments.
2025-05-01 11:43:53,794 - DEBUG - root - clear_form - Clearing appointment form (Staff 1)
2025-05-01 11:43:55,233 - INFO - root - on_appointment_select - Appointment selected: ID 1 (Staff 1)
2025-05-01 11:43:55,233 - DEBUG - root - get_appointment_details_by_id - Fetching full details for appointment_id: 1
2025-05-01 11:43:55,233 - DEBUG - root - execute_query - Executing query: 
        SELECT a.*, p.name AS patient_name, s.name AS staff_name
        FROM Appointments a
        JOIN Patients p ON a.patient_id = p.patient_id
        JOIN Staff s ON a.staff_id = s.staff_id
        WHERE a.appointment_id = ?
     with params: (1,)
2025-05-01 11:43:55,236 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:43:55,237 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:43:55,237 - DEBUG - root - on_appointment_select - Button State Check: Appt ID=1, Appt Status='Scheduled', Appt Staff ID=1 (Type: <class 'int'>), Logged-in Staff ID=1 (Type: <class 'int'>), Is Admin=False, PermissionToModify=True, IsScheduled=True
2025-05-01 11:43:55,237 - DEBUG - root - on_appointment_select - Enable Cancel: True, Enable Remove: False
2025-05-01 11:44:00,242 - INFO - root - logout - User logged out: User ID 3, Role Staff
2025-05-01 11:44:00,242 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:44:00,242 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:44:00,276 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:44:00,277 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:44:00,280 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:44:06,483 - INFO - root - verify_login - Attempting login for user: jd
2025-05-01 11:44:06,483 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-05-01 11:44:06,586 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:44:06,587 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:44:06,587 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:44:06,804 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-05-01 11:44:06,804 - INFO - root - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-05-01 11:44:06,817 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 2
2025-05-01 11:44:06,817 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (2,)
2025-05-01 11:44:06,841 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:44:06,843 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:44:06,844 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-05-01 11:44:06,844 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:44:06,844 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-05-01 11:44:06,844 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-05-01 11:44:06,871 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-05-01 11:44:06,875 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-05-01 11:44:06,875 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-05-01 11:44:06,902 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:44:06,903 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:44:06,903 - INFO - root - load_appointments - Found 1 appointments for patient_id: 1
2025-05-01 11:44:06,903 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-05-01 11:44:06,904 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-05-01 11:44:06,911 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:44:06,911 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:44:06,911 - INFO - root - load_treatments - Found 1 treatments for patient_id: 1
2025-05-01 11:44:06,911 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-05-01 11:44:28,395 - INFO - root - logout - User logged out: User ID 2, Role Patient
2025-05-01 11:44:28,395 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:44:28,396 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:44:28,414 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:44:28,415 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:44:28,419 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:44:30,898 - INFO - root - on_closing - Application window closing.
2025-05-01 11:44:32,485 - INFO - root - on_closing - Application shutting down.
2025-05-01 11:44:32,501 - INFO - root - <module> - Application has finished.
2025-05-01 11:46:40,719 - INFO - root - <module> - Application starting up.
2025-05-01 11:46:40,720 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:46:40,729 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:46:40,730 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:46:40,730 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:46:40,730 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:46:40,731 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:46:40,731 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:46:40,731 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:46:40,732 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:46:40,886 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:46:40,887 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad geometry specifier "-fullscreen"
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3921, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 488, in __init__
    self.geometry("-fullscreen") # Increased size further for better viewing
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2120, in wm_geometry
    return self.tk.call('wm', 'geometry', self._w, newGeometry)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad geometry specifier "-fullscreen"
2025-05-01 11:46:43,509 - INFO - root - <module> - Application has finished.
2025-05-01 11:48:28,650 - INFO - root - <module> - Application starting up.
2025-05-01 11:48:28,652 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:48:28,664 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:48:28,664 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:48:28,665 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:48:28,665 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:48:28,666 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:48:28,666 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:48:28,667 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:48:28,669 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:48:29,326 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:48:29,384 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:48:29,385 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:48:29,389 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:48:29,420 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:48:33,699 - INFO - root - on_closing - Application window closing.
2025-05-01 11:48:35,060 - INFO - root - on_closing - Application shutting down.
2025-05-01 11:48:35,075 - INFO - root - <module> - Application has finished.
2025-05-01 11:48:40,538 - INFO - root - <module> - Application starting up.
2025-05-01 11:48:40,539 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:48:40,544 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:48:40,544 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:48:40,545 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:48:40,545 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:48:40,545 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:48:40,546 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:48:40,546 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:48:40,547 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:48:41,180 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:48:41,240 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:48:41,240 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:48:41,240 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:48:41,240 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:48:47,355 - INFO - root - on_closing - Application window closing.
2025-05-01 11:48:48,868 - DEBUG - root - on_closing - Quit cancelled by user.
2025-05-01 11:48:51,051 - INFO - root - on_closing - Application window closing.
2025-05-01 11:48:52,373 - INFO - root - on_closing - Application shutting down.
2025-05-01 11:48:52,387 - INFO - root - <module> - Application has finished.
2025-05-01 11:51:27,592 - INFO - root - <module> - Application starting up.
2025-05-01 11:51:27,593 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:51:27,602 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:51:27,602 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:51:27,603 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:51:27,603 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:51:27,604 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:51:27,604 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:51:27,604 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:51:27,605 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:51:27,777 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:51:27,818 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:51:27,819 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:51:27,820 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:51:27,834 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:51:35,942 - INFO - root - verify_login - Attempting login for user: az
2025-05-01 11:51:35,942 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('az',)
2025-05-01 11:51:35,945 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:51:35,945 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:35,947 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:51:36,157 - WARNING - root - verify_login - Login failed for user: az - Incorrect password.
2025-05-01 11:51:47,439 - INFO - root - verify_login - Attempting login for user: AZ
2025-05-01 11:51:47,439 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('AZ',)
2025-05-01 11:51:47,444 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:51:47,444 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:47,444 - WARNING - root - verify_login - Login failed for user: AZ - User not found.
2025-05-01 11:51:56,111 - INFO - root - verify_login - Attempting login for user: jd
2025-05-01 11:51:56,112 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('jd',)
2025-05-01 11:51:56,115 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:51:56,116 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:56,117 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:51:56,331 - INFO - root - verify_login - Login successful for user: jd, Role: Patient
2025-05-01 11:51:56,332 - INFO - root - login_successful - Login successful. User ID: 2, Role: Patient. Navigating to role frame.
2025-05-01 11:51:56,332 - DEBUG - root - get_patient_details_by_user_id - Fetching patient details for user_id: 2
2025-05-01 11:51:56,333 - DEBUG - root - execute_query - Executing query: SELECT * FROM Patients WHERE user_id = ? with params: (2,)
2025-05-01 11:51:56,338 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:51:56,340 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:56,341 - INFO - root - switch_frame - Switching frame to: PatientFrame
2025-05-01 11:51:56,349 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:51:56,351 - INFO - root - __init__ - Initializing PatientFrame for patient_id: 1
2025-05-01 11:51:56,352 - DEBUG - root - create_widgets - Creating widgets for PatientFrame (patient_id: 1)
2025-05-01 11:51:56,369 - DEBUG - root - load_patient_info - Loading patient info for patient_id: 1
2025-05-01 11:51:56,373 - DEBUG - root - load_appointments - Loading appointments for patient_id: 1
2025-05-01 11:51:56,373 - DEBUG - root - execute_query - Executing query: 
            SELECT a.appointment_id, s.name AS specialist_name, a.appointment_datetime, a.reason, a.status
            FROM Appointments a
            JOIN Staff s ON a.staff_id = s.staff_id
            WHERE a.patient_id = ?
            ORDER BY a.appointment_datetime DESC
         with params: (1,)
2025-05-01 11:51:56,377 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:51:56,378 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:56,378 - INFO - root - load_appointments - Found 1 appointments for patient_id: 1
2025-05-01 11:51:56,379 - DEBUG - root - load_treatments - Loading treatments for patient_id: 1
2025-05-01 11:51:56,380 - DEBUG - root - execute_query - Executing query: 
            SELECT t.treatment_id, s.name AS staff_name, t.treatment_date, t.medications, t.details
            FROM Treatments t
            LEFT JOIN Staff s ON t.recommending_staff_id = s.staff_id -- Use LEFT JOIN to show treatment even if staff deleted
            WHERE t.patient_id = ?
            ORDER BY t.treatment_date DESC
         with params: (1,)
2025-05-01 11:51:56,383 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:51:56,385 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:51:56,385 - INFO - root - load_treatments - Found 1 treatments for patient_id: 1
2025-05-01 11:51:56,385 - DEBUG - root - switch_frame - Packed new frame: PatientFrame
2025-05-01 11:52:08,912 - INFO - root - logout - User logged out: User ID 2, Role Patient
2025-05-01 11:52:08,912 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:52:08,912 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:52:08,930 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:52:08,930 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:52:08,933 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:52:14,248 - INFO - root - verify_login - Attempting login for user: AZ
2025-05-01 11:52:14,248 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('AZ',)
2025-05-01 11:52:14,252 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:52:14,252 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:52:14,253 - WARNING - root - verify_login - Login failed for user: AZ - User not found.
2025-05-01 11:52:18,072 - INFO - root - verify_login - Attempting login for user: AZ
2025-05-01 11:52:18,072 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('AZ',)
2025-05-01 11:52:18,075 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:52:18,076 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:52:18,076 - WARNING - root - verify_login - Login failed for user: AZ - User not found.
2025-05-01 11:52:42,113 - INFO - root - verify_login - Attempting login for user: AZ
2025-05-01 11:52:42,113 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('AZ',)
2025-05-01 11:52:42,115 - ERROR - root - execute_query - Database Query Error: no such table: Users
Query: SELECT user_id, password, role FROM Users WHERE username = ?
Params: ('AZ',)
2025-05-01 11:52:42,116 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:52:42,116 - WARNING - root - verify_login - Login failed for user: AZ - User not found.
2025-05-01 11:52:55,544 - INFO - root - <module> - Application has finished.
2025-05-01 11:53:34,756 - INFO - root - <module> - Application starting up.
2025-05-01 11:53:34,756 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:53:34,765 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:53:34,771 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:53:34,776 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:53:34,781 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:53:34,787 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:53:34,795 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:53:34,796 - INFO - root - initialize_database - Default admin user not found. Creating...
2025-05-01 11:53:35,012 - INFO - root - initialize_database - Default admin user ('admin'/'admin123') created successfully.
2025-05-01 11:53:35,022 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:53:35,024 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:53:35,155 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:53:35,156 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: Wm.wm_geometry() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3922, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.geometry('-fullscreen', True)
TypeError: Wm.wm_geometry() takes from 1 to 2 positional arguments but 3 were given
2025-05-01 11:53:40,123 - INFO - root - <module> - Application has finished.
2025-05-01 11:53:45,566 - INFO - root - <module> - Application starting up.
2025-05-01 11:53:45,567 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:53:45,570 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:53:45,571 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:53:45,571 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:53:45,571 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:53:45,572 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:53:45,572 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:53:45,573 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:53:45,573 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:53:46,021 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:53:46,022 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad geometry specifier "-fullscreen"
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3922, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.geometry('-fullscreen')
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2120, in wm_geometry
    return self.tk.call('wm', 'geometry', self._w, newGeometry)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad geometry specifier "-fullscreen"
2025-05-01 11:53:49,040 - INFO - root - <module> - Application has finished.
2025-05-01 11:53:58,559 - INFO - root - <module> - Application starting up.
2025-05-01 11:53:58,560 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:53:58,565 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:53:58,565 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:53:58,566 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:53:58,566 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:53:58,566 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:53:58,567 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:53:58,567 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:53:58,567 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:53:58,674 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:53:58,701 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:53:58,703 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:53:58,706 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:53:58,713 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:55:19,774 - INFO - root - <module> - Application starting up.
2025-05-01 11:55:19,775 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:55:19,780 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:55:19,780 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:55:19,780 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:55:19,781 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:55:19,781 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:55:19,781 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:55:19,781 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:55:19,781 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:55:19,953 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:55:19,954 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: '_tkinter.tkapp' object has no attribute 'showFullScreen'
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3922, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.showFullScreen()
    ^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2433, in __getattr__
    return getattr(self.tk, attr)
           ^^^^^^^^^^^^^^^^^^^^^^
AttributeError: '_tkinter.tkapp' object has no attribute 'showFullScreen'
2025-05-01 11:55:22,978 - INFO - root - <module> - Application has finished.
2025-05-01 11:56:16,124 - INFO - root - <module> - Application starting up.
2025-05-01 11:56:16,125 - INFO - root - initialize_database - Initializing database...
2025-05-01 11:56:16,128 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 11:56:16,128 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 11:56:16,129 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 11:56:16,129 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 11:56:16,129 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 11:56:16,129 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 11:56:16,130 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 11:56:16,130 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 11:56:16,238 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 11:56:16,262 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:56:16,263 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:56:16,264 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:56:16,274 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:56:24,532 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 11:56:24,532 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 11:56:24,536 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 11:56:24,536 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:56:24,536 - DEBUG - root - check_password - Checking password hash.
2025-05-01 11:56:24,748 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 11:56:24,748 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 11:56:24,749 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 11:56:24,757 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:56:24,758 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 11:56:24,758 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 11:56:24,761 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 11:56:24,761 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:56:24,762 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 11:56:24,762 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 11:56:24,766 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 11:56:24,766 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 11:56:24,766 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 11:56:24,771 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:56:24,771 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:56:24,771 - DEBUG - root - load_user_list - Populating user list with 1 records.
2025-05-01 11:56:24,772 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 11:56:24,772 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 11:56:27,073 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:56:27,073 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:56:27,079 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:56:27,079 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:56:27,094 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:56:27,095 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:56:27,102 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:56:27,102 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:56:27,102 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:56:27,105 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:56:27,105 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:56:27,105 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:56:27,105 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:56:29,172 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:56:29,178 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:29,285 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:29,925 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:29,945 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:30,137 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:30,204 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:30,635 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:30,675 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,212 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,338 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,466 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,474 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,898 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,907 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,930 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:34,954 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:35,431 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:35,878 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:35,925 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:35,938 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:35,970 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:36,354 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:36,386 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:56:37,785 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 11:56:37,785 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:56:37,805 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 11:56:37,805 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 11:56:37,824 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 11:56:37,824 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:56:37,831 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:56:37,832 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:56:37,832 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:56:37,834 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:56:37,834 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:56:37,834 - INFO - root - load_patient_list - No patients found in database.
2025-05-01 11:56:37,834 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:56:38,298 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 11:56:38,843 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:56:38,875 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:56:39,315 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,267 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,291 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,304 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,321 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,330 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,341 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,348 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,357 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,371 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,378 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,386 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,394 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,403 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,411 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,419 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:35,426 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 951, 870)
2025-05-01 11:57:36,514 - INFO - root - add_patient - Attempting to add new patient and create login (Admin).
2025-05-01 11:57:36,514 - DEBUG - root - check_username_exists - Checking if username exists: jd
2025-05-01 11:57:36,514 - DEBUG - root - execute_query - Executing query: SELECT 1 FROM Users WHERE username = ? with params: ('jd',)
2025-05-01 11:57:36,517 - DEBUG - root - execute_query - Query fetched one row: No data
2025-05-01 11:57:36,518 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:36,518 - DEBUG - root - check_username_exists - Username 'jd' exists: False
2025-05-01 11:57:36,518 - DEBUG - root - hash_password - Hashing password.
2025-05-01 11:57:36,724 - DEBUG - root - add_patient - Password hashed for new user 'jd'.
2025-05-01 11:57:36,724 - DEBUG - root - execute_query - Executing query: INSERT INTO Users (username, password, role) VALUES (?, ?, ?) with params: ('jd', b'$2b$12$Ps7VrDcd18vv9IL8MV5KeuQsrgmk7CXqFAlZ4s6.0LxACuta5emUu', 'Patient')
2025-05-01 11:57:36,738 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 2
2025-05-01 11:57:36,739 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:36,739 - INFO - root - add_patient - User login created for 'jd'. User ID: 2
2025-05-01 11:57:36,739 - DEBUG - root - execute_query - Executing query: 
                INSERT INTO Patients (user_id, name, date_of_birth, gender, contact_number, address, medical_history, surgery_history)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
             with params: (2, 'John Doe', '2000-10-31', 'M', '3412341234', 'qwuibfg3q4iub vsakj', 'safvsavsa', 'sadvsavsadvds')
2025-05-01 11:57:36,754 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:57:36,755 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:36,756 - INFO - root - add_patient - Patient record created for 'John Doe'. Patient ID: 1, Linked to User ID: 2
2025-05-01 11:57:36,756 - DEBUG - root - add_patient - Adding insurance details for new patient ID: 1
2025-05-01 11:57:36,756 - DEBUG - root - execute_query - Executing query: 
                    INSERT INTO Insurance (patient_id, provider_name, policy_number, expiry_date, coverage_details)
                    VALUES (?, ?, ?, ?, ?)
                 with params: (1, 'davasvdsdav', '12341241', '2029-10-31', 'asvsafvsfadvdfs')
2025-05-01 11:57:36,768 - INFO - root - execute_query - INSERT query committed successfully. Last row ID: 1
2025-05-01 11:57:36,769 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:36,769 - DEBUG - root - add_patient - Insurance details added for patient ID: 1
2025-05-01 11:57:38,089 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 11:57:38,089 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 11:57:38,089 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 11:57:38,091 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 11:57:38,091 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:38,091 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 11:57:38,091 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 11:57:40,180 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 11:57:40,181 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 11:57:40,243 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 11:57:40,243 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 11:57:40,259 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 11:57:40,260 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:57:40,265 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 11:57:40,265 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 11:57:40,265 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 11:57:40,268 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 11:57:40,268 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 11:57:40,268 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 11:57:40,269 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 11:57:41,764 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 11:57:41,770 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:41,779 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:41,806 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:41,851 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,115 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,131 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,162 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,187 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,291 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,787 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,843 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:42,874 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:43,442 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:43,459 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:43,491 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:44,226 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:44,678 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:44,947 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:44,970 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:45,054 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:45,554 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:45,594 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:45,610 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:45,650 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,058 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,082 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,099 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,123 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,139 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,591 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,614 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,645 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:46,677 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 838, 413)
2025-05-01 11:57:54,012 - INFO - root - logout - User logged out: User ID 1, Role Admin
2025-05-01 11:57:54,012 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 11:57:54,012 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 11:57:54,033 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 11:57:54,033 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 11:57:54,037 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 11:57:57,286 - INFO - root - <module> - Application has finished.
2025-05-01 12:11:20,287 - INFO - root - <module> - Application starting up.
2025-05-01 12:11:20,293 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:11:20,315 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:11:20,316 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:11:20,317 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:11:20,318 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:11:20,319 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:11:20,332 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:11:20,333 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:11:20,335 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:11:20,878 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:11:20,934 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 12:11:20,934 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 12:11:20,935 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 12:11:20,954 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 12:11:30,635 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 12:11:30,636 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 12:11:30,639 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 12:11:30,639 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:11:30,639 - DEBUG - root - check_password - Checking password hash.
2025-05-01 12:11:30,853 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 12:11:30,853 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 12:11:30,853 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 12:11:30,865 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 12:11:30,865 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 12:11:30,865 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 12:11:30,869 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 12:11:30,869 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 12:11:30,870 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 12:11:30,870 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 12:11:30,874 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 12:11:30,874 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 12:11:30,874 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 12:11:30,879 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-05-01 12:11:30,880 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:11:30,880 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-05-01 12:11:30,880 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 12:11:30,880 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 12:11:36,242 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 12:11:36,242 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 12:11:36,249 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 12:11:36,249 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 12:11:36,275 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 12:11:36,279 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 12:11:36,292 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 12:11:36,292 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 12:11:36,292 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 12:11:36,295 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 12:11:36,295 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:11:36,295 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 12:11:36,295 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 12:11:38,093 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 12:11:38,100 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,149 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,167 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,172 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,175 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,180 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,188 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,192 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,198 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,203 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,210 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,217 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,225 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,234 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,242 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,251 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,258 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,266 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,274 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,282 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,290 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,298 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,308 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,323 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,331 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,342 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,371 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,411 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,443 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,451 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,459 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,475 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,483 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,490 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,498 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,506 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,516 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,525 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,535 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,544 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,550 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,558 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,567 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,580 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,585 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,596 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,601 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,608 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:38,614 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,796 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,809 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,817 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,826 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,831 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,837 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,844 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,851 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,858 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,865 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,875 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,883 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,891 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,899 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,906 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,914 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,925 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,930 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,939 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,952 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,957 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,963 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,970 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,979 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:39,986 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 12:11:42,099 - INFO - root - on_closing - Application window closing.
2025-05-01 12:11:43,908 - INFO - root - on_closing - Application shutting down.
2025-05-01 12:11:43,946 - INFO - root - <module> - Application has finished.
2025-05-01 12:12:35,925 - INFO - root - <module> - Application starting up.
2025-05-01 12:12:35,928 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:12:35,952 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:12:35,953 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:12:35,954 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:12:35,955 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:12:35,956 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:12:35,957 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:12:35,958 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:12:35,959 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:12:36,237 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:12:36,277 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 12:12:36,277 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 12:12:36,278 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 12:12:36,288 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 12:12:42,233 - INFO - root - <module> - Application has finished.
2025-05-01 12:12:55,646 - INFO - root - <module> - Application starting up.
2025-05-01 12:12:55,647 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:12:55,652 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:12:55,652 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:12:55,653 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:12:55,653 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:12:55,653 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:12:55,654 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:12:55,654 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:12:55,654 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:12:56,261 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:12:56,262 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: can't set fullscreen attribute for ".": override-redirect flag is set
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3922, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 490, in __init__
    self.attributes('-fullscreen', True)
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2052, in wm_attributes
    return self.tk.call(args)
           ^^^^^^^^^^^^^^^^^^
_tkinter.TclError: can't set fullscreen attribute for ".": override-redirect flag is set
2025-05-01 12:13:01,512 - INFO - root - <module> - Application has finished.
2025-05-01 12:13:15,760 - INFO - root - <module> - Application starting up.
2025-05-01 12:13:15,760 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:13:15,765 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:13:15,765 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:13:15,766 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:13:15,766 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:13:15,766 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:13:15,766 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:13:15,766 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:13:15,767 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:13:16,074 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:13:16,074 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: Wm.wm_state() takes from 1 to 2 positional arguments but 3 were given
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3921, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.state('-fullscreen', True)
TypeError: Wm.wm_state() takes from 1 to 2 positional arguments but 3 were given
2025-05-01 12:13:21,091 - INFO - root - <module> - Application has finished.
2025-05-01 12:13:24,837 - INFO - root - <module> - Application starting up.
2025-05-01 12:13:24,837 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:13:24,844 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:13:24,845 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:13:24,845 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:13:24,845 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:13:24,846 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:13:24,846 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:13:24,847 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:13:24,848 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:13:26,413 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:13:26,476 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 12:13:26,476 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 12:13:26,478 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 12:13:26,502 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 12:14:21,697 - INFO - root - <module> - Application starting up.
2025-05-01 12:14:21,703 - INFO - root - initialize_database - Initializing database...
2025-05-01 12:14:21,821 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 12:14:21,822 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 12:14:21,822 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 12:14:21,823 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 12:14:21,824 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 12:14:21,824 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 12:14:21,829 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 12:14:21,831 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 12:14:23,251 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 12:14:23,326 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 12:14:23,327 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 12:14:23,329 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 12:14:23,392 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 12:14:34,334 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 12:14:34,334 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 12:14:34,339 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 12:14:34,339 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:14:34,340 - DEBUG - root - check_password - Checking password hash.
2025-05-01 12:14:34,557 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 12:14:34,557 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 12:14:34,557 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 12:14:34,565 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 12:14:34,565 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 12:14:34,566 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 12:14:34,571 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 12:14:34,571 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 12:14:34,571 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 12:14:34,572 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 12:14:34,578 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 12:14:34,578 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 12:14:34,578 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 12:14:34,583 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-05-01 12:14:34,584 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:14:34,585 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-05-01 12:14:34,585 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 12:14:34,585 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 12:14:37,495 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 12:14:37,495 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 12:14:37,508 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 12:14:37,508 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 12:14:37,551 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 12:14:37,553 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 12:14:37,578 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 12:14:37,578 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 12:14:37,578 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 12:14:37,581 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 12:14:37,581 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:14:37,581 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 12:14:37,581 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 12:14:39,180 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 12:14:39,180 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 671, 870)
2025-05-01 12:14:39,287 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 671, 870)
2025-05-01 12:14:39,317 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 671, 870)
2025-05-01 12:14:39,328 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 671, 870)
2025-05-01 12:14:39,336 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 671, 870)
2025-05-01 12:14:42,035 - INFO - root - show_staff_management_view - Admin switching to Staff Details Management view.
2025-05-01 12:14:42,035 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 12:14:42,063 - DEBUG - root - __init__ - Initializing StaffManagementViewAdmin (Admin).
2025-05-01 12:14:42,064 - DEBUG - root - create_widgets - Creating widgets for StaffManagementViewAdmin (Admin).
2025-05-01 12:14:42,076 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 424, 220)
2025-05-01 12:14:42,077 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 12:14:42,083 - INFO - root - load_staff_list - Loading staff list in StaffManagementViewAdmin (Admin).
2025-05-01 12:14:42,083 - DEBUG - root - get_all_staff - Fetching all staff records with linked username.
2025-05-01 12:14:42,083 - DEBUG - root - execute_query - Executing query: 
        SELECT s.staff_id, s.name, s.speciality, s.contact_info, s.user_id, u.username
        FROM Staff s
        LEFT JOIN Users u ON s.user_id = u.user_id
        ORDER BY s.name
         with params: ()
2025-05-01 12:14:42,087 - DEBUG - root - execute_query - Query fetched 0 rows.
2025-05-01 12:14:42,087 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 12:14:42,087 - INFO - root - load_staff_list - No staff found in database.
2025-05-01 12:14:42,087 - DEBUG - root - clear_staff_form - Clearing staff details form (Admin).
2025-05-01 12:14:45,092 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 1, 413)
2025-05-01 12:14:45,096 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,134 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,140 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,228 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,493 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,540 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,580 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:45,636 - DEBUG - root - configure_scroll_region - Updating staff scrollregion: (0, 0, 558, 413)
2025-05-01 12:14:49,579 - INFO - root - on_closing - Application window closing.
2025-05-01 12:14:51,379 - INFO - root - on_closing - Application shutting down.
2025-05-01 12:14:51,409 - INFO - root - <module> - Application has finished.
2025-05-01 13:58:10,469 - INFO - root - <module> - Application starting up.
2025-05-01 13:58:10,470 - INFO - root - initialize_database - Initializing database...
2025-05-01 13:58:10,482 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 13:58:10,482 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 13:58:10,483 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 13:58:10,483 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 13:58:10,483 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 13:58:10,484 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 13:58:10,484 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 13:58:10,484 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 13:58:10,674 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 13:58:10,704 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 13:58:10,706 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 13:58:10,708 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 13:58:10,723 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 14:02:34,866 - INFO - root - <module> - Application starting up.
2025-05-01 14:02:34,867 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:02:34,872 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:02:34,873 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:02:34,873 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:02:34,873 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:02:34,874 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:02:34,874 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:02:34,874 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:02:34,875 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:02:35,367 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:02:35,369 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad geometry specifier "{0}x{1}+0+0"
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3920, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 488, in __init__
    self.geometry("{0}x{1}+0+0") # Increased size further for better viewing
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2120, in wm_geometry
    return self.tk.call('wm', 'geometry', self._w, newGeometry)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad geometry specifier "{0}x{1}+0+0"
2025-05-01 14:02:38,123 - INFO - root - <module> - Application has finished.
2025-05-01 14:02:41,374 - INFO - root - <module> - Application starting up.
2025-05-01 14:02:41,377 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:02:41,387 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:02:41,388 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:02:41,389 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:02:41,389 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:02:41,390 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:02:41,390 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:02:41,390 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:02:41,392 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:02:41,881 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:02:41,881 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad geometry specifier "{0}x{1}+0+0"
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3920, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 488, in __init__
    self.geometry("{0}x{1}+0+0") # Increased size further for better viewing
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2120, in wm_geometry
    return self.tk.call('wm', 'geometry', self._w, newGeometry)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad geometry specifier "{0}x{1}+0+0"
2025-05-01 14:02:45,963 - INFO - root - <module> - Application has finished.
2025-05-01 14:04:39,890 - INFO - root - <module> - Application starting up.
2025-05-01 14:04:39,891 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:04:39,895 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:04:39,895 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:04:39,896 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:04:39,896 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:04:39,897 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:04:39,897 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:04:39,897 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:04:39,898 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:04:40,042 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:04:40,043 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad attribute "-FullScreen": must be -alpha, -transparentcolor, -disabled, -fullscreen, -toolwindow, or -topmost
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3921, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.attributes("-FullScreen")
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2052, in wm_attributes
    return self.tk.call(args)
           ^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad attribute "-FullScreen": must be -alpha, -transparentcolor, -disabled, -fullscreen, -toolwindow, or -topmost
2025-05-01 14:04:45,204 - INFO - root - <module> - Application has finished.
2025-05-01 14:04:53,454 - INFO - root - <module> - Application starting up.
2025-05-01 14:04:53,455 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:04:53,461 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:04:53,462 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:04:53,462 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:04:53,462 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:04:53,463 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:04:53,463 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:04:53,463 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:04:53,463 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:04:53,607 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:04:53,650 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 14:04:53,651 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 14:04:53,653 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 14:04:53,672 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 14:05:01,207 - INFO - root - verify_login - Attempting login for user: admin
2025-05-01 14:05:01,208 - DEBUG - root - execute_query - Executing query: SELECT user_id, password, role FROM Users WHERE username = ? with params: ('admin',)
2025-05-01 14:05:01,213 - DEBUG - root - execute_query - Query fetched one row: Data found
2025-05-01 14:05:01,213 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 14:05:01,214 - DEBUG - root - check_password - Checking password hash.
2025-05-01 14:05:01,423 - INFO - root - verify_login - Login successful for user: admin, Role: Admin
2025-05-01 14:05:01,424 - INFO - root - login_successful - Login successful. User ID: 1, Role: Admin. Navigating to role frame.
2025-05-01 14:05:01,424 - INFO - root - switch_frame - Switching frame to: AdminFrame
2025-05-01 14:05:01,433 - DEBUG - root - switch_frame - Destroyed previous frame.
2025-05-01 14:05:01,434 - INFO - root - __init__ - Initializing AdminFrame.
2025-05-01 14:05:01,435 - DEBUG - root - create_widgets - Creating widgets for AdminFrame.
2025-05-01 14:05:01,439 - INFO - root - show_user_management_view - Admin switching to User Management view.
2025-05-01 14:05:01,439 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 14:05:01,439 - DEBUG - root - __init__ - Initializing UserManagementViewAdmin (Admin - View/Delete Logins Only).
2025-05-01 14:05:01,440 - DEBUG - root - create_widgets - Creating widgets for UserManagementViewAdmin (Admin).
2025-05-01 14:05:01,444 - INFO - root - load_user_list - Loading user list in UserManagementViewAdmin (Admin).
2025-05-01 14:05:01,444 - DEBUG - root - get_all_users - Fetching all user records with linked profiles.
2025-05-01 14:05:01,445 - DEBUG - root - execute_query - Executing query: 
        SELECT
            u.user_id,
            u.username,
            u.role,
            CASE
                WHEN u.role = 'Patient' THEN p.name
                WHEN u.role = 'Staff' THEN s.name
                ELSE NULL -- Or 'N/A' if preferred for display
            END AS linked_name,
            CASE
                WHEN u.role = 'Patient' THEN p.patient_id
                WHEN u.role = 'Staff' THEN s.staff_id
                ELSE NULL -- Or 'N/A'
            END AS linked_profile_id
        FROM Users u
        LEFT JOIN Patients p ON u.user_id = p.user_id AND u.role = 'Patient'
        LEFT JOIN Staff s ON u.user_id = s.user_id AND u.role = 'Staff'
        ORDER BY u.role, u.username
     with params: ()
2025-05-01 14:05:01,450 - DEBUG - root - execute_query - Query fetched 2 rows.
2025-05-01 14:05:01,451 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 14:05:01,451 - DEBUG - root - load_user_list - Populating user list with 2 records.
2025-05-01 14:05:01,452 - DEBUG - root - clear_selection - Clearing user selection (Admin).
2025-05-01 14:05:01,452 - DEBUG - root - switch_frame - Packed new frame: AdminFrame
2025-05-01 14:05:10,043 - INFO - root - show_patient_management_view - Admin switching to Patient Details Management view.
2025-05-01 14:05:10,043 - DEBUG - root - clear_content_frame - Clearing content frame in AdminFrame.
2025-05-01 14:05:10,047 - DEBUG - root - __init__ - Initializing PatientManagementView (Admin)
2025-05-01 14:05:10,048 - DEBUG - root - create_widgets - Creating widgets for PatientManagementView (Admin)
2025-05-01 14:05:10,108 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 495, 527)
2025-05-01 14:05:10,110 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 14:05:10,126 - INFO - root - load_patient_list - Loading patient list in PatientManagementView (Admin)
2025-05-01 14:05:10,126 - DEBUG - root - get_all_patients - Fetching all patient records.
2025-05-01 14:05:10,127 - DEBUG - root - execute_query - Executing query: SELECT patient_id, name, date_of_birth, gender, contact_number FROM Patients ORDER BY name with params: ()
2025-05-01 14:05:10,184 - DEBUG - root - execute_query - Query fetched 1 rows.
2025-05-01 14:05:10,185 - DEBUG - root - execute_query - Database connection closed after query execution.
2025-05-01 14:05:10,185 - DEBUG - root - load_patient_list - Populating patient list with 1 records.
2025-05-01 14:05:10,185 - DEBUG - root - clear_form - Clearing patient details form (Admin).
2025-05-01 14:05:11,764 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 1, 870)
2025-05-01 14:05:11,781 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,846 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,869 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,877 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,878 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,893 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,902 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,910 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,924 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,954 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,963 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,971 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,979 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:11,995 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,019 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,031 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,042 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,058 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,076 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,092 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,106 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,121 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,130 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,148 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,159 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,166 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,179 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,194 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,205 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,214 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,227 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,238 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,252 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,267 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,278 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,290 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,300 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,311 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,319 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,327 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:12,335 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,528 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,542 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,554 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,588 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,612 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,620 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,628 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,637 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,644 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,661 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,684 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,803 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,829 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,853 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,861 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,884 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,892 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,908 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,924 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,933 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,940 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,948 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,956 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,965 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,972 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,981 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,987 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:13,996 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,013 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,027 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,044 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,060 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,069 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,158 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,188 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,204 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,221 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,230 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,238 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,249 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,256 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,264 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,272 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,278 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,287 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,292 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,299 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,309 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,316 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,332 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,340 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,348 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,356 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,364 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,380 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,388 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,396 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,404 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,413 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,420 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,430 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,438 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,448 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,455 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,466 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,473 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,482 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,489 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,497 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,503 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,510 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:14,518 - DEBUG - root - configure_scroll_region - Updating scrollregion: (0, 0, 378, 870)
2025-05-01 14:05:15,740 - INFO - root - on_closing - Application window closing.
2025-05-01 14:05:17,446 - INFO - root - on_closing - Application shutting down.
2025-05-01 14:05:17,482 - INFO - root - <module> - Application has finished.
2025-05-01 14:05:28,108 - INFO - root - <module> - Application starting up.
2025-05-01 14:05:28,109 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:05:28,114 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:05:28,114 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:05:28,114 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:05:28,114 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:05:28,115 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:05:28,115 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:05:28,115 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:05:28,115 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:05:28,341 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:05:28,343 - CRITICAL - root - <module> - Unhandled exception during application startup or main loop: bad attribute "-zoom": must be -alpha, -transparentcolor, -disabled, -fullscreen, -toolwindow, or -topmost
Traceback (most recent call last):
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 3921, in <module>
    app = HealthcareApp()
          ^^^^^^^^^^^^^^^
  File "C:\Users\972479\OneDrive - Capital City College Group\Documents\Programming\lvl 2 Python\Team Assignment\Healthcare app 2.0\App v2.py", line 489, in __init__
    self.attributes("-zoom")
  File "C:\Program Files\Python312\Lib\tkinter\__init__.py", line 2052, in wm_attributes
    return self.tk.call(args)
           ^^^^^^^^^^^^^^^^^^
_tkinter.TclError: bad attribute "-zoom": must be -alpha, -transparentcolor, -disabled, -fullscreen, -toolwindow, or -topmost
2025-05-01 14:05:37,206 - INFO - root - <module> - Application has finished.
2025-05-01 14:05:45,566 - INFO - root - <module> - Application starting up.
2025-05-01 14:05:45,568 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:05:45,581 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:05:45,582 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:05:45,583 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:05:45,583 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:05:45,584 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:05:45,584 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:05:45,585 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:05:45,588 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:05:46,158 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:05:46,207 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 14:05:46,208 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 14:05:46,209 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 14:05:46,236 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 14:05:51,268 - INFO - root - on_closing - Application window closing.
2025-05-01 14:05:52,399 - INFO - root - on_closing - Application shutting down.
2025-05-01 14:05:52,411 - INFO - root - <module> - Application has finished.
2025-05-01 14:05:59,778 - INFO - root - <module> - Application starting up.
2025-05-01 14:05:59,779 - INFO - root - initialize_database - Initializing database...
2025-05-01 14:05:59,784 - DEBUG - root - initialize_database - Users table checked/created.
2025-05-01 14:05:59,784 - DEBUG - root - initialize_database - Patients table checked/created.
2025-05-01 14:05:59,784 - DEBUG - root - initialize_database - Staff table checked/created.
2025-05-01 14:05:59,785 - DEBUG - root - initialize_database - Treatments table checked/created.
2025-05-01 14:05:59,785 - DEBUG - root - initialize_database - Appointments table checked/created.
2025-05-01 14:05:59,785 - DEBUG - root - initialize_database - Insurance table checked/created.
2025-05-01 14:05:59,785 - INFO - root - initialize_database - Database 'healthcare.db' initialized successfully.
2025-05-01 14:05:59,786 - DEBUG - root - initialize_database - Database connection closed.
2025-05-01 14:05:59,948 - INFO - root - __init__ - Initializing GUI application.
2025-05-01 14:05:59,996 - INFO - root - show_login_frame - Displaying Login Frame.
2025-05-01 14:05:59,997 - INFO - root - switch_frame - Switching frame to: LoginFrame
2025-05-01 14:05:59,999 - DEBUG - root - __init__ - Initializing LoginFrame.
2025-05-01 14:06:00,018 - DEBUG - root - switch_frame - Packed new frame: LoginFrame
2025-05-01 14:06:09,452 - INFO - root - on_closing - Application window closing.
2025-05-01 14:06:10,926 - INFO - root - on_closing - Application shutting down.
2025-05-01 14:06:10,940 - INFO - root - <module> - Application has finished.
